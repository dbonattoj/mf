[src/graph/media_graph.cc:12, media_graph]
media_graph

[src/graph/media_source_node.cc:60, launch_]
source:: launch

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=-1)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 0)....

[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=-1)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [0, 1[ t=0

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 0) --> [0, 1[

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=0, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=0, readable_time_span=[0, 1[, writable_time_span=[1, 1[
reader state=-1, writer state=0, end_time=20, read_start_time=0


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=0)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 0)

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [1, 2[ t=1

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=0, readable_time_span=[1, 1[, writable_time_span=[1, 2[
reader state=0, writer state=-1, end_time=20, read_start_time=1


[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=0)

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=0)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 1)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=1, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=1, readable_time_span=[1, 2[, writable_time_span=[2, 2[
reader state=1, writer state=0, end_time=20, read_start_time=1


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=1)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 1) --> [1, 2[

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 1)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=1, readable_time_span=[2, 2[, writable_time_span=[2, 3[
reader state=0, writer state=1, end_time=20, read_start_time=2


[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=1)

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=1)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 2)....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [2, 3[ t=2

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=2, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=2, readable_time_span=[2, 3[, writable_time_span=[3, 3[
reader state=1, writer state=0, end_time=20, read_start_time=2


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=2)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 2) --> [2, 3[

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 2)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=2, readable_time_span=[3, 3[, writable_time_span=[3, 4[
reader state=0, writer state=1, end_time=20, read_start_time=3


[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=2)

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=2)

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [3, 4[ t=3

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 3)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=3, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=3, readable_time_span=[3, 4[, writable_time_span=[4, 4[
reader state=1, writer state=0, end_time=20, read_start_time=3


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=3)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 3) --> [3, 4[

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 3)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=3, readable_time_span=[4, 4[, writable_time_span=[4, 5[
reader state=0, writer state=1, end_time=20, read_start_time=4


[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=3)

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=3)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 4)....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [4, 5[ t=4

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=4, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=4, readable_time_span=[4, 5[, writable_time_span=[5, 5[
reader state=1, writer state=0, end_time=20, read_start_time=4


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=4)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 4) --> [4, 5[

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 4)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=4, readable_time_span=[5, 5[, writable_time_span=[5, 6[
reader state=0, writer state=1, end_time=20, read_start_time=5


[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=4)

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=4)

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [5, 6[ t=5

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 5)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=5, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=5, readable_time_span=[5, 6[, writable_time_span=[6, 6[
reader state=1, writer state=0, end_time=20, read_start_time=5


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=5)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 5) --> [5, 6[

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 5)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=5, readable_time_span=[6, 6[, writable_time_span=[6, 7[
reader state=0, writer state=1, end_time=20, read_start_time=6


[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=5)

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=5)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 6)....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [6, 7[ t=6

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=6, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=6, readable_time_span=[6, 7[, writable_time_span=[7, 7[
reader state=1, writer state=0, end_time=20, read_start_time=6


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=6)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 6) --> [6, 7[

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 6)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=6, readable_time_span=[7, 7[, writable_time_span=[7, 8[
reader state=0, writer state=1, end_time=20, read_start_time=7


[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=6)

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=6)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 7)....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [7, 8[ t=7

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=7, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=7, readable_time_span=[7, 8[, writable_time_span=[8, 8[
reader state=1, writer state=0, end_time=20, read_start_time=7


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=7)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 7) --> [7, 8[

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 7)

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [8, 9[ t=8

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=7, readable_time_span=[8, 8[, writable_time_span=[8, 9[
reader state=0, writer state=-1, end_time=20, read_start_time=8


[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=7)

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=7)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 8)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=8, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=8, readable_time_span=[8, 9[, writable_time_span=[9, 9[
reader state=1, writer state=0, end_time=20, read_start_time=8


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=8)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 8) --> [8, 9[

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 8)

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [9, 10[ t=9

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=8, readable_time_span=[9, 9[, writable_time_span=[9, 10[
reader state=0, writer state=-1, end_time=20, read_start_time=9


[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=8)

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=8)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 9)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=9, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=9, readable_time_span=[9, 10[, writable_time_span=[10, 10[
reader state=1, writer state=0, end_time=20, read_start_time=9


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=9)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 9) --> [9, 10[

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 9)

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [10, 11[ t=10

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=9, readable_time_span=[10, 10[, writable_time_span=[10, 11[
reader state=0, writer state=-1, end_time=20, read_start_time=10


[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=9)

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=9)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 10)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=10, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=10, readable_time_span=[10, 11[, writable_time_span=[11, 11[
reader state=1, writer state=0, end_time=20, read_start_time=10


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=10)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 10) --> [10, 11[

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 10)

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [11, 12[ t=11

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=10, readable_time_span=[11, 11[, writable_time_span=[11, 12[
reader state=0, writer state=-1, end_time=20, read_start_time=11


[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=10)

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=10)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 11)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=11, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=11, readable_time_span=[11, 12[, writable_time_span=[12, 12[
reader state=1, writer state=0, end_time=20, read_start_time=11


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=11)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 11) --> [11, 12[

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 11)

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [12, 13[ t=12

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=11, readable_time_span=[12, 12[, writable_time_span=[12, 13[
reader state=0, writer state=-1, end_time=20, read_start_time=12


[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=11)

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=11)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 12)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=12, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=12, readable_time_span=[12, 13[, writable_time_span=[13, 13[
reader state=1, writer state=0, end_time=20, read_start_time=12


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=12)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 12) --> [12, 13[

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 12)

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [13, 14[ t=13

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=12, readable_time_span=[13, 13[, writable_time_span=[13, 14[
reader state=0, writer state=-1, end_time=20, read_start_time=13


[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=12)

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=12)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 13)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=13, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=13, readable_time_span=[13, 14[, writable_time_span=[14, 14[
reader state=1, writer state=0, end_time=20, read_start_time=13


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=13)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 13) --> [13, 14[

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 13)

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [14, 15[ t=14

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=13, readable_time_span=[14, 14[, writable_time_span=[14, 15[
reader state=0, writer state=-1, end_time=20, read_start_time=14


[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=13)

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=13)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 14)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=14, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=14, readable_time_span=[14, 15[, writable_time_span=[15, 15[
reader state=1, writer state=0, end_time=20, read_start_time=14


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=14)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 14) --> [14, 15[

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 14)

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [15, 16[ t=15

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=14, readable_time_span=[15, 15[, writable_time_span=[15, 16[
reader state=0, writer state=-1, end_time=20, read_start_time=15


[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=14)

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=14)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 15)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=15, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=15, readable_time_span=[15, 16[, writable_time_span=[16, 16[
reader state=1, writer state=0, end_time=20, read_start_time=15


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=15)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 15) --> [15, 16[

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 15)

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [16, 17[ t=16

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=15, readable_time_span=[16, 16[, writable_time_span=[16, 17[
reader state=0, writer state=-1, end_time=20, read_start_time=16


[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=15)

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=15)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 16)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=16, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=16, readable_time_span=[16, 17[, writable_time_span=[17, 17[
reader state=1, writer state=0, end_time=20, read_start_time=16


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=16)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 16) --> [16, 17[

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 16)

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [17, 18[ t=17

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=16, readable_time_span=[17, 17[, writable_time_span=[17, 18[
reader state=0, writer state=-1, end_time=20, read_start_time=17


[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=16)

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=16)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 17)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=17, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=17, readable_time_span=[17, 18[, writable_time_span=[18, 18[
reader state=1, writer state=0, end_time=20, read_start_time=17


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=17)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 17) --> [17, 18[

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 17)

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [18, 19[ t=18

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=17, readable_time_span=[18, 18[, writable_time_span=[18, 19[
reader state=0, writer state=-1, end_time=20, read_start_time=18


[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=17)

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=17)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 18)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=18, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=18, readable_time_span=[18, 19[, writable_time_span=[19, 19[
reader state=1, writer state=0, end_time=20, read_start_time=18


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=18)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 18) --> [18, 19[

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 18)

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [19, 20[ t=19

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=18, readable_time_span=[19, 19[, writable_time_span=[19, 20[
reader state=0, writer state=-1, end_time=20, read_start_time=19


[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=18)

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=18)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 19)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=19, end=1), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=19, readable_time_span=[19, 20[, writable_time_span=[20, 20[
reader state=1, writer state=0, end_time=20, read_start_time=19


[src/graph/media_source_node.cc:14, thread_main_]
source:: ended

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 19) --> [19, 20[

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 19)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=1 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=19, readable_time_span=[20, 20[, writable_time_span=[20, 21[
reader state=0, writer state=0, end_time=20, read_start_time=20


[src/graph/media_sink_node.cc:23, pull_frame_]
sink: reached end!

[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=19)

[src/graph/media_graph.cc:53, run]
graph::reached end!

[src/graph/media_graph.cc:17, ~media_graph]
media_graph stopping

[src/graph/media_graph.cc:19, ~media_graph]
media_graph no more

[src/graph/media_graph.cc:12, media_graph]
media_graph

[src/graph/media_source_node.cc:60, launch_]
source:: launch

[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=-1)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [0, 1[ t=0

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=-1)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 0)....

[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = -1)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [0, 1[ t=0

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 0)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=0, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=0, readable_time_span=[0, 1[, writable_time_span=[1, 1[
reader state=1, writer state=0, end_time=20, read_start_time=0


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=0)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 0) --> [0, 1[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=0, readable_time_span=[0, 1[, writable_time_span=[1, 1[
reader state=-1, writer state=1, end_time=20, read_start_time=0


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 0)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=0, readable_time_span=[1, 1[, writable_time_span=[1, 2[
reader state=0, writer state=-1, end_time=20, read_start_time=1


[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [1, 2[ t=1

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=0, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=0, readable_time_span=[0, 1[, writable_time_span=[1, 1[
reader state=1, writer state=0, end_time=20, read_start_time=0


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 0)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 0) --> [0, 1[

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 0)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=0, readable_time_span=[1, 1[, writable_time_span=[1, 2[
reader state=0, writer state=1, end_time=20, read_start_time=1


[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=0)

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=0)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 1)....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [1, 2[ t=1

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 1)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=1, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=1, readable_time_span=[1, 2[, writable_time_span=[2, 2[
reader state=1, writer state=0, end_time=20, read_start_time=1


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=1)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 1) --> [1, 2[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=1, readable_time_span=[1, 2[, writable_time_span=[2, 2[
reader state=-1, writer state=1, end_time=20, read_start_time=1


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 1)

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [2, 3[ t=2

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=1, readable_time_span=[2, 2[, writable_time_span=[2, 3[
reader state=0, writer state=-1, end_time=20, read_start_time=2


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=1, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=1, readable_time_span=[1, 2[, writable_time_span=[2, 2[
reader state=1, writer state=0, end_time=20, read_start_time=1


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 1)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 1) --> [1, 2[

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 1)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=1, readable_time_span=[2, 2[, writable_time_span=[2, 3[
reader state=0, writer state=1, end_time=20, read_start_time=2


[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=1)

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=1)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 2)....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [2, 3[ t=2

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 2)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=2, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=2, readable_time_span=[2, 3[, writable_time_span=[3, 3[
reader state=1, writer state=0, end_time=20, read_start_time=2


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=2)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 2) --> [2, 3[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=2, readable_time_span=[2, 3[, writable_time_span=[3, 3[
reader state=-1, writer state=1, end_time=20, read_start_time=2


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 2)

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [3, 4[ t=3

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=2, readable_time_span=[3, 3[, writable_time_span=[3, 4[
reader state=0, writer state=-1, end_time=20, read_start_time=3


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=2, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=2, readable_time_span=[2, 3[, writable_time_span=[3, 3[
reader state=1, writer state=0, end_time=20, read_start_time=2


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 2)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 2) --> [2, 3[

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 2)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=2, readable_time_span=[3, 3[, writable_time_span=[3, 4[
reader state=0, writer state=1, end_time=20, read_start_time=3


[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=2)

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=2)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 3)....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [3, 4[ t=3

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 3)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=3, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=3, readable_time_span=[3, 4[, writable_time_span=[4, 4[
reader state=1, writer state=0, end_time=20, read_start_time=3


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=3)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 3) --> [3, 4[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=3, readable_time_span=[3, 4[, writable_time_span=[4, 4[
reader state=-1, writer state=1, end_time=20, read_start_time=3


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 3)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=3, readable_time_span=[4, 4[, writable_time_span=[4, 5[
reader state=0, writer state=1, end_time=20, read_start_time=4


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=3, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=3, readable_time_span=[3, 4[, writable_time_span=[4, 4[
reader state=1, writer state=0, end_time=20, read_start_time=3


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 3)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [4, 5[ t=4

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 3) --> [3, 4[

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 3)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=3, readable_time_span=[4, 4[, writable_time_span=[4, 5[
reader state=0, writer state=1, end_time=20, read_start_time=4


[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=3)

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=3)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 4)....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [4, 5[ t=4

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 4)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=4, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=4, readable_time_span=[4, 5[, writable_time_span=[5, 5[
reader state=1, writer state=0, end_time=20, read_start_time=4


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=4)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 4) --> [4, 5[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=4, readable_time_span=[4, 5[, writable_time_span=[5, 5[
reader state=-1, writer state=1, end_time=20, read_start_time=4


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 4)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=4, readable_time_span=[5, 5[, writable_time_span=[5, 6[
reader state=0, writer state=1, end_time=20, read_start_time=5


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [5, 6[ t=5

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=4, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=4, readable_time_span=[4, 5[, writable_time_span=[5, 5[
reader state=1, writer state=0, end_time=20, read_start_time=4


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 4)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 4) --> [4, 5[

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 4)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=4, readable_time_span=[5, 5[, writable_time_span=[5, 6[
reader state=0, writer state=1, end_time=20, read_start_time=5


[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=4)

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=4)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 5)....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [5, 6[ t=5

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 5)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=5, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=5, readable_time_span=[5, 6[, writable_time_span=[6, 6[
reader state=1, writer state=0, end_time=20, read_start_time=5


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=5)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 5) --> [5, 6[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=5, readable_time_span=[5, 6[, writable_time_span=[6, 6[
reader state=-1, writer state=1, end_time=20, read_start_time=5


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 5)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=5, readable_time_span=[6, 6[, writable_time_span=[6, 7[
reader state=0, writer state=1, end_time=20, read_start_time=6


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=5, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=5, readable_time_span=[5, 6[, writable_time_span=[6, 6[
reader state=1, writer state=0, end_time=20, read_start_time=5


[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [6, 7[ t=6

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 5) --> [5, 6[

[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 5)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 5)

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [6, 7[ t=6

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=5, readable_time_span=[6, 6[, writable_time_span=[6, 7[
reader state=0, writer state=-1, end_time=20, read_start_time=6


[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 6)....

[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=5)

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=5)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 6)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=6, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=6, readable_time_span=[6, 7[, writable_time_span=[7, 7[
reader state=1, writer state=0, end_time=20, read_start_time=6


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=6)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 6) --> [6, 7[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=6, readable_time_span=[6, 7[, writable_time_span=[7, 7[
reader state=-1, writer state=1, end_time=20, read_start_time=6


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 6)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=6, readable_time_span=[7, 7[, writable_time_span=[7, 8[
reader state=0, writer state=1, end_time=20, read_start_time=7


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=6, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=6, readable_time_span=[6, 7[, writable_time_span=[7, 7[
reader state=1, writer state=0, end_time=20, read_start_time=6


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 6)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [7, 8[ t=7

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 6) --> [6, 7[

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 6)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=6, readable_time_span=[7, 7[, writable_time_span=[7, 8[
reader state=0, writer state=1, end_time=20, read_start_time=7


[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=6)

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=6)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 7)....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [7, 8[ t=7

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 7)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=7, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=7, readable_time_span=[7, 8[, writable_time_span=[8, 8[
reader state=1, writer state=0, end_time=20, read_start_time=7


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=7)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 7) --> [7, 8[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=7, readable_time_span=[7, 8[, writable_time_span=[8, 8[
reader state=-1, writer state=1, end_time=20, read_start_time=7


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 7)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=7, readable_time_span=[8, 8[, writable_time_span=[8, 9[
reader state=0, writer state=1, end_time=20, read_start_time=8


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=7, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=7, readable_time_span=[7, 8[, writable_time_span=[8, 8[
reader state=1, writer state=0, end_time=20, read_start_time=7


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 7)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [8, 9[ t=8

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 7) --> [7, 8[

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 7)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=7, readable_time_span=[8, 8[, writable_time_span=[8, 9[
reader state=0, writer state=1, end_time=20, read_start_time=8


[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=7)

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=7)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 8)....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [8, 9[ t=8

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 8)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=8, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=8, readable_time_span=[8, 9[, writable_time_span=[9, 9[
reader state=1, writer state=0, end_time=20, read_start_time=8


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=8)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 8) --> [8, 9[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=8, readable_time_span=[8, 9[, writable_time_span=[9, 9[
reader state=-1, writer state=1, end_time=20, read_start_time=8


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 8)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=8, readable_time_span=[9, 9[, writable_time_span=[9, 10[
reader state=0, writer state=1, end_time=20, read_start_time=9


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=8, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=8, readable_time_span=[8, 9[, writable_time_span=[9, 9[
reader state=1, writer state=0, end_time=20, read_start_time=8


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 8)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [9, 10[ t=9

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 8) --> [8, 9[

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 8)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=8, readable_time_span=[9, 9[, writable_time_span=[9, 10[
reader state=0, writer state=1, end_time=20, read_start_time=9


[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=8)

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=8)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 9)....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [9, 10[ t=9

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 9)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=9, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=9, readable_time_span=[9, 10[, writable_time_span=[10, 10[
reader state=1, writer state=0, end_time=20, read_start_time=9


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=9)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 9) --> [9, 10[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=9, readable_time_span=[9, 10[, writable_time_span=[10, 10[
reader state=-1, writer state=1, end_time=20, read_start_time=9


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 9)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=9, readable_time_span=[10, 10[, writable_time_span=[10, 11[
reader state=0, writer state=1, end_time=20, read_start_time=10


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=9, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=9, readable_time_span=[9, 10[, writable_time_span=[10, 10[
reader state=1, writer state=0, end_time=20, read_start_time=9


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 9)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [10, 11[ t=10

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 9) --> [9, 10[

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 9)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=9, readable_time_span=[10, 10[, writable_time_span=[10, 11[
reader state=0, writer state=1, end_time=20, read_start_time=10


[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=9)

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=9)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 10)....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [10, 11[ t=10

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 10)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=10, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=10, readable_time_span=[10, 11[, writable_time_span=[11, 11[
reader state=1, writer state=0, end_time=20, read_start_time=10


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=10)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 10) --> [10, 11[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=10, readable_time_span=[10, 11[, writable_time_span=[11, 11[
reader state=-1, writer state=1, end_time=20, read_start_time=10


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 10)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=10, readable_time_span=[11, 11[, writable_time_span=[11, 12[
reader state=0, writer state=1, end_time=20, read_start_time=11


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [11, 12[ t=11

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=10, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
cannot lock mutex for debug_print



[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 10)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 10) --> [10, 11[

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 10)

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [11, 12[ t=11

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 11)....

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=10, readable_time_span=[11, 11[, writable_time_span=[11, 12[
reader state=0, writer state=-1, end_time=20, read_start_time=11


[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=10)

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=10)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 11)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=11, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=11, readable_time_span=[11, 12[, writable_time_span=[12, 12[
reader state=1, writer state=0, end_time=20, read_start_time=11


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=11)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 11) --> [11, 12[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=11, readable_time_span=[11, 12[, writable_time_span=[12, 12[
reader state=-1, writer state=1, end_time=20, read_start_time=11


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 11)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=11, readable_time_span=[12, 12[, writable_time_span=[12, 13[
reader state=0, writer state=1, end_time=20, read_start_time=12


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=11, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
cannot lock mutex for debug_print



[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 11)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [12, 13[ t=12

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 11) --> [11, 12[

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 11)

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [12, 13[ t=12

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=11, readable_time_span=[12, 12[, writable_time_span=[12, 13[
reader state=0, writer state=-1, end_time=20, read_start_time=12


[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 12)....

[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=11)

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=11)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 12)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=12, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=12, readable_time_span=[12, 13[, writable_time_span=[13, 13[
reader state=1, writer state=0, end_time=20, read_start_time=12


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=12)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 12) --> [12, 13[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=12, readable_time_span=[12, 13[, writable_time_span=[13, 13[
reader state=-1, writer state=1, end_time=20, read_start_time=12


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 12)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=12, readable_time_span=[13, 13[, writable_time_span=[13, 14[
reader state=0, writer state=1, end_time=20, read_start_time=13


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=12, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
cannot lock mutex for debug_print



[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [13, 14[ t=13

[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 12)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 12) --> [12, 13[

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 12)

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [13, 14[ t=13

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=12, readable_time_span=[13, 13[, writable_time_span=[13, 14[
reader state=0, writer state=-1, end_time=20, read_start_time=13


[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 13)....

[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=12)

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=12)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 13)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=13, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=13, readable_time_span=[13, 14[, writable_time_span=[14, 14[
reader state=1, writer state=0, end_time=20, read_start_time=13


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=13)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 13) --> [13, 14[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=13, readable_time_span=[13, 14[, writable_time_span=[14, 14[
reader state=-1, writer state=1, end_time=20, read_start_time=13


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 13)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=13, readable_time_span=[14, 14[, writable_time_span=[14, 15[
reader state=0, writer state=1, end_time=20, read_start_time=14


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=13, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
cannot lock mutex for debug_print



[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [14, 15[ t=14

[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 13)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 13) --> [13, 14[

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 13)

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [14, 15[ t=14

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 14)....

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=13, readable_time_span=[14, 14[, writable_time_span=[14, 15[
reader state=0, writer state=-1, end_time=20, read_start_time=14


[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=13)

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=13)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 14)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=14, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=14, readable_time_span=[14, 15[, writable_time_span=[15, 15[
reader state=1, writer state=0, end_time=20, read_start_time=14


[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 14) --> [14, 15[

[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=14)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=14, readable_time_span=[14, 15[, writable_time_span=[15, 15[
reader state=-1, writer state=1, end_time=20, read_start_time=14


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 14)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=14, readable_time_span=[15, 15[, writable_time_span=[15, 16[
reader state=0, writer state=1, end_time=20, read_start_time=15


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=14, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
cannot lock mutex for debug_print



[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [15, 16[ t=15

[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 14)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 14) --> [14, 15[

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 14)

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [15, 16[ t=15

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=14, readable_time_span=[15, 15[, writable_time_span=[15, 16[
reader state=0, writer state=-1, end_time=20, read_start_time=15


[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 15)....

[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=14)

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=14)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 15)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=15, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=15, readable_time_span=[15, 16[, writable_time_span=[16, 16[
reader state=1, writer state=0, end_time=20, read_start_time=15


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=15)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 15) --> [15, 16[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=15, readable_time_span=[15, 16[, writable_time_span=[16, 16[
reader state=-1, writer state=1, end_time=20, read_start_time=15


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 15)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=15, readable_time_span=[16, 16[, writable_time_span=[16, 17[
reader state=0, writer state=1, end_time=20, read_start_time=16


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=15, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
cannot lock mutex for debug_print



[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [16, 17[ t=16

[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 15)

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 15) --> [15, 16[

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 15)

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [16, 17[ t=16

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 16)....

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=15, readable_time_span=[16, 16[, writable_time_span=[16, 17[
reader state=0, writer state=-1, end_time=20, read_start_time=16


[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=15)

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=15)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 16)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=16, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=16, readable_time_span=[16, 17[, writable_time_span=[17, 17[
reader state=1, writer state=0, end_time=20, read_start_time=16


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=16)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 16) --> [16, 17[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=16, readable_time_span=[16, 17[, writable_time_span=[17, 17[
reader state=-1, writer state=1, end_time=20, read_start_time=16


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 16)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=16, readable_time_span=[17, 17[, writable_time_span=[17, 18[
reader state=0, writer state=1, end_time=20, read_start_time=17


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [17, 18[ t=17

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=16, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
cannot lock mutex for debug_print



[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 16)

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 16) --> [16, 17[

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 16)

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [17, 18[ t=17

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 17)....

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=16, readable_time_span=[17, 17[, writable_time_span=[17, 18[
reader state=0, writer state=-1, end_time=20, read_start_time=17


[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=16)

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=16)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 17)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=17, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=17, readable_time_span=[17, 18[, writable_time_span=[18, 18[
reader state=1, writer state=0, end_time=20, read_start_time=17


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=17)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 17) --> [17, 18[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=17, readable_time_span=[17, 18[, writable_time_span=[18, 18[
reader state=-1, writer state=1, end_time=20, read_start_time=17


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 17)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=17, readable_time_span=[18, 18[, writable_time_span=[18, 19[
reader state=0, writer state=1, end_time=20, read_start_time=18


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=17, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=17, readable_time_span=[17, 18[, writable_time_span=[18, 18[
reader state=1, writer state=0, end_time=20, read_start_time=17


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 17)

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [18, 19[ t=18

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 17) --> [17, 18[

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 17)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=17, readable_time_span=[18, 18[, writable_time_span=[18, 19[
reader state=0, writer state=1, end_time=20, read_start_time=18


[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=17)

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=17)

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [18, 19[ t=18

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 18)....

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 18)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=18, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=18, readable_time_span=[18, 19[, writable_time_span=[19, 19[
reader state=1, writer state=0, end_time=20, read_start_time=18


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=18)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 18) --> [18, 19[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=18, readable_time_span=[18, 19[, writable_time_span=[19, 19[
reader state=-1, writer state=1, end_time=20, read_start_time=18


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 18)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=18, readable_time_span=[19, 19[, writable_time_span=[19, 20[
reader state=0, writer state=1, end_time=20, read_start_time=19


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=18, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=18, readable_time_span=[18, 19[, writable_time_span=[19, 19[
reader state=1, writer state=0, end_time=20, read_start_time=18


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 18)

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [19, 20[ t=19

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 18) --> [18, 19[

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 18)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=18, readable_time_span=[19, 19[, writable_time_span=[19, 20[
reader state=0, writer state=1, end_time=20, read_start_time=19


[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=18)

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=18)

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [19, 20[ t=19

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 19)....

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 19)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=19, end=1), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
cannot lock mutex for debug_print



[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 19) --> [19, 20[

[src/graph/media_source_node.cc:14, thread_main_]
source:: ended

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=19, readable_time_span=[19, 20[, writable_time_span=[20, 20[
reader state=-1, writer state=0, end_time=20, read_start_time=19


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 19)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=1 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=19, readable_time_span=[20, 20[, writable_time_span=[20, 21[
reader state=0, writer state=0, end_time=20, read_start_time=20


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=19, end=1), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=19, readable_time_span=[19, 20[, writable_time_span=[20, 20[
reader state=1, writer state=0, end_time=20, read_start_time=19


[src/graph/media_node.cc:14, thread_main_]
node:: ended

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 19) --> [19, 20[

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 19)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=1 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=19, readable_time_span=[20, 20[, writable_time_span=[20, 21[
reader state=0, writer state=0, end_time=20, read_start_time=20


[src/graph/media_sink_node.cc:23, pull_frame_]
sink: reached end!

[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=19)

[src/graph/media_graph.cc:53, run]
graph::reached end!

[src/graph/media_graph.cc:17, ~media_graph]
media_graph stopping

[src/graph/media_graph.cc:19, ~media_graph]
media_graph no more

[src/graph/media_graph.cc:12, media_graph]
media_graph

[src/graph/media_source_node.cc:60, launch_]
source:: launch

[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=-1)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [0, 1[ t=0

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=-1)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 0)....

[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = -1)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [0, 1[ t=0

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 0)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=0, end=0), 
[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=1, full=0
total_duration=4
last_write_time=0, readable_time_span=[0, 1[, writable_time_span=[1, 4[
reader state=1, writer state=0, end_time=6, read_start_time=0


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=0)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [1, 2[ t=1

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 0) --> [0, 1[

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=1, end=0), 
[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=2, full=0
total_duration=4
last_write_time=1, readable_time_span=[0, 2[, writable_time_span=[2, 4[
reader state=-1, writer state=0, end_time=6, read_start_time=0


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=1)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [2, 3[ t=2

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=2, end=0), 
[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=3, full=0
total_duration=4
last_write_time=2, readable_time_span=[0, 3[, writable_time_span=[3, 4[
reader state=-1, writer state=0, end_time=6, read_start_time=0


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=2)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [3, 4[ t=3

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=3, full=0
total_duration=4
last_write_time=2, readable_time_span=[0, 3[, writable_time_span=[3, 4[
reader state=-1, writer state=-1, end_time=6, read_start_time=0


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 0)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=3, full=0
total_duration=4
last_write_time=2, readable_time_span=[0, 3[, writable_time_span=[3, 4[
reader state=0, writer state=-1, end_time=6, read_start_time=0


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=0, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=0, readable_time_span=[0, 1[, writable_time_span=[1, 1[
reader state=1, writer state=0, end_time=6, read_start_time=0


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 0)

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 0) --> [0, 1[

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 0)

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [1, 2[ t=1

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=0, readable_time_span=[1, 1[, writable_time_span=[1, 2[
reader state=0, writer state=-1, end_time=6, read_start_time=1


[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 1)....

[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=0)

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 1) --> [0, 2[

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=0)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 1)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=3, end=0), 
[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=4
last_write_time=3, readable_time_span=[0, 4[, writable_time_span=[4, 4[
reader state=-1, writer state=0, end_time=6, read_start_time=0


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=3)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=4
last_write_time=3, readable_time_span=[0, 4[, writable_time_span=[4, 4[
reader state=-1, writer state=1, end_time=6, read_start_time=0


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 1)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=4
last_write_time=3, readable_time_span=[0, 4[, writable_time_span=[4, 4[
reader state=0, writer state=1, end_time=6, read_start_time=0


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=1, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=1, readable_time_span=[1, 2[, writable_time_span=[2, 2[
reader state=1, writer state=0, end_time=6, read_start_time=1


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 1)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 1) --> [1, 2[

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 1)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=1, readable_time_span=[2, 2[, writable_time_span=[2, 3[
reader state=0, writer state=1, end_time=6, read_start_time=2


[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=1)

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [2, 3[ t=2

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=1)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 2)....

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 2)....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 2) --> [0, 3[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=4
last_write_time=3, readable_time_span=[0, 4[, writable_time_span=[4, 4[
reader state=-1, writer state=1, end_time=6, read_start_time=0


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 2)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=4
last_write_time=3, readable_time_span=[0, 4[, writable_time_span=[4, 4[
reader state=0, writer state=1, end_time=6, read_start_time=0


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=2, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=2, readable_time_span=[2, 3[, writable_time_span=[3, 3[
reader state=1, writer state=0, end_time=6, read_start_time=2


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 2)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 2) --> [2, 3[

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 2)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=2, readable_time_span=[3, 3[, writable_time_span=[3, 4[
reader state=0, writer state=1, end_time=6, read_start_time=3


[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=2)

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=2)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 3)....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [3, 4[ t=3

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 3)....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 3) --> [0, 4[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=4
last_write_time=3, readable_time_span=[0, 4[, writable_time_span=[4, 4[
reader state=-1, writer state=1, end_time=6, read_start_time=0


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 3)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=1, write_position=0, full=0
total_duration=4
last_write_time=3, readable_time_span=[1, 4[, writable_time_span=[4, 5[
reader state=0, writer state=1, end_time=6, read_start_time=1


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [4, 5[ t=4

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=3, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=3, readable_time_span=[3, 4[, writable_time_span=[4, 4[
reader state=1, writer state=0, end_time=6, read_start_time=3


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 3)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 3) --> [3, 4[

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 3)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=3, readable_time_span=[4, 4[, writable_time_span=[4, 5[
reader state=0, writer state=1, end_time=6, read_start_time=4


[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=3)

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=3)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 4)....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [4, 5[ t=4

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 4)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=4, end=0), 
[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=1, write_position=1, full=1
total_duration=4
last_write_time=4, readable_time_span=[1, 5[, writable_time_span=[5, 5[
reader state=4, writer state=0, end_time=6, read_start_time=1


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=4)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 4) --> [1, 5[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=1, write_position=1, full=1
total_duration=4
last_write_time=4, readable_time_span=[1, 5[, writable_time_span=[5, 5[
reader state=-1, writer state=1, end_time=6, read_start_time=1


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 4)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=2, write_position=1, full=0
total_duration=4
last_write_time=4, readable_time_span=[2, 5[, writable_time_span=[5, 6[
reader state=0, writer state=1, end_time=6, read_start_time=2


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=4, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=4, readable_time_span=[4, 5[, writable_time_span=[5, 5[
reader state=1, writer state=0, end_time=6, read_start_time=4


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 4)

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [5, 6[ t=5

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 4) --> [4, 5[

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 4)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=4, readable_time_span=[5, 5[, writable_time_span=[5, 6[
reader state=0, writer state=1, end_time=6, read_start_time=5


[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=4)

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=4)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 5)....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [5, 6[ t=5

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 5)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=5, end=1), 
[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
cannot lock mutex for debug_print



[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 5) --> [2, 6[

[src/graph/media_source_node.cc:14, thread_main_]
source:: ended

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=2, write_position=2, full=1
total_duration=4
last_write_time=5, readable_time_span=[2, 6[, writable_time_span=[6, 6[
reader state=-1, writer state=0, end_time=6, read_start_time=2


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 5)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=3, write_position=2, full=0
total_duration=4
last_write_time=5, readable_time_span=[3, 6[, writable_time_span=[6, 7[
reader state=0, writer state=0, end_time=6, read_start_time=3


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=5, end=1), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=5, readable_time_span=[5, 6[, writable_time_span=[6, 6[
reader state=1, writer state=0, end_time=6, read_start_time=5


[src/graph/media_node.cc:14, thread_main_]
node:: ended

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 5) --> [5, 6[

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 5)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=1 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=5, readable_time_span=[6, 6[, writable_time_span=[6, 7[
reader state=0, writer state=0, end_time=6, read_start_time=6


[src/graph/media_sink_node.cc:23, pull_frame_]
sink: reached end!

[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=5)

[src/graph/media_graph.cc:53, run]
graph::reached end!

[src/graph/media_graph.cc:17, ~media_graph]
media_graph stopping

[src/graph/media_graph.cc:19, ~media_graph]
media_graph no more

[src/graph/media_graph.cc:12, media_graph]
media_graph

[src/graph/media_source_node.cc:60, launch_]
source:: launch

[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=-1)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=-1)

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [0, 1[ t=0

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 0)....

[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = -1)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [0, 1[ t=0

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 0)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=0, end=0), 
[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=1, full=0
total_duration=4
last_write_time=0, readable_time_span=[0, 1[, writable_time_span=[1, 4[
reader state=4, writer state=0, end_time=6, read_start_time=0


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=0)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [1, 2[ t=1

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=1, end=0), 
[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=2, full=0
total_duration=4
last_write_time=1, readable_time_span=[0, 2[, writable_time_span=[2, 4[
reader state=4, writer state=0, end_time=6, read_start_time=0


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=1)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [2, 3[ t=2

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=2, end=0), 
[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=3, full=0
total_duration=4
last_write_time=2, readable_time_span=[0, 3[, writable_time_span=[3, 4[
reader state=4, writer state=0, end_time=6, read_start_time=0


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=2)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [3, 4[ t=3

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=3, end=0), 
[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=4
last_write_time=3, readable_time_span=[0, 4[, writable_time_span=[4, 4[
reader state=4, writer state=0, end_time=6, read_start_time=0


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=3)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 0) --> [0, 4[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=4
last_write_time=3, readable_time_span=[0, 4[, writable_time_span=[4, 4[
reader state=-1, writer state=1, end_time=6, read_start_time=0


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 0)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=1, write_position=0, full=0
total_duration=4
last_write_time=3, readable_time_span=[1, 4[, writable_time_span=[4, 5[
reader state=0, writer state=1, end_time=6, read_start_time=1


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=0, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
cannot lock mutex for debug_print



[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [4, 5[ t=4

[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 0)

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 0) --> [0, 1[

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 0)

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [1, 2[ t=1

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 1)....

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=0, readable_time_span=[1, 1[, writable_time_span=[1, 2[
reader state=0, writer state=-1, end_time=6, read_start_time=1


[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=0)

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=0)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 1)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=4, end=0), 
[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
cannot lock mutex for debug_print



[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=4)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 1) --> [1, 5[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=1, write_position=1, full=1
total_duration=4
last_write_time=4, readable_time_span=[1, 5[, writable_time_span=[5, 5[
reader state=-1, writer state=1, end_time=6, read_start_time=1


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 1)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
cannot lock mutex for debug_print



[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=1, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
cannot lock mutex for debug_print



[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [5, 6[ t=5

[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 1)

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 1) --> [1, 2[

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 1)

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [2, 3[ t=2

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 2)....

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=1, readable_time_span=[2, 2[, writable_time_span=[2, 3[
reader state=0, writer state=-1, end_time=6, read_start_time=2


[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=1)

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=1)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 2)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=5, end=1), 
[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=2, write_position=2, full=1
total_duration=4
last_write_time=5, readable_time_span=[2, 6[, writable_time_span=[6, 6[
reader state=4, writer state=0, end_time=6, read_start_time=2


[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 2) --> [2, 6[

[src/graph/media_source_node.cc:14, thread_main_]
source:: ended

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=2, write_position=2, full=1
total_duration=4
last_write_time=5, readable_time_span=[2, 6[, writable_time_span=[6, 6[
reader state=-1, writer state=0, end_time=6, read_start_time=2


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 2)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=3, write_position=2, full=0
total_duration=4
last_write_time=5, readable_time_span=[3, 6[, writable_time_span=[6, 7[
reader state=0, writer state=0, end_time=6, read_start_time=3


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=2, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
cannot lock mutex for debug_print



[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 2)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 2) --> [2, 3[

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 2)

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [3, 4[ t=3

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=2, readable_time_span=[3, 3[, writable_time_span=[3, 4[
reader state=0, writer state=-1, end_time=6, read_start_time=3


[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 3)....

[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=2)

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=2)

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 3) --> [3, 6[

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 3)....

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=3, write_position=2, full=0
total_duration=4
last_write_time=5, readable_time_span=[3, 6[, writable_time_span=[6, 7[
reader state=-1, writer state=0, end_time=6, read_start_time=3


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 3)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=2, full=0
total_duration=4
last_write_time=5, readable_time_span=[4, 6[, writable_time_span=[6, 8[
reader state=0, writer state=0, end_time=6, read_start_time=4


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=3, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
cannot lock mutex for debug_print



[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 3)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 3) --> [3, 4[

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 3)

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [4, 5[ t=4

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=3, readable_time_span=[4, 4[, writable_time_span=[4, 5[
reader state=0, writer state=-1, end_time=6, read_start_time=4


[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 4)....

[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=3)

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=3)

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 4) --> [4, 6[

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 4)....

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=2, full=0
total_duration=4
last_write_time=5, readable_time_span=[4, 6[, writable_time_span=[6, 8[
reader state=-1, writer state=0, end_time=6, read_start_time=4


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 4)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=1, write_position=2, full=0
total_duration=4
last_write_time=5, readable_time_span=[5, 6[, writable_time_span=[6, 9[
reader state=0, writer state=0, end_time=6, read_start_time=5


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=4, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
cannot lock mutex for debug_print



[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 4)

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 4) --> [4, 5[

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 4)

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [5, 6[ t=5

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 5)....

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=4, readable_time_span=[5, 5[, writable_time_span=[5, 6[
reader state=0, writer state=-1, end_time=6, read_start_time=5


[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=4)

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 5) --> [5, 6[

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=4)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 5)....

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=1, write_position=2, full=0
total_duration=4
last_write_time=5, readable_time_span=[5, 6[, writable_time_span=[6, 9[
reader state=-1, writer state=0, end_time=6, read_start_time=5


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 5)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=1 - 
 output:=[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=2, write_position=2, full=0
total_duration=4
last_write_time=5, readable_time_span=[6, 6[, writable_time_span=[6, 10[
reader state=0, writer state=0, end_time=6, read_start_time=6


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=5, end=1), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=5, readable_time_span=[5, 6[, writable_time_span=[6, 6[
reader state=1, writer state=0, end_time=6, read_start_time=5


[src/graph/media_node.cc:14, thread_main_]
node:: ended

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 5) --> [5, 6[

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 5)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=1 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=5, readable_time_span=[6, 6[, writable_time_span=[6, 7[
reader state=0, writer state=0, end_time=6, read_start_time=6


[src/graph/media_sink_node.cc:23, pull_frame_]
sink: reached end!

[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=5)

[src/graph/media_graph.cc:53, run]
graph::reached end!

[src/graph/media_graph.cc:17, ~media_graph]
media_graph stopping

[src/graph/media_graph.cc:19, ~media_graph]
media_graph no more

[src/graph/media_graph.cc:12, media_graph]
media_graph

[src/graph/media_source_node.cc:60, launch_]
source:: launch

[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=-1)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [0, 1[ t=0

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=-1)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 0)....

[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = -1)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [0, 1[ t=0

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 0)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=0, end=0), 
[frame_shape=(320, 240), required_duration=7, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=1, full=0
total_duration=7
last_write_time=0, readable_time_span=[0, 1[, writable_time_span=[1, 7[
reader state=4, writer state=0, end_time=6, read_start_time=0


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=0)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [1, 2[ t=1

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=1, end=0), 
[frame_shape=(320, 240), required_duration=7, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=2, full=0
total_duration=7
last_write_time=1, readable_time_span=[0, 2[, writable_time_span=[2, 7[
reader state=4, writer state=0, end_time=6, read_start_time=0


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=1)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [2, 3[ t=2

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=2, end=0), 
[frame_shape=(320, 240), required_duration=7, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=3, full=0
total_duration=7
last_write_time=2, readable_time_span=[0, 3[, writable_time_span=[3, 7[
reader state=4, writer state=0, end_time=6, read_start_time=0


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=2)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [3, 4[ t=3

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=3, end=0), 
[frame_shape=(320, 240), required_duration=7, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=4, full=0
total_duration=7
last_write_time=3, readable_time_span=[0, 4[, writable_time_span=[4, 7[
reader state=4, writer state=0, end_time=6, read_start_time=0


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=3)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [4, 5[ t=4

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 0) --> [0, 4[

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=4, end=0), 
[frame_shape=(320, 240), required_duration=7, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=5, full=0
total_duration=7
last_write_time=4, readable_time_span=[0, 5[, writable_time_span=[5, 7[
reader state=-1, writer state=0, end_time=6, read_start_time=0


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=4)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [5, 6[ t=5

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=5, end=1), 
[frame_shape=(320, 240), required_duration=7, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=6, full=0
total_duration=7
last_write_time=5, readable_time_span=[0, 6[, writable_time_span=[6, 7[
reader state=-1, writer state=0, end_time=6, read_start_time=0


[src/graph/media_source_node.cc:14, thread_main_]
source:: ended

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=7, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=6, full=0
total_duration=7
last_write_time=5, readable_time_span=[0, 6[, writable_time_span=[6, 7[
reader state=-1, writer state=0, end_time=6, read_start_time=0


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 0)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=7, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=6, full=0
total_duration=7
last_write_time=5, readable_time_span=[0, 6[, writable_time_span=[6, 7[
reader state=0, writer state=0, end_time=6, read_start_time=0


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=0, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
cannot lock mutex for debug_print



[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 0)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 0) --> [0, 1[

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 0)

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [1, 2[ t=1

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=0, readable_time_span=[1, 1[, writable_time_span=[1, 2[
reader state=0, writer state=-1, end_time=6, read_start_time=1


[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 1)....

[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=0)

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=0)

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 1) --> [0, 5[

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 1)....

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=7, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=6, full=0
total_duration=7
last_write_time=5, readable_time_span=[0, 6[, writable_time_span=[6, 7[
reader state=-1, writer state=0, end_time=6, read_start_time=0


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 1)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=7, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=6, full=0
total_duration=7
last_write_time=5, readable_time_span=[0, 6[, writable_time_span=[6, 7[
reader state=0, writer state=0, end_time=6, read_start_time=0


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=1, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=1, readable_time_span=[1, 2[, writable_time_span=[2, 2[
reader state=-1, writer state=0, end_time=6, read_start_time=1


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 1)

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 1) --> [1, 2[

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 1)

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [2, 3[ t=2

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 2)....

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=1, readable_time_span=[2, 2[, writable_time_span=[2, 3[
reader state=0, writer state=-1, end_time=6, read_start_time=2


[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 2) --> [0, 6[

[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=1)

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=1)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 2)....

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=7, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=6, full=0
total_duration=7
last_write_time=5, readable_time_span=[0, 6[, writable_time_span=[6, 7[
reader state=-1, writer state=0, end_time=6, read_start_time=0


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 2)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=7, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=6, full=0
total_duration=7
last_write_time=5, readable_time_span=[0, 6[, writable_time_span=[6, 7[
reader state=0, writer state=0, end_time=6, read_start_time=0


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=2, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=2, readable_time_span=[2, 3[, writable_time_span=[3, 3[
reader state=-1, writer state=0, end_time=6, read_start_time=2


[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 2) --> [2, 3[

[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 2)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 2)

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [3, 4[ t=3

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=2, readable_time_span=[3, 3[, writable_time_span=[3, 4[
reader state=0, writer state=-1, end_time=6, read_start_time=3


[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 3)....

[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=2)

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 3) --> [0, 6[

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=2)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 3)....

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=7, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=6, full=0
total_duration=7
last_write_time=5, readable_time_span=[0, 6[, writable_time_span=[6, 7[
reader state=-1, writer state=0, end_time=6, read_start_time=0


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 3)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=7, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=1, write_position=6, full=0
total_duration=7
last_write_time=5, readable_time_span=[1, 6[, writable_time_span=[6, 8[
reader state=0, writer state=0, end_time=6, read_start_time=1


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=3, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=3, readable_time_span=[3, 4[, writable_time_span=[4, 4[
reader state=-1, writer state=0, end_time=6, read_start_time=3


[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 3) --> [3, 4[

[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 3)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 3)

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [4, 5[ t=4

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=3, readable_time_span=[4, 4[, writable_time_span=[4, 5[
reader state=0, writer state=-1, end_time=6, read_start_time=4


[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 4)....

[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=3)

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=3)

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 4) --> [1, 6[

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 4)....

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=7, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=1, write_position=6, full=0
total_duration=7
last_write_time=5, readable_time_span=[1, 6[, writable_time_span=[6, 8[
reader state=-1, writer state=0, end_time=6, read_start_time=1


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 4)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=7, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=2, write_position=6, full=0
total_duration=7
last_write_time=5, readable_time_span=[2, 6[, writable_time_span=[6, 9[
reader state=0, writer state=0, end_time=6, read_start_time=2


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=4, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=4, readable_time_span=[4, 5[, writable_time_span=[5, 5[
reader state=-1, writer state=0, end_time=6, read_start_time=4


[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 4) --> [4, 5[

[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 4)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 4)

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [5, 6[ t=5

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 5)....

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=4, readable_time_span=[5, 5[, writable_time_span=[5, 6[
reader state=0, writer state=-1, end_time=6, read_start_time=5


[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=4)

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 5) --> [2, 6[

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=4)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 5)....

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=7, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=2, write_position=6, full=0
total_duration=7
last_write_time=5, readable_time_span=[2, 6[, writable_time_span=[6, 9[
reader state=-1, writer state=0, end_time=6, read_start_time=2


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 5)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=7, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=3, write_position=6, full=0
total_duration=7
last_write_time=5, readable_time_span=[3, 6[, writable_time_span=[6, 10[
reader state=0, writer state=0, end_time=6, read_start_time=3


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=5, end=1), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=5, readable_time_span=[5, 6[, writable_time_span=[6, 6[
reader state=-1, writer state=0, end_time=6, read_start_time=5


[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 5) --> [5, 6[

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 5)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=1 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=5, readable_time_span=[6, 6[, writable_time_span=[6, 7[
reader state=0, writer state=0, end_time=6, read_start_time=6


[src/graph/media_node.cc:14, thread_main_]
node:: ended

[src/graph/media_sink_node.cc:23, pull_frame_]
sink: reached end!

[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=5)

[src/graph/media_graph.cc:53, run]
graph::reached end!

[src/graph/media_graph.cc:17, ~media_graph]
media_graph stopping

[src/graph/media_graph.cc:19, ~media_graph]
media_graph no more

[src/graph/media_graph.cc:12, media_graph]
media_graph

[src/graph/media_source_node.cc:60, launch_]
source:: launch

[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=-1)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [0, 1[ t=0

[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = -1)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=-1)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 0)....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [0, 1[ t=0

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 0)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=0, end=0), 
[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=1, full=0
total_duration=4
last_write_time=0, readable_time_span=[0, 1[, writable_time_span=[1, 4[
reader state=4, writer state=0, end_time=20, read_start_time=0


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=0)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [1, 2[ t=1

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=1, end=0), 
[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=2, full=0
total_duration=4
last_write_time=1, readable_time_span=[0, 2[, writable_time_span=[2, 4[
reader state=4, writer state=0, end_time=20, read_start_time=0


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=1)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [2, 3[ t=2

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=2, end=0), 
[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=3, full=0
total_duration=4
last_write_time=2, readable_time_span=[0, 3[, writable_time_span=[3, 4[
reader state=4, writer state=0, end_time=20, read_start_time=0


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=2)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [3, 4[ t=3

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=3, end=0), 
[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=4
last_write_time=3, readable_time_span=[0, 4[, writable_time_span=[4, 4[
reader state=4, writer state=0, end_time=20, read_start_time=0


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=3)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 0) --> [0, 4[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=4
last_write_time=3, readable_time_span=[0, 4[, writable_time_span=[4, 4[
reader state=-1, writer state=1, end_time=20, read_start_time=0


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 0)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=1, write_position=0, full=0
total_duration=4
last_write_time=3, readable_time_span=[1, 4[, writable_time_span=[4, 5[
reader state=0, writer state=-1, end_time=20, read_start_time=1


[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [4, 5[ t=4

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=0, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=0, readable_time_span=[0, 1[, writable_time_span=[1, 1[
reader state=1, writer state=0, end_time=20, read_start_time=0


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 0)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 0) --> [0, 1[

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 0)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=0, readable_time_span=[1, 1[, writable_time_span=[1, 2[
reader state=0, writer state=1, end_time=20, read_start_time=1


[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=0)

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=0)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 1)....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [1, 2[ t=1

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 1)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=4, end=0), 
[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=1, write_position=1, full=1
total_duration=4
last_write_time=4, readable_time_span=[1, 5[, writable_time_span=[5, 5[
reader state=4, writer state=0, end_time=20, read_start_time=1


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=4)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 1) --> [1, 5[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=1, write_position=1, full=1
total_duration=4
last_write_time=4, readable_time_span=[1, 5[, writable_time_span=[5, 5[
reader state=-1, writer state=1, end_time=20, read_start_time=1


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 1)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=2, write_position=1, full=0
total_duration=4
last_write_time=4, readable_time_span=[2, 5[, writable_time_span=[5, 6[
reader state=0, writer state=1, end_time=20, read_start_time=2


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [5, 6[ t=5

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=1, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=1, readable_time_span=[1, 2[, writable_time_span=[2, 2[
reader state=1, writer state=0, end_time=20, read_start_time=1


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 1)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 1) --> [1, 2[

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 1)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=1, readable_time_span=[2, 2[, writable_time_span=[2, 3[
reader state=0, writer state=1, end_time=20, read_start_time=2


[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=1)

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=1)

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [2, 3[ t=2

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 2)....

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 2)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=5, end=0), 
[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=2, write_position=2, full=1
total_duration=4
last_write_time=5, readable_time_span=[2, 6[, writable_time_span=[6, 6[
reader state=4, writer state=0, end_time=20, read_start_time=2


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=5)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 2) --> [2, 6[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=2, write_position=2, full=1
total_duration=4
last_write_time=5, readable_time_span=[2, 6[, writable_time_span=[6, 6[
reader state=-1, writer state=1, end_time=20, read_start_time=2


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 2)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=3, write_position=2, full=0
total_duration=4
last_write_time=5, readable_time_span=[3, 6[, writable_time_span=[6, 7[
reader state=0, writer state=1, end_time=20, read_start_time=3


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=2, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=2, readable_time_span=[2, 3[, writable_time_span=[3, 3[
reader state=1, writer state=0, end_time=20, read_start_time=2


[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [6, 7[ t=6

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 2) --> [2, 3[

[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 2)

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 2)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
cannot lock mutex for debug_print



[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=2)

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [3, 4[ t=3

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=2)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 3)....

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 3)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=6, end=0), 
[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=3, write_position=3, full=1
total_duration=4
last_write_time=6, readable_time_span=[3, 7[, writable_time_span=[7, 7[
reader state=4, writer state=0, end_time=20, read_start_time=3


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=6)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 3) --> [3, 7[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=3, write_position=3, full=1
total_duration=4
last_write_time=6, readable_time_span=[3, 7[, writable_time_span=[7, 7[
reader state=-1, writer state=1, end_time=20, read_start_time=3


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 3)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=3, full=0
total_duration=4
last_write_time=6, readable_time_span=[4, 7[, writable_time_span=[7, 8[
reader state=0, writer state=1, end_time=20, read_start_time=4


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=3, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=3, readable_time_span=[3, 4[, writable_time_span=[4, 4[
reader state=1, writer state=0, end_time=20, read_start_time=3


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 3)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [7, 8[ t=7

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 3) --> [3, 4[

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 3)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=3, readable_time_span=[4, 4[, writable_time_span=[4, 5[
reader state=0, writer state=1, end_time=20, read_start_time=4


[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=3)

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=3)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 4)....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [4, 5[ t=4

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 4)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=7, end=0), 
[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=4
last_write_time=7, readable_time_span=[4, 8[, writable_time_span=[8, 8[
reader state=4, writer state=0, end_time=20, read_start_time=4


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=7)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 4) --> [4, 8[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=4
last_write_time=7, readable_time_span=[4, 8[, writable_time_span=[8, 8[
reader state=-1, writer state=1, end_time=20, read_start_time=4


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 4)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=1, write_position=0, full=0
total_duration=4
last_write_time=7, readable_time_span=[5, 8[, writable_time_span=[8, 9[
reader state=0, writer state=1, end_time=20, read_start_time=5


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=4, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=4, readable_time_span=[4, 5[, writable_time_span=[5, 5[
reader state=1, writer state=0, end_time=20, read_start_time=4


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 4)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [8, 9[ t=8

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 4) --> [4, 5[

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 4)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=4, readable_time_span=[5, 5[, writable_time_span=[5, 6[
reader state=0, writer state=1, end_time=20, read_start_time=5


[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=4)

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=4)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 5)....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [5, 6[ t=5

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 5)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=8, end=0), 
[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=1, write_position=1, full=1
total_duration=4
last_write_time=8, readable_time_span=[5, 9[, writable_time_span=[9, 9[
reader state=4, writer state=0, end_time=20, read_start_time=5


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=8)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 5) --> [5, 9[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=1, write_position=1, full=1
total_duration=4
last_write_time=8, readable_time_span=[5, 9[, writable_time_span=[9, 9[
reader state=-1, writer state=1, end_time=20, read_start_time=5


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 5)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=2, write_position=1, full=0
total_duration=4
last_write_time=8, readable_time_span=[6, 9[, writable_time_span=[9, 10[
reader state=0, writer state=1, end_time=20, read_start_time=6


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=5, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=5, readable_time_span=[5, 6[, writable_time_span=[6, 6[
reader state=1, writer state=0, end_time=20, read_start_time=5


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 5)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [9, 10[ t=9

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 5) --> [5, 6[

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 5)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=5, readable_time_span=[6, 6[, writable_time_span=[6, 7[
reader state=0, writer state=1, end_time=20, read_start_time=6


[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=5)

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=5)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 6)....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [6, 7[ t=6

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 6)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=9, end=0), 
[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=2, write_position=2, full=1
total_duration=4
last_write_time=9, readable_time_span=[6, 10[, writable_time_span=[10, 10[
reader state=4, writer state=0, end_time=20, read_start_time=6


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=9)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 6) --> [6, 10[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=2, write_position=2, full=1
total_duration=4
last_write_time=9, readable_time_span=[6, 10[, writable_time_span=[10, 10[
reader state=-1, writer state=1, end_time=20, read_start_time=6


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 6)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=3, write_position=2, full=0
total_duration=4
last_write_time=9, readable_time_span=[7, 10[, writable_time_span=[10, 11[
reader state=0, writer state=1, end_time=20, read_start_time=7


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=6, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=6, readable_time_span=[6, 7[, writable_time_span=[7, 7[
reader state=1, writer state=0, end_time=20, read_start_time=6


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 6)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [10, 11[ t=10

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 6) --> [6, 7[

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 6)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=6, readable_time_span=[7, 7[, writable_time_span=[7, 8[
reader state=0, writer state=1, end_time=20, read_start_time=7


[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=6)

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=6)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 7)....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [7, 8[ t=7

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 7)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=10, end=0), 
[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=3, write_position=3, full=1
total_duration=4
last_write_time=10, readable_time_span=[7, 11[, writable_time_span=[11, 11[
reader state=4, writer state=0, end_time=20, read_start_time=7


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=10)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 7) --> [7, 11[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=3, write_position=3, full=1
total_duration=4
last_write_time=10, readable_time_span=[7, 11[, writable_time_span=[11, 11[
reader state=-1, writer state=1, end_time=20, read_start_time=7


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 7)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=3, full=0
total_duration=4
last_write_time=10, readable_time_span=[8, 11[, writable_time_span=[11, 12[
reader state=0, writer state=1, end_time=20, read_start_time=8


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [11, 12[ t=11

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=7, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=7, readable_time_span=[7, 8[, writable_time_span=[8, 8[
reader state=1, writer state=0, end_time=20, read_start_time=7


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 7)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 7) --> [7, 8[

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 7)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
cannot lock mutex for debug_print



[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=7)

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [8, 9[ t=8

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=7)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 8)....

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 8)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=11, end=0), 
[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=4
last_write_time=11, readable_time_span=[8, 12[, writable_time_span=[12, 12[
reader state=4, writer state=0, end_time=20, read_start_time=8


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=11)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 8) --> [8, 12[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=4
last_write_time=11, readable_time_span=[8, 12[, writable_time_span=[12, 12[
reader state=-1, writer state=1, end_time=20, read_start_time=8


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 8)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=1, write_position=0, full=0
total_duration=4
last_write_time=11, readable_time_span=[9, 12[, writable_time_span=[12, 13[
reader state=0, writer state=1, end_time=20, read_start_time=9


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=8, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=8, readable_time_span=[8, 9[, writable_time_span=[9, 9[
reader state=1, writer state=0, end_time=20, read_start_time=8


[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [12, 13[ t=12

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 8) --> [8, 9[

[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 8)

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 8)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
cannot lock mutex for debug_print



[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=8)

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [9, 10[ t=9

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=8)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 9)....

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 9)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=12, end=0), 
[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=1, write_position=1, full=1
total_duration=4
last_write_time=12, readable_time_span=[9, 13[, writable_time_span=[13, 13[
reader state=4, writer state=0, end_time=20, read_start_time=9


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=12)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 9) --> [9, 13[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=1, write_position=1, full=1
total_duration=4
last_write_time=12, readable_time_span=[9, 13[, writable_time_span=[13, 13[
reader state=-1, writer state=1, end_time=20, read_start_time=9


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 9)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=2, write_position=1, full=0
total_duration=4
last_write_time=12, readable_time_span=[10, 13[, writable_time_span=[13, 14[
reader state=0, writer state=1, end_time=20, read_start_time=10


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=9, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=9, readable_time_span=[9, 10[, writable_time_span=[10, 10[
reader state=1, writer state=0, end_time=20, read_start_time=9


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 9)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [13, 14[ t=13

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 9) --> [9, 10[

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 9)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=9, readable_time_span=[10, 10[, writable_time_span=[10, 11[
reader state=0, writer state=1, end_time=20, read_start_time=10


[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=9)

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=9)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 10)....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [10, 11[ t=10

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 10)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=13, end=0), 
[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=2, write_position=2, full=1
total_duration=4
last_write_time=13, readable_time_span=[10, 14[, writable_time_span=[14, 14[
reader state=4, writer state=0, end_time=20, read_start_time=10


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=13)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 10) --> [10, 14[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=2, write_position=2, full=1
total_duration=4
last_write_time=13, readable_time_span=[10, 14[, writable_time_span=[14, 14[
reader state=-1, writer state=1, end_time=20, read_start_time=10


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 10)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=3, write_position=2, full=0
total_duration=4
last_write_time=13, readable_time_span=[11, 14[, writable_time_span=[14, 15[
reader state=0, writer state=1, end_time=20, read_start_time=11


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=10, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=10, readable_time_span=[10, 11[, writable_time_span=[11, 11[
reader state=1, writer state=0, end_time=20, read_start_time=10


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 10)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [14, 15[ t=14

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 10) --> [10, 11[

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 10)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=10, readable_time_span=[11, 11[, writable_time_span=[11, 12[
reader state=0, writer state=1, end_time=20, read_start_time=11


[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=10)

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=10)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 11)....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [11, 12[ t=11

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 11)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=14, end=0), 
[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=3, write_position=3, full=1
total_duration=4
last_write_time=14, readable_time_span=[11, 15[, writable_time_span=[15, 15[
reader state=4, writer state=0, end_time=20, read_start_time=11


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=14)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 11) --> [11, 15[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=3, write_position=3, full=1
total_duration=4
last_write_time=14, readable_time_span=[11, 15[, writable_time_span=[15, 15[
reader state=-1, writer state=1, end_time=20, read_start_time=11


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 11)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=3, full=0
total_duration=4
last_write_time=14, readable_time_span=[12, 15[, writable_time_span=[15, 16[
reader state=0, writer state=1, end_time=20, read_start_time=12


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=11, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=11, readable_time_span=[11, 12[, writable_time_span=[12, 12[
reader state=1, writer state=0, end_time=20, read_start_time=11


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 11)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [15, 16[ t=15

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 11) --> [11, 12[

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 11)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=11, readable_time_span=[12, 12[, writable_time_span=[12, 13[
reader state=0, writer state=1, end_time=20, read_start_time=12


[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=11)

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=11)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 12)....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [12, 13[ t=12

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 12)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=15, end=0), 
[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=4
last_write_time=15, readable_time_span=[12, 16[, writable_time_span=[16, 16[
reader state=4, writer state=0, end_time=20, read_start_time=12


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=15)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 12) --> [12, 16[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=4
last_write_time=15, readable_time_span=[12, 16[, writable_time_span=[16, 16[
reader state=-1, writer state=1, end_time=20, read_start_time=12


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 12)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=1, write_position=0, full=0
total_duration=4
last_write_time=15, readable_time_span=[13, 16[, writable_time_span=[16, 17[
reader state=0, writer state=1, end_time=20, read_start_time=13


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=12, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=12, readable_time_span=[12, 13[, writable_time_span=[13, 13[
reader state=1, writer state=0, end_time=20, read_start_time=12


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 12)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [16, 17[ t=16

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 12) --> [12, 13[

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 12)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=12, readable_time_span=[13, 13[, writable_time_span=[13, 14[
reader state=0, writer state=1, end_time=20, read_start_time=13


[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=12)

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=12)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 13)....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [13, 14[ t=13

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 13)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=16, end=0), 
[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=1, write_position=1, full=1
total_duration=4
last_write_time=16, readable_time_span=[13, 17[, writable_time_span=[17, 17[
reader state=4, writer state=0, end_time=20, read_start_time=13


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=16)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 13) --> [13, 17[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=1, write_position=1, full=1
total_duration=4
last_write_time=16, readable_time_span=[13, 17[, writable_time_span=[17, 17[
reader state=-1, writer state=1, end_time=20, read_start_time=13


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 13)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
cannot lock mutex for debug_print



[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [17, 18[ t=17

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=13, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=13, readable_time_span=[13, 14[, writable_time_span=[14, 14[
reader state=1, writer state=0, end_time=20, read_start_time=13


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 13)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 13) --> [13, 14[

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 13)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
cannot lock mutex for debug_print



[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=13)

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [14, 15[ t=14

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=13)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 14)....

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 14)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=17, end=0), 
[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=2, write_position=2, full=1
total_duration=4
last_write_time=17, readable_time_span=[14, 18[, writable_time_span=[18, 18[
reader state=4, writer state=0, end_time=20, read_start_time=14


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=17)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 14) --> [14, 18[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=2, write_position=2, full=1
total_duration=4
last_write_time=17, readable_time_span=[14, 18[, writable_time_span=[18, 18[
reader state=-1, writer state=1, end_time=20, read_start_time=14


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 14)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=3, write_position=2, full=0
total_duration=4
last_write_time=17, readable_time_span=[15, 18[, writable_time_span=[18, 19[
reader state=0, writer state=1, end_time=20, read_start_time=15


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=14, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=14, readable_time_span=[14, 15[, writable_time_span=[15, 15[
reader state=1, writer state=0, end_time=20, read_start_time=14


[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [18, 19[ t=18

[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 14)

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 14) --> [14, 15[

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 14)

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [15, 16[ t=15

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=14, readable_time_span=[15, 15[, writable_time_span=[15, 16[
reader state=0, writer state=-1, end_time=20, read_start_time=15


[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 15)....

[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=14)

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=14)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 15)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=18, end=0), 
[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=3, write_position=3, full=1
total_duration=4
last_write_time=18, readable_time_span=[15, 19[, writable_time_span=[19, 19[
reader state=4, writer state=0, end_time=20, read_start_time=15


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=18)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 15) --> [15, 19[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=3, write_position=3, full=1
total_duration=4
last_write_time=18, readable_time_span=[15, 19[, writable_time_span=[19, 19[
reader state=-1, writer state=1, end_time=20, read_start_time=15


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 15)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=3, full=0
total_duration=4
last_write_time=18, readable_time_span=[16, 19[, writable_time_span=[19, 20[
reader state=0, writer state=1, end_time=20, read_start_time=16


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=15, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=15, readable_time_span=[15, 16[, writable_time_span=[16, 16[
reader state=1, writer state=0, end_time=20, read_start_time=15


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 15)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [19, 20[ t=19

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 15) --> [15, 16[

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 15)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=15, readable_time_span=[16, 16[, writable_time_span=[16, 17[
reader state=0, writer state=1, end_time=20, read_start_time=16


[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=15)

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=15)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 16)....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [16, 17[ t=16

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 16)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=19, end=1), 
[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=4
last_write_time=19, readable_time_span=[16, 20[, writable_time_span=[20, 20[
reader state=4, writer state=0, end_time=20, read_start_time=16


[src/graph/media_source_node.cc:14, thread_main_]
source:: ended

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 16) --> [16, 20[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=4
last_write_time=19, readable_time_span=[16, 20[, writable_time_span=[20, 20[
reader state=-1, writer state=0, end_time=20, read_start_time=16


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 16)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=1, write_position=0, full=0
total_duration=4
last_write_time=19, readable_time_span=[17, 20[, writable_time_span=[20, 21[
reader state=0, writer state=0, end_time=20, read_start_time=17


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=16, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=16, readable_time_span=[16, 17[, writable_time_span=[17, 17[
reader state=1, writer state=0, end_time=20, read_start_time=16


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 16)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 16) --> [16, 17[

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 16)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=16, readable_time_span=[17, 17[, writable_time_span=[17, 18[
reader state=0, writer state=1, end_time=20, read_start_time=17


[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=16)

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=16)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 17)....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [17, 18[ t=17

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 17)....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 17) --> [17, 20[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=1, write_position=0, full=0
total_duration=4
last_write_time=19, readable_time_span=[17, 20[, writable_time_span=[20, 21[
reader state=-1, writer state=0, end_time=20, read_start_time=17


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 17)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=2, write_position=0, full=0
total_duration=4
last_write_time=19, readable_time_span=[18, 20[, writable_time_span=[20, 22[
reader state=0, writer state=0, end_time=20, read_start_time=18


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=17, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=17, readable_time_span=[17, 18[, writable_time_span=[18, 18[
reader state=1, writer state=0, end_time=20, read_start_time=17


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 17)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 17) --> [17, 18[

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 17)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=17, readable_time_span=[18, 18[, writable_time_span=[18, 19[
reader state=0, writer state=1, end_time=20, read_start_time=18


[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=17)

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=17)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 18)....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [18, 19[ t=18

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 18)....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 18) --> [18, 20[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=2, write_position=0, full=0
total_duration=4
last_write_time=19, readable_time_span=[18, 20[, writable_time_span=[20, 22[
reader state=-1, writer state=0, end_time=20, read_start_time=18


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 18)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=3, write_position=0, full=0
total_duration=4
last_write_time=19, readable_time_span=[19, 20[, writable_time_span=[20, 23[
reader state=0, writer state=0, end_time=20, read_start_time=19


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=18, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=18, readable_time_span=[18, 19[, writable_time_span=[19, 19[
reader state=1, writer state=0, end_time=20, read_start_time=18


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 18)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 18) --> [18, 19[

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 18)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=18, readable_time_span=[19, 19[, writable_time_span=[19, 20[
reader state=0, writer state=1, end_time=20, read_start_time=19


[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=18)

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=18)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 19)....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [19, 20[ t=19

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 19)....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 19) --> [19, 20[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=3, write_position=0, full=0
total_duration=4
last_write_time=19, readable_time_span=[19, 20[, writable_time_span=[20, 23[
reader state=-1, writer state=0, end_time=20, read_start_time=19


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 19)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=1 - 
 output:=[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=4
last_write_time=19, readable_time_span=[20, 20[, writable_time_span=[20, 24[
reader state=0, writer state=0, end_time=20, read_start_time=20


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=19, end=1), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=19, readable_time_span=[19, 20[, writable_time_span=[20, 20[
reader state=1, writer state=0, end_time=20, read_start_time=19


[src/graph/media_node.cc:14, thread_main_]
node:: ended

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 19) --> [19, 20[

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 19)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=1 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=19, readable_time_span=[20, 20[, writable_time_span=[20, 21[
reader state=0, writer state=0, end_time=20, read_start_time=20


[src/graph/media_sink_node.cc:23, pull_frame_]
sink: reached end!

[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=19)

[src/graph/media_graph.cc:53, run]
graph::reached end!

[src/graph/media_graph.cc:17, ~media_graph]
media_graph stopping

[src/graph/media_graph.cc:19, ~media_graph]
media_graph no more

[src/graph/media_graph.cc:12, media_graph]
media_graph

[src/graph/media_source_node.cc:60, launch_]
source:: launch

[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=-1)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [0, 1[ t=0

[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = -1)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=-1)

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [0, 1[ t=0

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 0)....

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 0)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=0, end=0), 
[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=1, full=0
total_duration=4
last_write_time=0, readable_time_span=[0, 1[, writable_time_span=[1, 4[
reader state=1, writer state=0, end_time=20, read_start_time=0


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=0)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [1, 2[ t=1

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 0) --> [0, 1[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=1, full=0
total_duration=4
last_write_time=0, readable_time_span=[0, 1[, writable_time_span=[1, 4[
reader state=-1, writer state=-1, end_time=20, read_start_time=0


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 0)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=1, full=0
total_duration=4
last_write_time=0, readable_time_span=[0, 1[, writable_time_span=[1, 4[
reader state=0, writer state=-1, end_time=20, read_start_time=0


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=0, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=0, readable_time_span=[0, 1[, writable_time_span=[1, 1[
reader state=1, writer state=0, end_time=20, read_start_time=0


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 0)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 0) --> [0, 1[

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 0)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=0, readable_time_span=[1, 1[, writable_time_span=[1, 2[
reader state=0, writer state=1, end_time=20, read_start_time=1


[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=0)

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=0)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 1)....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [1, 2[ t=1

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 1)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=1, end=0), 
[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=2, full=0
total_duration=4
last_write_time=1, readable_time_span=[0, 2[, writable_time_span=[2, 4[
reader state=2, writer state=0, end_time=20, read_start_time=0


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=1)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [2, 3[ t=2

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 1) --> [0, 2[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=2, full=0
total_duration=4
last_write_time=1, readable_time_span=[0, 2[, writable_time_span=[2, 4[
reader state=-1, writer state=-1, end_time=20, read_start_time=0


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 1)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=2, full=0
total_duration=4
last_write_time=1, readable_time_span=[0, 2[, writable_time_span=[2, 4[
reader state=0, writer state=-1, end_time=20, read_start_time=0


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=1, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=1, readable_time_span=[1, 2[, writable_time_span=[2, 2[
reader state=1, writer state=0, end_time=20, read_start_time=1


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 1)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 1) --> [1, 2[

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 1)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=1, readable_time_span=[2, 2[, writable_time_span=[2, 3[
reader state=0, writer state=1, end_time=20, read_start_time=2


[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=1)

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=1)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 2)....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [2, 3[ t=2

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 2)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=2, end=0), 
[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=3, full=0
total_duration=4
last_write_time=2, readable_time_span=[0, 3[, writable_time_span=[3, 4[
reader state=3, writer state=0, end_time=20, read_start_time=0


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=2)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [3, 4[ t=3

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 2) --> [0, 3[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=3, full=0
total_duration=4
last_write_time=2, readable_time_span=[0, 3[, writable_time_span=[3, 4[
reader state=-1, writer state=-1, end_time=20, read_start_time=0


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 2)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=3, full=0
total_duration=4
last_write_time=2, readable_time_span=[0, 3[, writable_time_span=[3, 4[
reader state=0, writer state=-1, end_time=20, read_start_time=0


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=2, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=2, readable_time_span=[2, 3[, writable_time_span=[3, 3[
reader state=1, writer state=0, end_time=20, read_start_time=2


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 2)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 2) --> [2, 3[

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 2)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=2, readable_time_span=[3, 3[, writable_time_span=[3, 4[
reader state=0, writer state=1, end_time=20, read_start_time=3


[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=2)

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=2)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 3)....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [3, 4[ t=3

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 3)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=3, end=0), 
[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=4
last_write_time=3, readable_time_span=[0, 4[, writable_time_span=[4, 4[
reader state=4, writer state=0, end_time=20, read_start_time=0


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=3)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 3) --> [0, 4[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=4
last_write_time=3, readable_time_span=[0, 4[, writable_time_span=[4, 4[
reader state=-1, writer state=1, end_time=20, read_start_time=0


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 3)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=1, write_position=0, full=0
total_duration=4
last_write_time=3, readable_time_span=[1, 4[, writable_time_span=[4, 5[
reader state=0, writer state=1, end_time=20, read_start_time=1


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [4, 5[ t=4

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=3, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=3, readable_time_span=[3, 4[, writable_time_span=[4, 4[
reader state=1, writer state=0, end_time=20, read_start_time=3


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 3)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 3) --> [3, 4[

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 3)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=3, readable_time_span=[4, 4[, writable_time_span=[4, 5[
reader state=0, writer state=1, end_time=20, read_start_time=4


[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=3)

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=3)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 4)....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [4, 5[ t=4

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 4)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=4, end=0), 
[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=1, write_position=1, full=1
total_duration=4
last_write_time=4, readable_time_span=[1, 5[, writable_time_span=[5, 5[
reader state=4, writer state=0, end_time=20, read_start_time=1


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=4)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 4) --> [1, 5[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=1, write_position=1, full=1
total_duration=4
last_write_time=4, readable_time_span=[1, 5[, writable_time_span=[5, 5[
reader state=-1, writer state=1, end_time=20, read_start_time=1


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 4)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=2, write_position=1, full=0
total_duration=4
last_write_time=4, readable_time_span=[2, 5[, writable_time_span=[5, 6[
reader state=0, writer state=1, end_time=20, read_start_time=2


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=4, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=4, readable_time_span=[4, 5[, writable_time_span=[5, 5[
reader state=1, writer state=0, end_time=20, read_start_time=4


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 4)

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 4) --> [4, 5[

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [5, 6[ t=5

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 4)

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [5, 6[ t=5

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 5)....

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=4, readable_time_span=[5, 5[, writable_time_span=[5, 6[
reader state=0, writer state=-1, end_time=20, read_start_time=5


[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=4)

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=4)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 5)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=5, end=0), 
[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=2, write_position=2, full=1
total_duration=4
last_write_time=5, readable_time_span=[2, 6[, writable_time_span=[6, 6[
reader state=4, writer state=0, end_time=20, read_start_time=2


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=5)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 5) --> [2, 6[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=2, write_position=2, full=1
total_duration=4
last_write_time=5, readable_time_span=[2, 6[, writable_time_span=[6, 6[
reader state=-1, writer state=1, end_time=20, read_start_time=2


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 5)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=3, write_position=2, full=0
total_duration=4
last_write_time=5, readable_time_span=[3, 6[, writable_time_span=[6, 7[
reader state=0, writer state=1, end_time=20, read_start_time=3


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=5, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=5, readable_time_span=[5, 6[, writable_time_span=[6, 6[
reader state=1, writer state=0, end_time=20, read_start_time=5


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 5)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [6, 7[ t=6

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 5) --> [5, 6[

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 5)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=5, readable_time_span=[6, 6[, writable_time_span=[6, 7[
reader state=0, writer state=1, end_time=20, read_start_time=6


[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=5)

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=5)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 6)....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [6, 7[ t=6

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 6)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=6, end=0), 
[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=3, write_position=3, full=1
total_duration=4
last_write_time=6, readable_time_span=[3, 7[, writable_time_span=[7, 7[
reader state=4, writer state=0, end_time=20, read_start_time=3


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=6)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 6) --> [3, 7[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=3, write_position=3, full=1
total_duration=4
last_write_time=6, readable_time_span=[3, 7[, writable_time_span=[7, 7[
reader state=-1, writer state=1, end_time=20, read_start_time=3


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 6)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=3, full=0
total_duration=4
last_write_time=6, readable_time_span=[4, 7[, writable_time_span=[7, 8[
reader state=0, writer state=1, end_time=20, read_start_time=4


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=6, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=6, readable_time_span=[6, 7[, writable_time_span=[7, 7[
reader state=1, writer state=0, end_time=20, read_start_time=6


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 6)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [7, 8[ t=7

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 6) --> [6, 7[

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 6)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=6, readable_time_span=[7, 7[, writable_time_span=[7, 8[
reader state=0, writer state=1, end_time=20, read_start_time=7


[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=6)

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=6)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 7)....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [7, 8[ t=7

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 7)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=7, end=0), 
[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=4
last_write_time=7, readable_time_span=[4, 8[, writable_time_span=[8, 8[
reader state=4, writer state=0, end_time=20, read_start_time=4


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=7)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 7) --> [4, 8[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=4
last_write_time=7, readable_time_span=[4, 8[, writable_time_span=[8, 8[
reader state=-1, writer state=1, end_time=20, read_start_time=4


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 7)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=1, write_position=0, full=0
total_duration=4
last_write_time=7, readable_time_span=[5, 8[, writable_time_span=[8, 9[
reader state=0, writer state=1, end_time=20, read_start_time=5


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=7, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=7, readable_time_span=[7, 8[, writable_time_span=[8, 8[
reader state=1, writer state=0, end_time=20, read_start_time=7


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 7)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [8, 9[ t=8

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 7) --> [7, 8[

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 7)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=7, readable_time_span=[8, 8[, writable_time_span=[8, 9[
reader state=0, writer state=1, end_time=20, read_start_time=8


[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=7)

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=7)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 8)....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [8, 9[ t=8

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 8)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=8, end=0), 
[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=1, write_position=1, full=1
total_duration=4
last_write_time=8, readable_time_span=[5, 9[, writable_time_span=[9, 9[
reader state=4, writer state=0, end_time=20, read_start_time=5


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=8)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 8) --> [5, 9[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=1, write_position=1, full=1
total_duration=4
last_write_time=8, readable_time_span=[5, 9[, writable_time_span=[9, 9[
reader state=-1, writer state=1, end_time=20, read_start_time=5


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 8)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=2, write_position=1, full=0
total_duration=4
last_write_time=8, readable_time_span=[6, 9[, writable_time_span=[9, 10[
reader state=0, writer state=1, end_time=20, read_start_time=6


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=8, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=8, readable_time_span=[8, 9[, writable_time_span=[9, 9[
reader state=1, writer state=0, end_time=20, read_start_time=8


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 8)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [9, 10[ t=9

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 8) --> [8, 9[

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 8)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=8, readable_time_span=[9, 9[, writable_time_span=[9, 10[
reader state=0, writer state=1, end_time=20, read_start_time=9


[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=8)

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=8)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 9)....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [9, 10[ t=9

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 9)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=9, end=0), 
[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=2, write_position=2, full=1
total_duration=4
last_write_time=9, readable_time_span=[6, 10[, writable_time_span=[10, 10[
reader state=4, writer state=0, end_time=20, read_start_time=6


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=9)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 9) --> [6, 10[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=2, write_position=2, full=1
total_duration=4
last_write_time=9, readable_time_span=[6, 10[, writable_time_span=[10, 10[
reader state=-1, writer state=1, end_time=20, read_start_time=6


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 9)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=3, write_position=2, full=0
total_duration=4
last_write_time=9, readable_time_span=[7, 10[, writable_time_span=[10, 11[
reader state=0, writer state=1, end_time=20, read_start_time=7


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=9, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=9, readable_time_span=[9, 10[, writable_time_span=[10, 10[
reader state=1, writer state=0, end_time=20, read_start_time=9


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 9)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [10, 11[ t=10

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 9) --> [9, 10[

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 9)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=9, readable_time_span=[10, 10[, writable_time_span=[10, 11[
reader state=0, writer state=1, end_time=20, read_start_time=10


[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=9)

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=9)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 10)....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [10, 11[ t=10

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 10)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=10, end=0), 
[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=3, write_position=3, full=1
total_duration=4
last_write_time=10, readable_time_span=[7, 11[, writable_time_span=[11, 11[
reader state=4, writer state=0, end_time=20, read_start_time=7


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=10)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 10) --> [7, 11[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=3, write_position=3, full=1
total_duration=4
last_write_time=10, readable_time_span=[7, 11[, writable_time_span=[11, 11[
reader state=-1, writer state=1, end_time=20, read_start_time=7


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 10)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=3, full=0
total_duration=4
last_write_time=10, readable_time_span=[8, 11[, writable_time_span=[11, 12[
reader state=0, writer state=1, end_time=20, read_start_time=8


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=10, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=10, readable_time_span=[10, 11[, writable_time_span=[11, 11[
reader state=1, writer state=0, end_time=20, read_start_time=10


[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [11, 12[ t=11

[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 10)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 10) --> [10, 11[

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 10)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=10, readable_time_span=[11, 11[, writable_time_span=[11, 12[
reader state=0, writer state=1, end_time=20, read_start_time=11


[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=10)

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=10)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 11)....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [11, 12[ t=11

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 11)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=11, end=0), 
[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=4
last_write_time=11, readable_time_span=[8, 12[, writable_time_span=[12, 12[
reader state=4, writer state=0, end_time=20, read_start_time=8


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=11)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 11) --> [8, 12[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=4
last_write_time=11, readable_time_span=[8, 12[, writable_time_span=[12, 12[
reader state=-1, writer state=1, end_time=20, read_start_time=8


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 11)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=1, write_position=0, full=0
total_duration=4
last_write_time=11, readable_time_span=[9, 12[, writable_time_span=[12, 13[
reader state=0, writer state=1, end_time=20, read_start_time=9


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=11, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=11, readable_time_span=[11, 12[, writable_time_span=[12, 12[
reader state=1, writer state=0, end_time=20, read_start_time=11


[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [12, 13[ t=12

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 11) --> [11, 12[

[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 11)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 11)

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [12, 13[ t=12

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=11, readable_time_span=[12, 12[, writable_time_span=[12, 13[
reader state=0, writer state=-1, end_time=20, read_start_time=12


[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 12)....

[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=11)

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=11)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 12)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=12, end=0), 
[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=1, write_position=1, full=1
total_duration=4
last_write_time=12, readable_time_span=[9, 13[, writable_time_span=[13, 13[
reader state=4, writer state=0, end_time=20, read_start_time=9


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=12)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 12) --> [9, 13[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=1, write_position=1, full=1
total_duration=4
last_write_time=12, readable_time_span=[9, 13[, writable_time_span=[13, 13[
reader state=-1, writer state=1, end_time=20, read_start_time=9


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 12)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=2, write_position=1, full=0
total_duration=4
last_write_time=12, readable_time_span=[10, 13[, writable_time_span=[13, 14[
reader state=0, writer state=1, end_time=20, read_start_time=10


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=12, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=12, readable_time_span=[12, 13[, writable_time_span=[13, 13[
reader state=1, writer state=0, end_time=20, read_start_time=12


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 12)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [13, 14[ t=13

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 12) --> [12, 13[

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 12)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=12, readable_time_span=[13, 13[, writable_time_span=[13, 14[
reader state=0, writer state=1, end_time=20, read_start_time=13


[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=12)

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=12)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 13)....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [13, 14[ t=13

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 13)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=13, end=0), 
[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=2, write_position=2, full=1
total_duration=4
last_write_time=13, readable_time_span=[10, 14[, writable_time_span=[14, 14[
reader state=4, writer state=0, end_time=20, read_start_time=10


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=13)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 13) --> [10, 14[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=2, write_position=2, full=1
total_duration=4
last_write_time=13, readable_time_span=[10, 14[, writable_time_span=[14, 14[
reader state=-1, writer state=1, end_time=20, read_start_time=10


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 13)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=3, write_position=2, full=0
total_duration=4
last_write_time=13, readable_time_span=[11, 14[, writable_time_span=[14, 15[
reader state=0, writer state=1, end_time=20, read_start_time=11


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=13, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=13, readable_time_span=[13, 14[, writable_time_span=[14, 14[
reader state=1, writer state=0, end_time=20, read_start_time=13


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 13)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [14, 15[ t=14

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 13) --> [13, 14[

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 13)

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [14, 15[ t=14

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 14)....

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=13, readable_time_span=[14, 14[, writable_time_span=[14, 15[
reader state=0, writer state=-1, end_time=20, read_start_time=14


[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=13)

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=13)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 14)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=14, end=0), 
[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=3, write_position=3, full=1
total_duration=4
last_write_time=14, readable_time_span=[11, 15[, writable_time_span=[15, 15[
reader state=4, writer state=0, end_time=20, read_start_time=11


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=14)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 14) --> [11, 15[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=3, write_position=3, full=1
total_duration=4
last_write_time=14, readable_time_span=[11, 15[, writable_time_span=[15, 15[
reader state=-1, writer state=1, end_time=20, read_start_time=11


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 14)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=3, full=0
total_duration=4
last_write_time=14, readable_time_span=[12, 15[, writable_time_span=[15, 16[
reader state=0, writer state=1, end_time=20, read_start_time=12


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=14, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=14, readable_time_span=[14, 15[, writable_time_span=[15, 15[
reader state=1, writer state=0, end_time=20, read_start_time=14


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 14)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [15, 16[ t=15

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 14) --> [14, 15[

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 14)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=14, readable_time_span=[15, 15[, writable_time_span=[15, 16[
reader state=0, writer state=1, end_time=20, read_start_time=15


[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=14)

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=14)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 15)....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [15, 16[ t=15

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 15)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=15, end=0), 
[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=4
last_write_time=15, readable_time_span=[12, 16[, writable_time_span=[16, 16[
reader state=4, writer state=0, end_time=20, read_start_time=12


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=15)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 15) --> [12, 16[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=4
last_write_time=15, readable_time_span=[12, 16[, writable_time_span=[16, 16[
reader state=-1, writer state=1, end_time=20, read_start_time=12


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 15)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=1, write_position=0, full=0
total_duration=4
last_write_time=15, readable_time_span=[13, 16[, writable_time_span=[16, 17[
reader state=0, writer state=1, end_time=20, read_start_time=13


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=15, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=15, readable_time_span=[15, 16[, writable_time_span=[16, 16[
reader state=1, writer state=0, end_time=20, read_start_time=15


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 15)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [16, 17[ t=16

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 15) --> [15, 16[

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 15)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=15, readable_time_span=[16, 16[, writable_time_span=[16, 17[
reader state=0, writer state=1, end_time=20, read_start_time=16


[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=15)

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=15)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 16)....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [16, 17[ t=16

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 16)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=16, end=0), 
[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=1, write_position=1, full=1
total_duration=4
last_write_time=16, readable_time_span=[13, 17[, writable_time_span=[17, 17[
reader state=4, writer state=0, end_time=20, read_start_time=13


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=16)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 16) --> [13, 17[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=1, write_position=1, full=1
total_duration=4
last_write_time=16, readable_time_span=[13, 17[, writable_time_span=[17, 17[
reader state=-1, writer state=1, end_time=20, read_start_time=13


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 16)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=2, write_position=1, full=0
total_duration=4
last_write_time=16, readable_time_span=[14, 17[, writable_time_span=[17, 18[
reader state=0, writer state=1, end_time=20, read_start_time=14


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=16, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=16, readable_time_span=[16, 17[, writable_time_span=[17, 17[
reader state=1, writer state=0, end_time=20, read_start_time=16


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 16)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [17, 18[ t=17

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 16) --> [16, 17[

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 16)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=16, readable_time_span=[17, 17[, writable_time_span=[17, 18[
reader state=0, writer state=1, end_time=20, read_start_time=17


[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=16)

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=16)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 17)....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [17, 18[ t=17

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 17)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=17, end=0), 
[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=2, write_position=2, full=1
total_duration=4
last_write_time=17, readable_time_span=[14, 18[, writable_time_span=[18, 18[
reader state=4, writer state=0, end_time=20, read_start_time=14


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=17)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 17) --> [14, 18[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=2, write_position=2, full=1
total_duration=4
last_write_time=17, readable_time_span=[14, 18[, writable_time_span=[18, 18[
reader state=-1, writer state=1, end_time=20, read_start_time=14


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 17)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=3, write_position=2, full=0
total_duration=4
last_write_time=17, readable_time_span=[15, 18[, writable_time_span=[18, 19[
reader state=0, writer state=1, end_time=20, read_start_time=15


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [18, 19[ t=18

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=17, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=17, readable_time_span=[17, 18[, writable_time_span=[18, 18[
reader state=1, writer state=0, end_time=20, read_start_time=17


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 17)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 17) --> [17, 18[

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 17)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=17, readable_time_span=[18, 18[, writable_time_span=[18, 19[
reader state=0, writer state=1, end_time=20, read_start_time=18


[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=17)

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=17)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 18)....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [18, 19[ t=18

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 18)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=18, end=0), 
[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=3, write_position=3, full=1
total_duration=4
last_write_time=18, readable_time_span=[15, 19[, writable_time_span=[19, 19[
reader state=4, writer state=0, end_time=20, read_start_time=15


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=18)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 18) --> [15, 19[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=3, write_position=3, full=1
total_duration=4
last_write_time=18, readable_time_span=[15, 19[, writable_time_span=[19, 19[
reader state=-1, writer state=1, end_time=20, read_start_time=15


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 18)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=3, full=0
total_duration=4
last_write_time=18, readable_time_span=[16, 19[, writable_time_span=[19, 20[
reader state=0, writer state=1, end_time=20, read_start_time=16


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=18, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=18, readable_time_span=[18, 19[, writable_time_span=[19, 19[
reader state=1, writer state=0, end_time=20, read_start_time=18


[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [19, 20[ t=19

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 18) --> [18, 19[

[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 18)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 18)

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [19, 20[ t=19

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=18, readable_time_span=[19, 19[, writable_time_span=[19, 20[
reader state=0, writer state=-1, end_time=20, read_start_time=19


[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 19)....

[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=18)

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=18)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 19)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=19, end=1), 
[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=4
last_write_time=19, readable_time_span=[16, 20[, writable_time_span=[20, 20[
reader state=4, writer state=0, end_time=20, read_start_time=16


[src/graph/media_source_node.cc:14, thread_main_]
source:: ended

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 19) --> [16, 20[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=4
last_write_time=19, readable_time_span=[16, 20[, writable_time_span=[20, 20[
reader state=-1, writer state=0, end_time=20, read_start_time=16


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 19)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=1, write_position=0, full=0
total_duration=4
last_write_time=19, readable_time_span=[17, 20[, writable_time_span=[20, 21[
reader state=0, writer state=0, end_time=20, read_start_time=17


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=19, end=1), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=19, readable_time_span=[19, 20[, writable_time_span=[20, 20[
reader state=1, writer state=0, end_time=20, read_start_time=19


[src/graph/media_node.cc:14, thread_main_]
node:: ended

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 19) --> [19, 20[

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 19)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=1 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=19, readable_time_span=[20, 20[, writable_time_span=[20, 21[
reader state=0, writer state=0, end_time=20, read_start_time=20


[src/graph/media_sink_node.cc:23, pull_frame_]
sink: reached end!

[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=19)

[src/graph/media_graph.cc:53, run]
graph::reached end!

[src/graph/media_graph.cc:17, ~media_graph]
media_graph stopping

[src/graph/media_graph.cc:19, ~media_graph]
media_graph no more

[src/graph/media_graph.cc:12, media_graph]
media_graph

[src/graph/media_source_node.cc:60, launch_]
source:: launch

[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=-1)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [0, 1[ t=0

[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = -1)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=-1)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 0)....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [0, 1[ t=0

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 0)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=0, end=0), 
[frame_shape=(320, 240), required_duration=7, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=1, full=0
total_duration=7
last_write_time=0, readable_time_span=[0, 1[, writable_time_span=[1, 7[
reader state=4, writer state=0, end_time=20, read_start_time=0


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=0)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [1, 2[ t=1

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=1, end=0), 
[frame_shape=(320, 240), required_duration=7, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=2, full=0
total_duration=7
last_write_time=1, readable_time_span=[0, 2[, writable_time_span=[2, 7[
reader state=4, writer state=0, end_time=20, read_start_time=0


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=1)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [2, 3[ t=2

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=2, end=0), 
[frame_shape=(320, 240), required_duration=7, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=3, full=0
total_duration=7
last_write_time=2, readable_time_span=[0, 3[, writable_time_span=[3, 7[
reader state=4, writer state=0, end_time=20, read_start_time=0


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=2)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [3, 4[ t=3

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=3, end=0), 
[frame_shape=(320, 240), required_duration=7, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=4, full=0
total_duration=7
last_write_time=3, readable_time_span=[0, 4[, writable_time_span=[4, 7[
reader state=4, writer state=0, end_time=20, read_start_time=0


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=3)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [4, 5[ t=4

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 0) --> [0, 4[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=7, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=4, full=0
total_duration=7
last_write_time=3, readable_time_span=[0, 4[, writable_time_span=[4, 7[
reader state=-1, writer state=-1, end_time=20, read_start_time=0


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 0)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=7, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=4, full=0
total_duration=7
last_write_time=3, readable_time_span=[0, 4[, writable_time_span=[4, 7[
reader state=0, writer state=-1, end_time=20, read_start_time=0


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=0, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=0, readable_time_span=[0, 1[, writable_time_span=[1, 1[
reader state=1, writer state=0, end_time=20, read_start_time=0


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 0)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 0) --> [0, 1[

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 0)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=0, readable_time_span=[1, 1[, writable_time_span=[1, 2[
reader state=0, writer state=1, end_time=20, read_start_time=1


[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=0)

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=0)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 1)....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [1, 2[ t=1

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 1)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=4, end=0), 
[frame_shape=(320, 240), required_duration=7, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=5, full=0
total_duration=7
last_write_time=4, readable_time_span=[0, 5[, writable_time_span=[5, 7[
reader state=5, writer state=0, end_time=20, read_start_time=0


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=4)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [5, 6[ t=5

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 1) --> [0, 5[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=7, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=5, full=0
total_duration=7
last_write_time=4, readable_time_span=[0, 5[, writable_time_span=[5, 7[
reader state=-1, writer state=-1, end_time=20, read_start_time=0


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 1)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=7, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=5, full=0
total_duration=7
last_write_time=4, readable_time_span=[0, 5[, writable_time_span=[5, 7[
reader state=0, writer state=-1, end_time=20, read_start_time=0


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=1, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=1, readable_time_span=[1, 2[, writable_time_span=[2, 2[
reader state=1, writer state=0, end_time=20, read_start_time=1


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 1)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 1) --> [1, 2[

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 1)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=1, readable_time_span=[2, 2[, writable_time_span=[2, 3[
reader state=0, writer state=1, end_time=20, read_start_time=2


[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=1)

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=1)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 2)....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [2, 3[ t=2

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 2)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=5, end=0), 
[frame_shape=(320, 240), required_duration=7, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=6, full=0
total_duration=7
last_write_time=5, readable_time_span=[0, 6[, writable_time_span=[6, 7[
reader state=6, writer state=0, end_time=20, read_start_time=0


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=5)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [6, 7[ t=6

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 2) --> [0, 6[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=7, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=6, full=0
total_duration=7
last_write_time=5, readable_time_span=[0, 6[, writable_time_span=[6, 7[
reader state=-1, writer state=-1, end_time=20, read_start_time=0


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 2)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=7, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=6, full=0
total_duration=7
last_write_time=5, readable_time_span=[0, 6[, writable_time_span=[6, 7[
reader state=0, writer state=-1, end_time=20, read_start_time=0


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=2, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=2, readable_time_span=[2, 3[, writable_time_span=[3, 3[
reader state=-1, writer state=0, end_time=20, read_start_time=2


[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 2) --> [2, 3[

[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 2)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 2)

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [3, 4[ t=3

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 3)....

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=2, readable_time_span=[3, 3[, writable_time_span=[3, 4[
reader state=0, writer state=-1, end_time=20, read_start_time=3


[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=2)

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=2)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 3)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=6, end=0), 
[frame_shape=(320, 240), required_duration=7, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=7
last_write_time=6, readable_time_span=[0, 7[, writable_time_span=[7, 7[
reader state=7, writer state=0, end_time=20, read_start_time=0


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=6)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 3) --> [0, 7[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=7, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=7
last_write_time=6, readable_time_span=[0, 7[, writable_time_span=[7, 7[
reader state=-1, writer state=1, end_time=20, read_start_time=0


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 3)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=7, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=1, write_position=0, full=0
total_duration=7
last_write_time=6, readable_time_span=[1, 7[, writable_time_span=[7, 8[
reader state=0, writer state=1, end_time=20, read_start_time=1


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=3, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=3, readable_time_span=[3, 4[, writable_time_span=[4, 4[
reader state=1, writer state=0, end_time=20, read_start_time=3


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 3)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 3) --> [3, 4[

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [7, 8[ t=7

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 3)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=3, readable_time_span=[4, 4[, writable_time_span=[4, 5[
reader state=0, writer state=-1, end_time=20, read_start_time=4


[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [4, 5[ t=4

[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=3)

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=3)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 4)....

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 4)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=7, end=0), 
[frame_shape=(320, 240), required_duration=7, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=1, write_position=1, full=1
total_duration=7
last_write_time=7, readable_time_span=[1, 8[, writable_time_span=[8, 8[
reader state=7, writer state=0, end_time=20, read_start_time=1


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=7)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 4) --> [1, 8[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=7, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=1, write_position=1, full=1
total_duration=7
last_write_time=7, readable_time_span=[1, 8[, writable_time_span=[8, 8[
reader state=-1, writer state=1, end_time=20, read_start_time=1


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 4)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=7, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=2, write_position=1, full=0
total_duration=7
last_write_time=7, readable_time_span=[2, 8[, writable_time_span=[8, 9[
reader state=0, writer state=1, end_time=20, read_start_time=2


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=4, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=4, readable_time_span=[4, 5[, writable_time_span=[5, 5[
reader state=1, writer state=0, end_time=20, read_start_time=4


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 4)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [8, 9[ t=8

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 4) --> [4, 5[

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 4)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=4, readable_time_span=[5, 5[, writable_time_span=[5, 6[
reader state=0, writer state=1, end_time=20, read_start_time=5


[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=4)

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=4)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 5)....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [5, 6[ t=5

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 5)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=8, end=0), 
[frame_shape=(320, 240), required_duration=7, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=2, write_position=2, full=1
total_duration=7
last_write_time=8, readable_time_span=[2, 9[, writable_time_span=[9, 9[
reader state=7, writer state=0, end_time=20, read_start_time=2


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=8)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 5) --> [2, 9[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=7, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=2, write_position=2, full=1
total_duration=7
last_write_time=8, readable_time_span=[2, 9[, writable_time_span=[9, 9[
reader state=-1, writer state=1, end_time=20, read_start_time=2


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 5)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=7, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=3, write_position=2, full=0
total_duration=7
last_write_time=8, readable_time_span=[3, 9[, writable_time_span=[9, 10[
reader state=0, writer state=1, end_time=20, read_start_time=3


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=5, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=5, readable_time_span=[5, 6[, writable_time_span=[6, 6[
reader state=1, writer state=0, end_time=20, read_start_time=5


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 5)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [9, 10[ t=9

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 5) --> [5, 6[

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 5)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=5, readable_time_span=[6, 6[, writable_time_span=[6, 7[
reader state=0, writer state=1, end_time=20, read_start_time=6


[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=5)

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=5)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 6)....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [6, 7[ t=6

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 6)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=9, end=0), 
[frame_shape=(320, 240), required_duration=7, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=3, write_position=3, full=1
total_duration=7
last_write_time=9, readable_time_span=[3, 10[, writable_time_span=[10, 10[
reader state=7, writer state=0, end_time=20, read_start_time=3


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=9)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 6) --> [3, 10[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=7, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=3, write_position=3, full=1
total_duration=7
last_write_time=9, readable_time_span=[3, 10[, writable_time_span=[10, 10[
reader state=-1, writer state=1, end_time=20, read_start_time=3


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 6)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=7, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=4, write_position=3, full=0
total_duration=7
last_write_time=9, readable_time_span=[4, 10[, writable_time_span=[10, 11[
reader state=0, writer state=1, end_time=20, read_start_time=4


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=6, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=6, readable_time_span=[6, 7[, writable_time_span=[7, 7[
reader state=1, writer state=0, end_time=20, read_start_time=6


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 6)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [10, 11[ t=10

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 6) --> [6, 7[

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 6)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=6, readable_time_span=[7, 7[, writable_time_span=[7, 8[
reader state=0, writer state=1, end_time=20, read_start_time=7


[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=6)

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=6)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 7)....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [7, 8[ t=7

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 7)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=10, end=0), 
[frame_shape=(320, 240), required_duration=7, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=4, write_position=4, full=1
total_duration=7
last_write_time=10, readable_time_span=[4, 11[, writable_time_span=[11, 11[
reader state=7, writer state=0, end_time=20, read_start_time=4


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=10)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 7) --> [4, 11[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=7, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=4, write_position=4, full=1
total_duration=7
last_write_time=10, readable_time_span=[4, 11[, writable_time_span=[11, 11[
reader state=-1, writer state=1, end_time=20, read_start_time=4


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 7)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=7, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=5, write_position=4, full=0
total_duration=7
last_write_time=10, readable_time_span=[5, 11[, writable_time_span=[11, 12[
reader state=0, writer state=1, end_time=20, read_start_time=5


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=7, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=7, readable_time_span=[7, 8[, writable_time_span=[8, 8[
reader state=1, writer state=0, end_time=20, read_start_time=7


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 7)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [11, 12[ t=11

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 7) --> [7, 8[

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 7)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=7, readable_time_span=[8, 8[, writable_time_span=[8, 9[
reader state=0, writer state=1, end_time=20, read_start_time=8


[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=7)

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=7)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 8)....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [8, 9[ t=8

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 8)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=11, end=0), 
[frame_shape=(320, 240), required_duration=7, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=5, write_position=5, full=1
total_duration=7
last_write_time=11, readable_time_span=[5, 12[, writable_time_span=[12, 12[
reader state=7, writer state=0, end_time=20, read_start_time=5


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=11)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 8) --> [5, 12[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=7, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=5, write_position=5, full=1
total_duration=7
last_write_time=11, readable_time_span=[5, 12[, writable_time_span=[12, 12[
reader state=-1, writer state=1, end_time=20, read_start_time=5


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 8)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=7, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=6, write_position=5, full=0
total_duration=7
last_write_time=11, readable_time_span=[6, 12[, writable_time_span=[12, 13[
reader state=0, writer state=1, end_time=20, read_start_time=6


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [12, 13[ t=12

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=8, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=8, readable_time_span=[8, 9[, writable_time_span=[9, 9[
reader state=1, writer state=0, end_time=20, read_start_time=8


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 8)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 8) --> [8, 9[

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 8)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=8, readable_time_span=[9, 9[, writable_time_span=[9, 10[
reader state=0, writer state=1, end_time=20, read_start_time=9


[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=8)

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=8)

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [9, 10[ t=9

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 9)....

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 9)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=12, end=0), 
[frame_shape=(320, 240), required_duration=7, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=6, write_position=6, full=1
total_duration=7
last_write_time=12, readable_time_span=[6, 13[, writable_time_span=[13, 13[
reader state=7, writer state=0, end_time=20, read_start_time=6


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=12)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 9) --> [6, 13[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=7, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=6, write_position=6, full=1
total_duration=7
last_write_time=12, readable_time_span=[6, 13[, writable_time_span=[13, 13[
reader state=-1, writer state=1, end_time=20, read_start_time=6


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 9)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=7, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=6, full=0
total_duration=7
last_write_time=12, readable_time_span=[7, 13[, writable_time_span=[13, 14[
reader state=0, writer state=1, end_time=20, read_start_time=7


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=9, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=9, readable_time_span=[9, 10[, writable_time_span=[10, 10[
reader state=1, writer state=0, end_time=20, read_start_time=9


[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [13, 14[ t=13

[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 9)

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 9) --> [9, 10[

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 9)

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [10, 11[ t=10

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=9, readable_time_span=[10, 10[, writable_time_span=[10, 11[
reader state=0, writer state=-1, end_time=20, read_start_time=10


[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 10)....

[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=9)

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=9)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 10)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=13, end=0), 
[frame_shape=(320, 240), required_duration=7, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=7
last_write_time=13, readable_time_span=[7, 14[, writable_time_span=[14, 14[
reader state=7, writer state=0, end_time=20, read_start_time=7


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=13)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 10) --> [7, 14[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=7, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=7
last_write_time=13, readable_time_span=[7, 14[, writable_time_span=[14, 14[
reader state=-1, writer state=1, end_time=20, read_start_time=7


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 10)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=7, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=1, write_position=0, full=0
total_duration=7
last_write_time=13, readable_time_span=[8, 14[, writable_time_span=[14, 15[
reader state=0, writer state=1, end_time=20, read_start_time=8


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=10, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=10, readable_time_span=[10, 11[, writable_time_span=[11, 11[
reader state=1, writer state=0, end_time=20, read_start_time=10


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 10)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [14, 15[ t=14

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 10) --> [10, 11[

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 10)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
cannot lock mutex for debug_print



[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=10)

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=10)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 11)....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [11, 12[ t=11

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 11)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=14, end=0), 
[frame_shape=(320, 240), required_duration=7, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=1, write_position=1, full=1
total_duration=7
last_write_time=14, readable_time_span=[8, 15[, writable_time_span=[15, 15[
reader state=7, writer state=0, end_time=20, read_start_time=8


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=14)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 11) --> [8, 15[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=7, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=1, write_position=1, full=1
total_duration=7
last_write_time=14, readable_time_span=[8, 15[, writable_time_span=[15, 15[
reader state=-1, writer state=1, end_time=20, read_start_time=8


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 11)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=7, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=2, write_position=1, full=0
total_duration=7
last_write_time=14, readable_time_span=[9, 15[, writable_time_span=[15, 16[
reader state=0, writer state=1, end_time=20, read_start_time=9


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=11, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=11, readable_time_span=[11, 12[, writable_time_span=[12, 12[
reader state=1, writer state=0, end_time=20, read_start_time=11


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 11)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [15, 16[ t=15

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 11) --> [11, 12[

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 11)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=11, readable_time_span=[12, 12[, writable_time_span=[12, 13[
reader state=0, writer state=1, end_time=20, read_start_time=12


[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=11)

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=11)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 12)....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [12, 13[ t=12

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 12)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=15, end=0), 
[frame_shape=(320, 240), required_duration=7, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=2, write_position=2, full=1
total_duration=7
last_write_time=15, readable_time_span=[9, 16[, writable_time_span=[16, 16[
reader state=7, writer state=0, end_time=20, read_start_time=9


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=15)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 12) --> [9, 16[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=7, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=2, write_position=2, full=1
total_duration=7
last_write_time=15, readable_time_span=[9, 16[, writable_time_span=[16, 16[
reader state=-1, writer state=1, end_time=20, read_start_time=9


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 12)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=7, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=3, write_position=2, full=0
total_duration=7
last_write_time=15, readable_time_span=[10, 16[, writable_time_span=[16, 17[
reader state=0, writer state=1, end_time=20, read_start_time=10


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=12, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=12, readable_time_span=[12, 13[, writable_time_span=[13, 13[
reader state=1, writer state=0, end_time=20, read_start_time=12


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 12)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [16, 17[ t=16

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 12) --> [12, 13[

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 12)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=12, readable_time_span=[13, 13[, writable_time_span=[13, 14[
reader state=0, writer state=1, end_time=20, read_start_time=13


[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=12)

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=12)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 13)....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [13, 14[ t=13

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 13)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=16, end=0), 
[frame_shape=(320, 240), required_duration=7, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=3, write_position=3, full=1
total_duration=7
last_write_time=16, readable_time_span=[10, 17[, writable_time_span=[17, 17[
reader state=7, writer state=0, end_time=20, read_start_time=10


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=16)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 13) --> [10, 17[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=7, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=3, write_position=3, full=1
total_duration=7
last_write_time=16, readable_time_span=[10, 17[, writable_time_span=[17, 17[
reader state=-1, writer state=1, end_time=20, read_start_time=10


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 13)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=7, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=4, write_position=3, full=0
total_duration=7
last_write_time=16, readable_time_span=[11, 17[, writable_time_span=[17, 18[
reader state=0, writer state=1, end_time=20, read_start_time=11


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=13, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=13, readable_time_span=[13, 14[, writable_time_span=[14, 14[
reader state=1, writer state=0, end_time=20, read_start_time=13


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 13)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [17, 18[ t=17

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 13) --> [13, 14[

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 13)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=13, readable_time_span=[14, 14[, writable_time_span=[14, 15[
reader state=0, writer state=1, end_time=20, read_start_time=14


[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=13)

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=13)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 14)....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [14, 15[ t=14

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 14)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=17, end=0), 
[frame_shape=(320, 240), required_duration=7, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=4, write_position=4, full=1
total_duration=7
last_write_time=17, readable_time_span=[11, 18[, writable_time_span=[18, 18[
reader state=7, writer state=0, end_time=20, read_start_time=11


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=17)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 14) --> [11, 18[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=7, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=4, write_position=4, full=1
total_duration=7
last_write_time=17, readable_time_span=[11, 18[, writable_time_span=[18, 18[
reader state=-1, writer state=1, end_time=20, read_start_time=11


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 14)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=7, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=5, write_position=4, full=0
total_duration=7
last_write_time=17, readable_time_span=[12, 18[, writable_time_span=[18, 19[
reader state=0, writer state=1, end_time=20, read_start_time=12


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=14, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=14, readable_time_span=[14, 15[, writable_time_span=[15, 15[
reader state=1, writer state=0, end_time=20, read_start_time=14


[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [18, 19[ t=18

[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 14)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 14) --> [14, 15[

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 14)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=14, readable_time_span=[15, 15[, writable_time_span=[15, 16[
reader state=0, writer state=1, end_time=20, read_start_time=15


[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=14)

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=14)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 15)....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [15, 16[ t=15

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 15)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=18, end=0), 
[frame_shape=(320, 240), required_duration=7, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=5, write_position=5, full=1
total_duration=7
last_write_time=18, readable_time_span=[12, 19[, writable_time_span=[19, 19[
reader state=7, writer state=0, end_time=20, read_start_time=12


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=18)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 15) --> [12, 19[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=7, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=5, write_position=5, full=1
total_duration=7
last_write_time=18, readable_time_span=[12, 19[, writable_time_span=[19, 19[
reader state=-1, writer state=1, end_time=20, read_start_time=12


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 15)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=7, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=6, write_position=5, full=0
total_duration=7
last_write_time=18, readable_time_span=[13, 19[, writable_time_span=[19, 20[
reader state=0, writer state=1, end_time=20, read_start_time=13


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [19, 20[ t=19

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=15, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=15, readable_time_span=[15, 16[, writable_time_span=[16, 16[
reader state=1, writer state=0, end_time=20, read_start_time=15


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 15)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 15) --> [15, 16[

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 15)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=15, readable_time_span=[16, 16[, writable_time_span=[16, 17[
reader state=0, writer state=1, end_time=20, read_start_time=16


[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=15)

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=15)

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [16, 17[ t=16

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 16)....

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 16)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=19, end=1), 
[frame_shape=(320, 240), required_duration=7, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=6, write_position=6, full=1
total_duration=7
last_write_time=19, readable_time_span=[13, 20[, writable_time_span=[20, 20[
reader state=7, writer state=0, end_time=20, read_start_time=13


[src/graph/media_source_node.cc:14, thread_main_]
source:: ended

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 16) --> [13, 20[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=7, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=6, write_position=6, full=1
total_duration=7
last_write_time=19, readable_time_span=[13, 20[, writable_time_span=[20, 20[
reader state=-1, writer state=0, end_time=20, read_start_time=13


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 16)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=7, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=6, full=0
total_duration=7
last_write_time=19, readable_time_span=[14, 20[, writable_time_span=[20, 21[
reader state=0, writer state=0, end_time=20, read_start_time=14


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=16, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=16, readable_time_span=[16, 17[, writable_time_span=[17, 17[
reader state=1, writer state=0, end_time=20, read_start_time=16


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 16)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 16) --> [16, 17[

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 16)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=16, readable_time_span=[17, 17[, writable_time_span=[17, 18[
reader state=0, writer state=-1, end_time=20, read_start_time=17


[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [17, 18[ t=17

[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=16)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 17)....

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=16)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 17)....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 17) --> [14, 20[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=7, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=6, full=0
total_duration=7
last_write_time=19, readable_time_span=[14, 20[, writable_time_span=[20, 21[
reader state=-1, writer state=0, end_time=20, read_start_time=14


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 17)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=7, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=1, write_position=6, full=0
total_duration=7
last_write_time=19, readable_time_span=[15, 20[, writable_time_span=[20, 22[
reader state=0, writer state=0, end_time=20, read_start_time=15


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=17, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=17, readable_time_span=[17, 18[, writable_time_span=[18, 18[
reader state=1, writer state=0, end_time=20, read_start_time=17


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 17)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 17) --> [17, 18[

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 17)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=17, readable_time_span=[18, 18[, writable_time_span=[18, 19[
reader state=0, writer state=1, end_time=20, read_start_time=18


[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=17)

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=17)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 18)....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [18, 19[ t=18

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 18)....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 18) --> [15, 20[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=7, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=1, write_position=6, full=0
total_duration=7
last_write_time=19, readable_time_span=[15, 20[, writable_time_span=[20, 22[
reader state=-1, writer state=0, end_time=20, read_start_time=15


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 18)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=7, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=2, write_position=6, full=0
total_duration=7
last_write_time=19, readable_time_span=[16, 20[, writable_time_span=[20, 23[
reader state=0, writer state=0, end_time=20, read_start_time=16


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=18, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=18, readable_time_span=[18, 19[, writable_time_span=[19, 19[
reader state=1, writer state=0, end_time=20, read_start_time=18


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 18)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 18) --> [18, 19[

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 18)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=18, readable_time_span=[19, 19[, writable_time_span=[19, 20[
reader state=0, writer state=1, end_time=20, read_start_time=19


[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=18)

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=18)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 19)....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [19, 20[ t=19

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 19)....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 19) --> [16, 20[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=7, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=2, write_position=6, full=0
total_duration=7
last_write_time=19, readable_time_span=[16, 20[, writable_time_span=[20, 23[
reader state=-1, writer state=0, end_time=20, read_start_time=16


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 19)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=7, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=3, write_position=6, full=0
total_duration=7
last_write_time=19, readable_time_span=[17, 20[, writable_time_span=[20, 24[
reader state=0, writer state=0, end_time=20, read_start_time=17


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=19, end=1), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=19, readable_time_span=[19, 20[, writable_time_span=[20, 20[
reader state=1, writer state=0, end_time=20, read_start_time=19


[src/graph/media_node.cc:14, thread_main_]
node:: ended

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 19) --> [19, 20[

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 19)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=1 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=19, readable_time_span=[20, 20[, writable_time_span=[20, 21[
reader state=0, writer state=0, end_time=20, read_start_time=20


[src/graph/media_sink_node.cc:23, pull_frame_]
sink: reached end!

[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=19)

[src/graph/media_graph.cc:53, run]
graph::reached end!

[src/graph/media_graph.cc:17, ~media_graph]
media_graph stopping

[src/graph/media_graph.cc:19, ~media_graph]
media_graph no more

[src/graph/media_graph.cc:12, media_graph]
media_graph

[src/graph/media_source_node.cc:60, launch_]
source:: launch

[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=-1)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [0, 1[ t=0

[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = -1)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [0, 1[ t=0

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 0)....

[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = -1)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [0, 1[ t=0

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=-1)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 0)....

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 0)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=0, end=0), 
[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=1, full=0
total_duration=5
last_write_time=0, readable_time_span=[0, 1[, writable_time_span=[1, 5[
reader state=2, writer state=0, end_time=20, read_start_time=0


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=0)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [1, 2[ t=1

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=1, end=0), 
[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=2, full=0
total_duration=5
last_write_time=1, readable_time_span=[0, 2[, writable_time_span=[2, 5[
reader state=2, writer state=0, end_time=20, read_start_time=0


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=1)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [2, 3[ t=2

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 0) --> [0, 2[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=2, full=0
total_duration=5
last_write_time=1, readable_time_span=[0, 2[, writable_time_span=[2, 5[
reader state=-1, writer state=-1, end_time=20, read_start_time=0


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 0)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=2, full=0
total_duration=5
last_write_time=1, readable_time_span=[0, 2[, writable_time_span=[2, 5[
reader state=0, writer state=-1, end_time=20, read_start_time=0


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=0, end=0), 
[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=1, full=0
total_duration=5
last_write_time=0, readable_time_span=[0, 1[, writable_time_span=[1, 5[
reader state=3, writer state=0, end_time=20, read_start_time=0


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 0)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [1, 2[ t=1

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 1)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=2, end=0), 
[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=3, full=0
total_duration=5
last_write_time=2, readable_time_span=[0, 3[, writable_time_span=[3, 5[
reader state=3, writer state=0, end_time=20, read_start_time=0


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=2)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [3, 4[ t=3

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 1) --> [0, 3[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=3, full=0
total_duration=5
last_write_time=2, readable_time_span=[0, 3[, writable_time_span=[3, 5[
reader state=-1, writer state=-1, end_time=20, read_start_time=0


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 1)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=3, full=0
total_duration=5
last_write_time=2, readable_time_span=[0, 3[, writable_time_span=[3, 5[
reader state=0, writer state=-1, end_time=20, read_start_time=0


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=1, end=0), 
[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=2, full=0
total_duration=5
last_write_time=1, readable_time_span=[0, 2[, writable_time_span=[2, 5[
reader state=3, writer state=0, end_time=20, read_start_time=0


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 1)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [2, 3[ t=2

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 2)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=3, end=0), 
[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=4, full=0
total_duration=5
last_write_time=3, readable_time_span=[0, 4[, writable_time_span=[4, 5[
reader state=4, writer state=0, end_time=20, read_start_time=0


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=3)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [4, 5[ t=4

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 2) --> [0, 4[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=4, full=0
total_duration=5
last_write_time=3, readable_time_span=[0, 4[, writable_time_span=[4, 5[
reader state=-1, writer state=-1, end_time=20, read_start_time=0


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 2)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=4, full=0
total_duration=5
last_write_time=3, readable_time_span=[0, 4[, writable_time_span=[4, 5[
reader state=0, writer state=-1, end_time=20, read_start_time=0


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=2, end=0), 
[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=3, full=0
total_duration=5
last_write_time=2, readable_time_span=[0, 3[, writable_time_span=[3, 5[
reader state=-1, writer state=0, end_time=20, read_start_time=0


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 2)

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 0) --> [0, 3[

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [3, 4[ t=3

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 3)....

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=3, full=0
total_duration=5
last_write_time=2, readable_time_span=[0, 3[, writable_time_span=[3, 5[
reader state=-1, writer state=-1, end_time=20, read_start_time=0


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 0)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=3, full=0
total_duration=5
last_write_time=2, readable_time_span=[0, 3[, writable_time_span=[3, 5[
reader state=0, writer state=-1, end_time=20, read_start_time=0


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=0, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=0, readable_time_span=[0, 1[, writable_time_span=[1, 1[
reader state=1, writer state=0, end_time=20, read_start_time=0


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 0)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 0) --> [0, 1[

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 0)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=0, readable_time_span=[1, 1[, writable_time_span=[1, 2[
reader state=0, writer state=1, end_time=20, read_start_time=1


[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=0)

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=0)

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [1, 2[ t=1

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 1)....

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 1)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=4, end=0), 
[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=5
last_write_time=4, readable_time_span=[0, 5[, writable_time_span=[5, 5[
reader state=5, writer state=0, end_time=20, read_start_time=0


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=4)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 3) --> [0, 5[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=5
last_write_time=4, readable_time_span=[0, 5[, writable_time_span=[5, 5[
reader state=-1, writer state=1, end_time=20, read_start_time=0


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 3)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=1, write_position=0, full=0
total_duration=5
last_write_time=4, readable_time_span=[1, 5[, writable_time_span=[5, 6[
reader state=0, writer state=1, end_time=20, read_start_time=1


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=3, end=0), 
[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
cannot lock mutex for debug_print



[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 3)

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 1) --> [0, 4[

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [5, 6[ t=5

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [4, 5[ t=4

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 4)....

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=4, full=0
total_duration=5
last_write_time=3, readable_time_span=[0, 4[, writable_time_span=[4, 5[
reader state=-1, writer state=-1, end_time=20, read_start_time=0


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 1)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=4, full=0
total_duration=5
last_write_time=3, readable_time_span=[0, 4[, writable_time_span=[4, 5[
reader state=0, writer state=-1, end_time=20, read_start_time=0


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=1, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=1, readable_time_span=[1, 2[, writable_time_span=[2, 2[
reader state=1, writer state=0, end_time=20, read_start_time=1


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 1)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 1) --> [1, 2[

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 1)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=1, readable_time_span=[2, 2[, writable_time_span=[2, 3[
reader state=0, writer state=1, end_time=20, read_start_time=2


[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=1)

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=1)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 2)....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [2, 3[ t=2

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 2)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=5, end=0), 
[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=1, write_position=1, full=1
total_duration=5
last_write_time=5, readable_time_span=[1, 6[, writable_time_span=[6, 6[
reader state=5, writer state=0, end_time=20, read_start_time=1


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=5)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 4) --> [1, 6[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=1, write_position=1, full=1
total_duration=5
last_write_time=5, readable_time_span=[1, 6[, writable_time_span=[6, 6[
reader state=-1, writer state=1, end_time=20, read_start_time=1


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 4)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=2, write_position=1, full=0
total_duration=5
last_write_time=5, readable_time_span=[2, 6[, writable_time_span=[6, 7[
reader state=0, writer state=1, end_time=20, read_start_time=2


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [6, 7[ t=6

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=4, end=0), 
[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=5
last_write_time=4, readable_time_span=[0, 5[, writable_time_span=[5, 5[
reader state=-1, writer state=0, end_time=20, read_start_time=0


[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 2) --> [0, 5[

[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 4)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=5
last_write_time=4, readable_time_span=[0, 5[, writable_time_span=[5, 5[
reader state=-1, writer state=1, end_time=20, read_start_time=0


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 2)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=1, write_position=0, full=0
total_duration=5
last_write_time=4, readable_time_span=[1, 5[, writable_time_span=[5, 6[
reader state=0, writer state=-1, end_time=20, read_start_time=1


[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [5, 6[ t=5

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 5)....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=2, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=2, readable_time_span=[2, 3[, writable_time_span=[3, 3[
reader state=1, writer state=0, end_time=20, read_start_time=2


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 2)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 2) --> [2, 3[

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 2)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=2, readable_time_span=[3, 3[, writable_time_span=[3, 4[
reader state=0, writer state=1, end_time=20, read_start_time=3


[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=2)

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=2)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 3)....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [3, 4[ t=3

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 3)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=6, end=0), 
[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=2, write_position=2, full=1
total_duration=5
last_write_time=6, readable_time_span=[2, 7[, writable_time_span=[7, 7[
reader state=5, writer state=0, end_time=20, read_start_time=2


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=6)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 5) --> [2, 7[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=2, write_position=2, full=1
total_duration=5
last_write_time=6, readable_time_span=[2, 7[, writable_time_span=[7, 7[
reader state=-1, writer state=1, end_time=20, read_start_time=2


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 5)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=3, write_position=2, full=0
total_duration=5
last_write_time=6, readable_time_span=[3, 7[, writable_time_span=[7, 8[
reader state=0, writer state=1, end_time=20, read_start_time=3


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=5, end=0), 
[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
cannot lock mutex for debug_print



[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 5)

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 3) --> [1, 6[

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [7, 8[ t=7

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=1, write_position=1, full=1
total_duration=5
last_write_time=5, readable_time_span=[1, 6[, writable_time_span=[6, 6[
reader state=-1, writer state=1, end_time=20, read_start_time=1


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 3)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=2, write_position=1, full=0
total_duration=5
last_write_time=5, readable_time_span=[2, 6[, writable_time_span=[6, 7[
reader state=0, writer state=-1, end_time=20, read_start_time=2


[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [6, 7[ t=6

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 6)....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=3, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=3, readable_time_span=[3, 4[, writable_time_span=[4, 4[
reader state=1, writer state=0, end_time=20, read_start_time=3


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 3)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 3) --> [3, 4[

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 3)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=3, readable_time_span=[4, 4[, writable_time_span=[4, 5[
reader state=0, writer state=1, end_time=20, read_start_time=4


[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=3)

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=3)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 4)....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [4, 5[ t=4

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 4)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=7, end=0), 
[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=3, write_position=3, full=1
total_duration=5
last_write_time=7, readable_time_span=[3, 8[, writable_time_span=[8, 8[
reader state=5, writer state=0, end_time=20, read_start_time=3


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=7)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 6) --> [3, 8[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=3, write_position=3, full=1
total_duration=5
last_write_time=7, readable_time_span=[3, 8[, writable_time_span=[8, 8[
reader state=-1, writer state=1, end_time=20, read_start_time=3


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 6)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=4, write_position=3, full=0
total_duration=5
last_write_time=7, readable_time_span=[4, 8[, writable_time_span=[8, 9[
reader state=0, writer state=1, end_time=20, read_start_time=4


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=6, end=0), 
[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
cannot lock mutex for debug_print



[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 6)

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 4) --> [2, 7[

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [8, 9[ t=8

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=2, write_position=2, full=1
total_duration=5
last_write_time=6, readable_time_span=[2, 7[, writable_time_span=[7, 7[
reader state=-1, writer state=1, end_time=20, read_start_time=2


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 4)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=3, write_position=2, full=0
total_duration=5
last_write_time=6, readable_time_span=[3, 7[, writable_time_span=[7, 8[
reader state=0, writer state=-1, end_time=20, read_start_time=3


[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [7, 8[ t=7

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 7)....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=4, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=4, readable_time_span=[4, 5[, writable_time_span=[5, 5[
reader state=-1, writer state=0, end_time=20, read_start_time=4


[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 4) --> [4, 5[

[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 4)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 4)

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [5, 6[ t=5

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 5)....

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=4, readable_time_span=[5, 5[, writable_time_span=[5, 6[
reader state=0, writer state=-1, end_time=20, read_start_time=5


[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=4)

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=4)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 5)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=8, end=0), 
[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=4, write_position=4, full=1
total_duration=5
last_write_time=8, readable_time_span=[4, 9[, writable_time_span=[9, 9[
reader state=5, writer state=0, end_time=20, read_start_time=4


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=8)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 7) --> [4, 9[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=4, write_position=4, full=1
total_duration=5
last_write_time=8, readable_time_span=[4, 9[, writable_time_span=[9, 9[
reader state=-1, writer state=1, end_time=20, read_start_time=4


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 7)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=4, full=0
total_duration=5
last_write_time=8, readable_time_span=[5, 9[, writable_time_span=[9, 10[
reader state=0, writer state=1, end_time=20, read_start_time=5


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=7, end=0), 
[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
cannot lock mutex for debug_print



[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 7)

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 5) --> [3, 8[

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [9, 10[ t=9

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=3, write_position=3, full=1
total_duration=5
last_write_time=7, readable_time_span=[3, 8[, writable_time_span=[8, 8[
reader state=-1, writer state=1, end_time=20, read_start_time=3


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 5)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=4, write_position=3, full=0
total_duration=5
last_write_time=7, readable_time_span=[4, 8[, writable_time_span=[8, 9[
reader state=0, writer state=-1, end_time=20, read_start_time=4


[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [8, 9[ t=8

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 8)....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=5, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=5, readable_time_span=[5, 6[, writable_time_span=[6, 6[
reader state=-1, writer state=0, end_time=20, read_start_time=5


[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 5) --> [5, 6[

[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 5)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 5)

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [6, 7[ t=6

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 6)....

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=5, readable_time_span=[6, 6[, writable_time_span=[6, 7[
reader state=0, writer state=-1, end_time=20, read_start_time=6


[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=5)

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=5)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 6)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=9, end=0), 
[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=5
last_write_time=9, readable_time_span=[5, 10[, writable_time_span=[10, 10[
reader state=5, writer state=0, end_time=20, read_start_time=5


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=9)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 8) --> [5, 10[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=5
last_write_time=9, readable_time_span=[5, 10[, writable_time_span=[10, 10[
reader state=-1, writer state=1, end_time=20, read_start_time=5


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 8)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=1, write_position=0, full=0
total_duration=5
last_write_time=9, readable_time_span=[6, 10[, writable_time_span=[10, 11[
reader state=0, writer state=1, end_time=20, read_start_time=6


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [10, 11[ t=10

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=8, end=0), 
[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=4, write_position=4, full=1
total_duration=5
last_write_time=8, readable_time_span=[4, 9[, writable_time_span=[9, 9[
reader state=-1, writer state=0, end_time=20, read_start_time=4


[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 6) --> [4, 9[

[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 8)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=4, write_position=4, full=1
total_duration=5
last_write_time=8, readable_time_span=[4, 9[, writable_time_span=[9, 9[
reader state=-1, writer state=1, end_time=20, read_start_time=4


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 6)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=4, full=0
total_duration=5
last_write_time=8, readable_time_span=[5, 9[, writable_time_span=[9, 10[
reader state=0, writer state=-1, end_time=20, read_start_time=5


[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [9, 10[ t=9

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 9)....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=6, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=6, readable_time_span=[6, 7[, writable_time_span=[7, 7[
reader state=1, writer state=0, end_time=20, read_start_time=6


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 6)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 6) --> [6, 7[

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 6)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=6, readable_time_span=[7, 7[, writable_time_span=[7, 8[
reader state=0, writer state=1, end_time=20, read_start_time=7


[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=6)

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=6)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 7)....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [7, 8[ t=7

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 7)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=10, end=0), 
[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=1, write_position=1, full=1
total_duration=5
last_write_time=10, readable_time_span=[6, 11[, writable_time_span=[11, 11[
reader state=5, writer state=0, end_time=20, read_start_time=6


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=10)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 9) --> [6, 11[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=1, write_position=1, full=1
total_duration=5
last_write_time=10, readable_time_span=[6, 11[, writable_time_span=[11, 11[
reader state=-1, writer state=1, end_time=20, read_start_time=6


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 9)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=2, write_position=1, full=0
total_duration=5
last_write_time=10, readable_time_span=[7, 11[, writable_time_span=[11, 12[
reader state=0, writer state=1, end_time=20, read_start_time=7


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=9, end=0), 
[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
cannot lock mutex for debug_print



[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 9)

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 7) --> [5, 10[

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [11, 12[ t=11

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=5
last_write_time=9, readable_time_span=[5, 10[, writable_time_span=[10, 10[
reader state=-1, writer state=1, end_time=20, read_start_time=5


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 7)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=1, write_position=0, full=0
total_duration=5
last_write_time=9, readable_time_span=[6, 10[, writable_time_span=[10, 11[
reader state=0, writer state=-1, end_time=20, read_start_time=6


[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [10, 11[ t=10

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 10)....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=7, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=7, readable_time_span=[7, 8[, writable_time_span=[8, 8[
reader state=1, writer state=0, end_time=20, read_start_time=7


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 7)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 7) --> [7, 8[

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 7)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=7, readable_time_span=[8, 8[, writable_time_span=[8, 9[
reader state=0, writer state=1, end_time=20, read_start_time=8


[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=7)

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=7)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 8)....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [8, 9[ t=8

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 8)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=11, end=0), 
[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=2, write_position=2, full=1
total_duration=5
last_write_time=11, readable_time_span=[7, 12[, writable_time_span=[12, 12[
reader state=5, writer state=0, end_time=20, read_start_time=7


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=11)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 10) --> [7, 12[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=2, write_position=2, full=1
total_duration=5
last_write_time=11, readable_time_span=[7, 12[, writable_time_span=[12, 12[
reader state=-1, writer state=1, end_time=20, read_start_time=7


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 10)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=3, write_position=2, full=0
total_duration=5
last_write_time=11, readable_time_span=[8, 12[, writable_time_span=[12, 13[
reader state=0, writer state=1, end_time=20, read_start_time=8


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=10, end=0), 
[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
cannot lock mutex for debug_print



[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 10)

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 8) --> [6, 11[

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [12, 13[ t=12

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=1, write_position=1, full=1
total_duration=5
last_write_time=10, readable_time_span=[6, 11[, writable_time_span=[11, 11[
reader state=-1, writer state=1, end_time=20, read_start_time=6


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 8)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=2, write_position=1, full=0
total_duration=5
last_write_time=10, readable_time_span=[7, 11[, writable_time_span=[11, 12[
reader state=0, writer state=-1, end_time=20, read_start_time=7


[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [11, 12[ t=11

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 11)....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=8, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=8, readable_time_span=[8, 9[, writable_time_span=[9, 9[
reader state=1, writer state=0, end_time=20, read_start_time=8


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 8)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 8) --> [8, 9[

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 8)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=8, readable_time_span=[9, 9[, writable_time_span=[9, 10[
reader state=0, writer state=1, end_time=20, read_start_time=9


[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=8)

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=8)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 9)....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [9, 10[ t=9

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 9)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=12, end=0), 
[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=3, write_position=3, full=1
total_duration=5
last_write_time=12, readable_time_span=[8, 13[, writable_time_span=[13, 13[
reader state=5, writer state=0, end_time=20, read_start_time=8


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=12)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 11) --> [8, 13[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=3, write_position=3, full=1
total_duration=5
last_write_time=12, readable_time_span=[8, 13[, writable_time_span=[13, 13[
reader state=-1, writer state=1, end_time=20, read_start_time=8


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 11)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=4, write_position=3, full=0
total_duration=5
last_write_time=12, readable_time_span=[9, 13[, writable_time_span=[13, 14[
reader state=0, writer state=1, end_time=20, read_start_time=9


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=11, end=0), 
[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
cannot lock mutex for debug_print



[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 11)

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 9) --> [7, 12[

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [13, 14[ t=13

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=2, write_position=2, full=1
total_duration=5
last_write_time=11, readable_time_span=[7, 12[, writable_time_span=[12, 12[
reader state=-1, writer state=1, end_time=20, read_start_time=7


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 9)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=3, write_position=2, full=0
total_duration=5
last_write_time=11, readable_time_span=[8, 12[, writable_time_span=[12, 13[
reader state=0, writer state=-1, end_time=20, read_start_time=8


[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [12, 13[ t=12

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 12)....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=9, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=9, readable_time_span=[9, 10[, writable_time_span=[10, 10[
reader state=1, writer state=0, end_time=20, read_start_time=9


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 9)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 9) --> [9, 10[

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 9)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=9, readable_time_span=[10, 10[, writable_time_span=[10, 11[
reader state=0, writer state=1, end_time=20, read_start_time=10


[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=9)

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=9)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 10)....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [10, 11[ t=10

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 10)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=13, end=0), 
[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=4, write_position=4, full=1
total_duration=5
last_write_time=13, readable_time_span=[9, 14[, writable_time_span=[14, 14[
reader state=5, writer state=0, end_time=20, read_start_time=9


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=13)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 12) --> [9, 14[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=4, write_position=4, full=1
total_duration=5
last_write_time=13, readable_time_span=[9, 14[, writable_time_span=[14, 14[
reader state=-1, writer state=1, end_time=20, read_start_time=9


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 12)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=4, full=0
total_duration=5
last_write_time=13, readable_time_span=[10, 14[, writable_time_span=[14, 15[
reader state=0, writer state=1, end_time=20, read_start_time=10


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=12, end=0), 
[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
cannot lock mutex for debug_print



[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 12)

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [14, 15[ t=14

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 10) --> [8, 13[

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=3, write_position=3, full=1
total_duration=5
last_write_time=12, readable_time_span=[8, 13[, writable_time_span=[13, 13[
reader state=-1, writer state=1, end_time=20, read_start_time=8


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 10)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=4, write_position=3, full=0
total_duration=5
last_write_time=12, readable_time_span=[9, 13[, writable_time_span=[13, 14[
reader state=0, writer state=-1, end_time=20, read_start_time=9


[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [13, 14[ t=13

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 13)....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=10, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=10, readable_time_span=[10, 11[, writable_time_span=[11, 11[
reader state=1, writer state=0, end_time=20, read_start_time=10


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 10)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 10) --> [10, 11[

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 10)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=10, readable_time_span=[11, 11[, writable_time_span=[11, 12[
reader state=0, writer state=1, end_time=20, read_start_time=11


[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=10)

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=10)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 11)....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [11, 12[ t=11

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 11)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=14, end=0), 
[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=5
last_write_time=14, readable_time_span=[10, 15[, writable_time_span=[15, 15[
reader state=5, writer state=0, end_time=20, read_start_time=10


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=14)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 13) --> [10, 15[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=5
last_write_time=14, readable_time_span=[10, 15[, writable_time_span=[15, 15[
reader state=-1, writer state=1, end_time=20, read_start_time=10


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 13)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=1, write_position=0, full=0
total_duration=5
last_write_time=14, readable_time_span=[11, 15[, writable_time_span=[15, 16[
reader state=0, writer state=1, end_time=20, read_start_time=11


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=13, end=0), 
[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
cannot lock mutex for debug_print



[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 13)

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 11) --> [9, 14[

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [15, 16[ t=15

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=4, write_position=4, full=1
total_duration=5
last_write_time=13, readable_time_span=[9, 14[, writable_time_span=[14, 14[
reader state=-1, writer state=1, end_time=20, read_start_time=9


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 11)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=4, full=0
total_duration=5
last_write_time=13, readable_time_span=[10, 14[, writable_time_span=[14, 15[
reader state=0, writer state=-1, end_time=20, read_start_time=10


[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [14, 15[ t=14

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 14)....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=11, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=11, readable_time_span=[11, 12[, writable_time_span=[12, 12[
reader state=1, writer state=0, end_time=20, read_start_time=11


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 11)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 11) --> [11, 12[

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 11)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=11, readable_time_span=[12, 12[, writable_time_span=[12, 13[
reader state=0, writer state=1, end_time=20, read_start_time=12


[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=11)

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=11)

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [12, 13[ t=12

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 12)....

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 12)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=15, end=0), 
[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=1, write_position=1, full=1
total_duration=5
last_write_time=15, readable_time_span=[11, 16[, writable_time_span=[16, 16[
reader state=5, writer state=0, end_time=20, read_start_time=11


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=15)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 14) --> [11, 16[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=1, write_position=1, full=1
total_duration=5
last_write_time=15, readable_time_span=[11, 16[, writable_time_span=[16, 16[
reader state=-1, writer state=1, end_time=20, read_start_time=11


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 14)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=2, write_position=1, full=0
total_duration=5
last_write_time=15, readable_time_span=[12, 16[, writable_time_span=[16, 17[
reader state=0, writer state=1, end_time=20, read_start_time=12


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=14, end=0), 
[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
cannot lock mutex for debug_print



[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 14)

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 12) --> [10, 15[

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [16, 17[ t=16

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=5
last_write_time=14, readable_time_span=[10, 15[, writable_time_span=[15, 15[
reader state=-1, writer state=1, end_time=20, read_start_time=10


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 12)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=1, write_position=0, full=0
total_duration=5
last_write_time=14, readable_time_span=[11, 15[, writable_time_span=[15, 16[
reader state=0, writer state=-1, end_time=20, read_start_time=11


[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [15, 16[ t=15

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 15)....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=12, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=12, readable_time_span=[12, 13[, writable_time_span=[13, 13[
reader state=1, writer state=0, end_time=20, read_start_time=12


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 12)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 12) --> [12, 13[

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 12)

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [13, 14[ t=13

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=12, readable_time_span=[13, 13[, writable_time_span=[13, 14[
reader state=0, writer state=-1, end_time=20, read_start_time=13


[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 13)....

[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=12)

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=12)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 13)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=16, end=0), 
[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=2, write_position=2, full=1
total_duration=5
last_write_time=16, readable_time_span=[12, 17[, writable_time_span=[17, 17[
reader state=5, writer state=0, end_time=20, read_start_time=12


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=16)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 15) --> [12, 17[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=2, write_position=2, full=1
total_duration=5
last_write_time=16, readable_time_span=[12, 17[, writable_time_span=[17, 17[
reader state=-1, writer state=1, end_time=20, read_start_time=12


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 15)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=3, write_position=2, full=0
total_duration=5
last_write_time=16, readable_time_span=[13, 17[, writable_time_span=[17, 18[
reader state=0, writer state=1, end_time=20, read_start_time=13


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=15, end=0), 
[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
cannot lock mutex for debug_print



[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 13) --> [11, 16[

[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 15)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [17, 18[ t=17

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=1, write_position=1, full=1
total_duration=5
last_write_time=15, readable_time_span=[11, 16[, writable_time_span=[16, 16[
reader state=-1, writer state=1, end_time=20, read_start_time=11


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 13)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=2, write_position=1, full=0
total_duration=5
last_write_time=15, readable_time_span=[12, 16[, writable_time_span=[16, 17[
reader state=0, writer state=-1, end_time=20, read_start_time=12


[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [16, 17[ t=16

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 16)....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=13, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=13, readable_time_span=[13, 14[, writable_time_span=[14, 14[
reader state=1, writer state=0, end_time=20, read_start_time=13


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 13)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 13) --> [13, 14[

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 13)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=13, readable_time_span=[14, 14[, writable_time_span=[14, 15[
reader state=0, writer state=1, end_time=20, read_start_time=14


[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=13)

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=13)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 14)....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [14, 15[ t=14

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 14)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=17, end=0), 
[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=3, write_position=3, full=1
total_duration=5
last_write_time=17, readable_time_span=[13, 18[, writable_time_span=[18, 18[
reader state=5, writer state=0, end_time=20, read_start_time=13


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=17)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 16) --> [13, 18[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=3, write_position=3, full=1
total_duration=5
last_write_time=17, readable_time_span=[13, 18[, writable_time_span=[18, 18[
reader state=-1, writer state=1, end_time=20, read_start_time=13


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 16)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=4, write_position=3, full=0
total_duration=5
last_write_time=17, readable_time_span=[14, 18[, writable_time_span=[18, 19[
reader state=0, writer state=1, end_time=20, read_start_time=14


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=16, end=0), 
[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
cannot lock mutex for debug_print



[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 16)

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [18, 19[ t=18

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 14) --> [12, 17[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=2, write_position=2, full=1
total_duration=5
last_write_time=16, readable_time_span=[12, 17[, writable_time_span=[17, 17[
reader state=-1, writer state=1, end_time=20, read_start_time=12


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 14)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=3, write_position=2, full=0
total_duration=5
last_write_time=16, readable_time_span=[13, 17[, writable_time_span=[17, 18[
reader state=0, writer state=-1, end_time=20, read_start_time=13


[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [17, 18[ t=17

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 17)....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=14, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=14, readable_time_span=[14, 15[, writable_time_span=[15, 15[
reader state=1, writer state=0, end_time=20, read_start_time=14


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 14)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 14) --> [14, 15[

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 14)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=14, readable_time_span=[15, 15[, writable_time_span=[15, 16[
reader state=0, writer state=1, end_time=20, read_start_time=15


[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=14)

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=14)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 15)....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [15, 16[ t=15

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 15)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=18, end=0), 
[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=4, write_position=4, full=1
total_duration=5
last_write_time=18, readable_time_span=[14, 19[, writable_time_span=[19, 19[
reader state=5, writer state=0, end_time=20, read_start_time=14


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=18)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 17) --> [14, 19[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=4, write_position=4, full=1
total_duration=5
last_write_time=18, readable_time_span=[14, 19[, writable_time_span=[19, 19[
reader state=-1, writer state=1, end_time=20, read_start_time=14


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 17)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=4, full=0
total_duration=5
last_write_time=18, readable_time_span=[15, 19[, writable_time_span=[19, 20[
reader state=0, writer state=1, end_time=20, read_start_time=15


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=17, end=0), 
[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
cannot lock mutex for debug_print



[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 17)

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 15) --> [13, 18[

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [19, 20[ t=19

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=3, write_position=3, full=1
total_duration=5
last_write_time=17, readable_time_span=[13, 18[, writable_time_span=[18, 18[
reader state=-1, writer state=1, end_time=20, read_start_time=13


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 15)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=4, write_position=3, full=0
total_duration=5
last_write_time=17, readable_time_span=[14, 18[, writable_time_span=[18, 19[
reader state=0, writer state=-1, end_time=20, read_start_time=14


[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [18, 19[ t=18

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 18)....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=15, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=15, readable_time_span=[15, 16[, writable_time_span=[16, 16[
reader state=1, writer state=0, end_time=20, read_start_time=15


[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 15) --> [15, 16[

[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 15)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 15)

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [16, 17[ t=16

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 16)....

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=15, readable_time_span=[16, 16[, writable_time_span=[16, 17[
reader state=0, writer state=-1, end_time=20, read_start_time=16


[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=15)

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=15)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 16)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=19, end=1), 
[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=5
last_write_time=19, readable_time_span=[15, 20[, writable_time_span=[20, 20[
reader state=5, writer state=0, end_time=20, read_start_time=15


[src/graph/media_source_node.cc:14, thread_main_]
source:: ended

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 18) --> [15, 20[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=5
last_write_time=19, readable_time_span=[15, 20[, writable_time_span=[20, 20[
reader state=-1, writer state=0, end_time=20, read_start_time=15


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 18)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=1, write_position=0, full=0
total_duration=5
last_write_time=19, readable_time_span=[16, 20[, writable_time_span=[20, 21[
reader state=0, writer state=0, end_time=20, read_start_time=16


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=18, end=0), 
[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
cannot lock mutex for debug_print



[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 18)

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 16) --> [14, 19[

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=4, write_position=4, full=1
total_duration=5
last_write_time=18, readable_time_span=[14, 19[, writable_time_span=[19, 19[
reader state=-1, writer state=1, end_time=20, read_start_time=14


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 16)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=4, full=0
total_duration=5
last_write_time=18, readable_time_span=[15, 19[, writable_time_span=[19, 20[
reader state=0, writer state=-1, end_time=20, read_start_time=15


[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [19, 20[ t=19

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 19)....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=16, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
cannot lock mutex for debug_print



[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 19) --> [16, 20[

[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 16)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 16) --> [16, 17[

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 16)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=16, readable_time_span=[17, 17[, writable_time_span=[17, 18[
reader state=0, writer state=-1, end_time=20, read_start_time=17


[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [17, 18[ t=17

[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=16)

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=16)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 17)....

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 17)....

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=1, write_position=0, full=0
total_duration=5
last_write_time=19, readable_time_span=[16, 20[, writable_time_span=[20, 21[
reader state=-1, writer state=0, end_time=20, read_start_time=16


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 19)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=2, write_position=0, full=0
total_duration=5
last_write_time=19, readable_time_span=[17, 20[, writable_time_span=[20, 22[
reader state=0, writer state=0, end_time=20, read_start_time=17


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=19, end=1), 
[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=5
last_write_time=19, readable_time_span=[15, 20[, writable_time_span=[20, 20[
reader state=-1, writer state=0, end_time=20, read_start_time=15


[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 17) --> [15, 20[

[src/graph/media_node.cc:14, thread_main_]
node:: ended

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=5
last_write_time=19, readable_time_span=[15, 20[, writable_time_span=[20, 20[
reader state=-1, writer state=0, end_time=20, read_start_time=15


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 17)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=1, write_position=0, full=0
total_duration=5
last_write_time=19, readable_time_span=[16, 20[, writable_time_span=[20, 21[
reader state=0, writer state=0, end_time=20, read_start_time=16


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=17, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=17, readable_time_span=[17, 18[, writable_time_span=[18, 18[
reader state=1, writer state=0, end_time=20, read_start_time=17


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 17)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 17) --> [17, 18[

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 17)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=17, readable_time_span=[18, 18[, writable_time_span=[18, 19[
reader state=0, writer state=1, end_time=20, read_start_time=18


[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=17)

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=17)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 18)....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [18, 19[ t=18

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 18)....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 18) --> [16, 20[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=1, write_position=0, full=0
total_duration=5
last_write_time=19, readable_time_span=[16, 20[, writable_time_span=[20, 21[
reader state=-1, writer state=0, end_time=20, read_start_time=16


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 18)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=2, write_position=0, full=0
total_duration=5
last_write_time=19, readable_time_span=[17, 20[, writable_time_span=[20, 22[
reader state=0, writer state=0, end_time=20, read_start_time=17


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=18, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=18, readable_time_span=[18, 19[, writable_time_span=[19, 19[
reader state=1, writer state=0, end_time=20, read_start_time=18


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 18)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 18) --> [18, 19[

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 18)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=18, readable_time_span=[19, 19[, writable_time_span=[19, 20[
reader state=0, writer state=1, end_time=20, read_start_time=19


[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=18)

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=18)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 19)....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [19, 20[ t=19

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 19)....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 19) --> [17, 20[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=2, write_position=0, full=0
total_duration=5
last_write_time=19, readable_time_span=[17, 20[, writable_time_span=[20, 22[
reader state=-1, writer state=0, end_time=20, read_start_time=17


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 19)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=3, write_position=0, full=0
total_duration=5
last_write_time=19, readable_time_span=[18, 20[, writable_time_span=[20, 23[
reader state=0, writer state=0, end_time=20, read_start_time=18


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=19, end=1), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=19, readable_time_span=[19, 20[, writable_time_span=[20, 20[
reader state=1, writer state=0, end_time=20, read_start_time=19


[src/graph/media_node.cc:14, thread_main_]
node:: ended

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 19) --> [19, 20[

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 19)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=1 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=19, readable_time_span=[20, 20[, writable_time_span=[20, 21[
reader state=0, writer state=0, end_time=20, read_start_time=20


[src/graph/media_sink_node.cc:23, pull_frame_]
sink: reached end!

[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=19)

[src/graph/media_graph.cc:53, run]
graph::reached end!

[src/graph/media_graph.cc:17, ~media_graph]
media_graph stopping

[src/graph/media_graph.cc:19, ~media_graph]
media_graph no more

[src/graph/media_graph.cc:12, media_graph]
media_graph

[src/graph/media_source_node.cc:60, launch_]
source:: launch

[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=-1)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [0, 1[ t=0

[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = -1)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [0, 1[ t=0

[src/graph/media_source_node.cc:60, launch_]
source:: launch

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 0)....

[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=-1)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [0, 1[ t=0

[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = -1)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=-1)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 0)....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [0, 1[ t=0

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 0)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=0, end=0), 
[frame_shape=(320, 240), required_duration=6, setup=1]
buffer: ndarray_shared_ring: 
cannot lock mutex for debug_print



[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=0, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=0, readable_time_span=[0, 1[, writable_time_span=[1, 1[
reader state=0, writer state=0, end_time=20, read_start_time=0


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=0)

[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=0)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [1, 2[ t=1

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=1, end=0), 
[frame_shape=(320, 240), required_duration=6, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=2, full=0
total_duration=6
last_write_time=1, readable_time_span=[0, 2[, writable_time_span=[2, 6[
reader state=6, writer state=0, end_time=20, read_start_time=0


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=1)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [2, 3[ t=2

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=2, end=0), 
[frame_shape=(320, 240), required_duration=6, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=3, full=0
total_duration=6
last_write_time=2, readable_time_span=[0, 3[, writable_time_span=[3, 6[
reader state=6, writer state=0, end_time=20, read_start_time=0


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=2)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [3, 4[ t=3

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=3, end=0), 
[frame_shape=(320, 240), required_duration=6, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=4, full=0
total_duration=6
last_write_time=3, readable_time_span=[0, 4[, writable_time_span=[4, 6[
reader state=6, writer state=0, end_time=20, read_start_time=0


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=3)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [4, 5[ t=4

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=4, end=0), 
[frame_shape=(320, 240), required_duration=6, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=5, full=0
total_duration=6
last_write_time=4, readable_time_span=[0, 5[, writable_time_span=[5, 6[
reader state=6, writer state=0, end_time=20, read_start_time=0


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=4)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [5, 6[ t=5

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=5, end=0), 
[frame_shape=(320, 240), required_duration=6, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=6
last_write_time=5, readable_time_span=[0, 6[, writable_time_span=[6, 6[
reader state=6, writer state=0, end_time=20, read_start_time=0


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=5)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 0) --> [0, 6[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=6, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=6
last_write_time=5, readable_time_span=[0, 6[, writable_time_span=[6, 6[
reader state=-1, writer state=1, end_time=20, read_start_time=0


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 0)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=6, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=1, write_position=0, full=0
total_duration=6
last_write_time=5, readable_time_span=[1, 6[, writable_time_span=[6, 7[
reader state=0, writer state=1, end_time=20, read_start_time=1


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=0, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
cannot lock mutex for debug_print



[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 0)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [6, 7[ t=6

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 0) --> [0, 1[

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 0)....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 0) --> [0, 1[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=0, readable_time_span=[0, 1[, writable_time_span=[1, 1[
reader state=-1, writer state=1, end_time=20, read_start_time=0


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 0)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=0, readable_time_span=[1, 1[, writable_time_span=[1, 2[
reader state=0, writer state=-1, end_time=20, read_start_time=1


[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [1, 2[ t=1

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 1)....

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 0)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=0, readable_time_span=[1, 1[, writable_time_span=[1, 2[
reader state=0, writer state=-1, end_time=20, read_start_time=1


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [1, 2[ t=1

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=0, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=0, readable_time_span=[0, 1[, writable_time_span=[1, 1[
reader state=1, writer state=0, end_time=20, read_start_time=0


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 0)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 0) --> [0, 1[

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 0)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=0, readable_time_span=[1, 1[, writable_time_span=[1, 2[
reader state=0, writer state=1, end_time=20, read_start_time=1


[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=0)

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=0)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 1)....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [1, 2[ t=1

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 1)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=6, end=0), 
[frame_shape=(320, 240), required_duration=6, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=1, write_position=1, full=1
total_duration=6
last_write_time=6, readable_time_span=[1, 7[, writable_time_span=[7, 7[
reader state=6, writer state=0, end_time=20, read_start_time=1


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=6)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 1) --> [1, 7[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=6, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=1, write_position=1, full=1
total_duration=6
last_write_time=6, readable_time_span=[1, 7[, writable_time_span=[7, 7[
reader state=-1, writer state=1, end_time=20, read_start_time=1


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 1)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=6, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=2, write_position=1, full=0
total_duration=6
last_write_time=6, readable_time_span=[2, 7[, writable_time_span=[7, 8[
reader state=0, writer state=1, end_time=20, read_start_time=2


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=1, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
cannot lock mutex for debug_print



[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [7, 8[ t=7

[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 1)

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 1) --> [1, 2[

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 1)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=1, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=1, readable_time_span=[1, 2[, writable_time_span=[2, 2[
reader state=1, writer state=0, end_time=20, read_start_time=1


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=1)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 1) --> [1, 2[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=1, readable_time_span=[1, 2[, writable_time_span=[2, 2[
reader state=-1, writer state=1, end_time=20, read_start_time=1


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 1)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=1, readable_time_span=[2, 2[, writable_time_span=[2, 3[
reader state=0, writer state=-1, end_time=20, read_start_time=2


[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [2, 3[ t=2

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 1)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 2)....

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=1, readable_time_span=[2, 2[, writable_time_span=[2, 3[
reader state=0, writer state=1, end_time=20, read_start_time=2


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [2, 3[ t=2

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=1, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=1, readable_time_span=[1, 2[, writable_time_span=[2, 2[
reader state=1, writer state=0, end_time=20, read_start_time=1


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 1)

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 1) --> [1, 2[

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 1)

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [2, 3[ t=2

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 2)....

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=1, readable_time_span=[2, 2[, writable_time_span=[2, 3[
reader state=0, writer state=-1, end_time=20, read_start_time=2


[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=1)

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=1)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 2)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=7, end=0), 
[frame_shape=(320, 240), required_duration=6, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=2, write_position=2, full=1
total_duration=6
last_write_time=7, readable_time_span=[2, 8[, writable_time_span=[8, 8[
reader state=6, writer state=0, end_time=20, read_start_time=2


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=7)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 2) --> [2, 8[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=6, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=2, write_position=2, full=1
total_duration=6
last_write_time=7, readable_time_span=[2, 8[, writable_time_span=[8, 8[
reader state=-1, writer state=1, end_time=20, read_start_time=2


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 2)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=6, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=3, write_position=2, full=0
total_duration=6
last_write_time=7, readable_time_span=[3, 8[, writable_time_span=[8, 9[
reader state=0, writer state=1, end_time=20, read_start_time=3


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=2, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
cannot lock mutex for debug_print



[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [8, 9[ t=8

[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 2)

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 2) --> [2, 3[

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 2)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=2, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=2, readable_time_span=[2, 3[, writable_time_span=[3, 3[
reader state=-1, writer state=0, end_time=20, read_start_time=2


[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 2) --> [2, 3[

[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=2)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=2, readable_time_span=[2, 3[, writable_time_span=[3, 3[
reader state=-1, writer state=1, end_time=20, read_start_time=2


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 2)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=2, readable_time_span=[3, 3[, writable_time_span=[3, 4[
reader state=0, writer state=-1, end_time=20, read_start_time=3


[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [3, 4[ t=3

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 2)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 3)....

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=2, readable_time_span=[3, 3[, writable_time_span=[3, 4[
reader state=0, writer state=1, end_time=20, read_start_time=3


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [3, 4[ t=3

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=2, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=2, readable_time_span=[2, 3[, writable_time_span=[3, 3[
reader state=1, writer state=0, end_time=20, read_start_time=2


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 2)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 2) --> [2, 3[

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 2)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=2, readable_time_span=[3, 3[, writable_time_span=[3, 4[
reader state=0, writer state=1, end_time=20, read_start_time=3


[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=2)

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=2)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 3)....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [3, 4[ t=3

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 3)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 3) --> [3, 9[

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=8, end=0), 
[frame_shape=(320, 240), required_duration=6, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=3, write_position=3, full=1
total_duration=6
last_write_time=8, readable_time_span=[3, 9[, writable_time_span=[9, 9[
reader state=-1, writer state=0, end_time=20, read_start_time=3


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=8)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=6, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=3, write_position=3, full=1
total_duration=6
last_write_time=8, readable_time_span=[3, 9[, writable_time_span=[9, 9[
reader state=-1, writer state=1, end_time=20, read_start_time=3


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 3)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=6, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=4, write_position=3, full=0
total_duration=6
last_write_time=8, readable_time_span=[4, 9[, writable_time_span=[9, 10[
reader state=0, writer state=1, end_time=20, read_start_time=4


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [9, 10[ t=9

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 3) --> [3, 4[

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=3, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=3, readable_time_span=[3, 4[, writable_time_span=[4, 4[
reader state=-1, writer state=0, end_time=20, read_start_time=3


[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 3)....

[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 3)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=3, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=3, readable_time_span=[3, 4[, writable_time_span=[4, 4[
reader state=1, writer state=0, end_time=20, read_start_time=3


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=3)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 3) --> [3, 4[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=3, readable_time_span=[3, 4[, writable_time_span=[4, 4[
reader state=-1, writer state=1, end_time=20, read_start_time=3


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 3)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=3, readable_time_span=[4, 4[, writable_time_span=[4, 5[
reader state=0, writer state=-1, end_time=20, read_start_time=4


[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [4, 5[ t=4

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 3)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 4)....

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=3, readable_time_span=[4, 4[, writable_time_span=[4, 5[
reader state=0, writer state=1, end_time=20, read_start_time=4


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [4, 5[ t=4

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=3, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=3, readable_time_span=[3, 4[, writable_time_span=[4, 4[
reader state=1, writer state=0, end_time=20, read_start_time=3


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 3)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 3) --> [3, 4[

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 3)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=3, readable_time_span=[4, 4[, writable_time_span=[4, 5[
reader state=0, writer state=1, end_time=20, read_start_time=4


[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=3)

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=3)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 4)....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [4, 5[ t=4

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 4)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=9, end=0), 
[frame_shape=(320, 240), required_duration=6, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=4, write_position=4, full=1
total_duration=6
last_write_time=9, readable_time_span=[4, 10[, writable_time_span=[10, 10[
reader state=6, writer state=0, end_time=20, read_start_time=4


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=9)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 4) --> [4, 10[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=6, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=4, write_position=4, full=1
total_duration=6
last_write_time=9, readable_time_span=[4, 10[, writable_time_span=[10, 10[
reader state=-1, writer state=1, end_time=20, read_start_time=4


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 4)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=6, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=5, write_position=4, full=0
total_duration=6
last_write_time=9, readable_time_span=[5, 10[, writable_time_span=[10, 11[
reader state=0, writer state=1, end_time=20, read_start_time=5


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [10, 11[ t=10

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=4, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=4, readable_time_span=[4, 5[, writable_time_span=[5, 5[
reader state=-1, writer state=0, end_time=20, read_start_time=4


[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 4) --> [4, 5[

[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 4)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 4)....

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=4, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=4, readable_time_span=[4, 5[, writable_time_span=[5, 5[
reader state=1, writer state=0, end_time=20, read_start_time=4


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=4)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 4) --> [4, 5[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=4, readable_time_span=[4, 5[, writable_time_span=[5, 5[
reader state=-1, writer state=1, end_time=20, read_start_time=4


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 4)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=4, readable_time_span=[5, 5[, writable_time_span=[5, 6[
reader state=0, writer state=-1, end_time=20, read_start_time=5


[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [5, 6[ t=5

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 4)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 5)....

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=4, readable_time_span=[5, 5[, writable_time_span=[5, 6[
reader state=0, writer state=1, end_time=20, read_start_time=5


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [5, 6[ t=5

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=4, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=4, readable_time_span=[4, 5[, writable_time_span=[5, 5[
reader state=1, writer state=0, end_time=20, read_start_time=4


[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 4) --> [4, 5[

[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 4)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 4)

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [5, 6[ t=5

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 5)....

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=4, readable_time_span=[5, 5[, writable_time_span=[5, 6[
reader state=0, writer state=-1, end_time=20, read_start_time=5


[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=4)

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=4)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 5)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=10, end=0), 
[frame_shape=(320, 240), required_duration=6, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=5, write_position=5, full=1
total_duration=6
last_write_time=10, readable_time_span=[5, 11[, writable_time_span=[11, 11[
reader state=6, writer state=0, end_time=20, read_start_time=5


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=10)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 5) --> [5, 11[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=6, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=5, write_position=5, full=1
total_duration=6
last_write_time=10, readable_time_span=[5, 11[, writable_time_span=[11, 11[
reader state=-1, writer state=1, end_time=20, read_start_time=5


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 5)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=6, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=5, full=0
total_duration=6
last_write_time=10, readable_time_span=[6, 11[, writable_time_span=[11, 12[
reader state=0, writer state=1, end_time=20, read_start_time=6


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=5, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
cannot lock mutex for debug_print



[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [11, 12[ t=11

[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 5)

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 5) --> [5, 6[

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 5)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=5, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=5, readable_time_span=[5, 6[, writable_time_span=[6, 6[
reader state=1, writer state=0, end_time=20, read_start_time=5


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=5)

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 5) --> [5, 6[

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=11, end=0), 
[frame_shape=(320, 240), required_duration=6, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=6
last_write_time=11, readable_time_span=[6, 12[, writable_time_span=[12, 12[
reader state=0, writer state=0, end_time=20, read_start_time=6


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=11)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=5, readable_time_span=[5, 6[, writable_time_span=[6, 6[
reader state=-1, writer state=1, end_time=20, read_start_time=5


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 5)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=5, readable_time_span=[6, 6[, writable_time_span=[6, 7[
reader state=0, writer state=-1, end_time=20, read_start_time=6


[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [6, 7[ t=6

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 5)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 6)....

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=5, readable_time_span=[6, 6[, writable_time_span=[6, 7[
reader state=0, writer state=1, end_time=20, read_start_time=6


[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 6) --> [6, 12[

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=5, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=5, readable_time_span=[5, 6[, writable_time_span=[6, 6[
reader state=1, writer state=0, end_time=20, read_start_time=5


[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [6, 7[ t=6

[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 5)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 5) --> [5, 6[

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 5)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=5, readable_time_span=[6, 6[, writable_time_span=[6, 7[
reader state=0, writer state=-1, end_time=20, read_start_time=6


[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [6, 7[ t=6

[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=5)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 6)....

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=5)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 6)....

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=6, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=6
last_write_time=11, readable_time_span=[6, 12[, writable_time_span=[12, 12[
reader state=-1, writer state=1, end_time=20, read_start_time=6


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 6)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=6, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=1, write_position=0, full=0
total_duration=6
last_write_time=11, readable_time_span=[7, 12[, writable_time_span=[12, 13[
reader state=0, writer state=1, end_time=20, read_start_time=7


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=6, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=6, readable_time_span=[6, 7[, writable_time_span=[7, 7[
reader state=-1, writer state=0, end_time=20, read_start_time=6


[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [12, 13[ t=12

[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 6)

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 6) --> [6, 7[

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 6)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=6, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=6, readable_time_span=[6, 7[, writable_time_span=[7, 7[
reader state=1, writer state=0, end_time=20, read_start_time=6


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=6)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 6) --> [6, 7[

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=12, end=0), 
[frame_shape=(320, 240), required_duration=6, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=1, write_position=1, full=1
total_duration=6
last_write_time=12, readable_time_span=[7, 13[, writable_time_span=[13, 13[
reader state=0, writer state=0, end_time=20, read_start_time=7


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=12)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=6, readable_time_span=[6, 7[, writable_time_span=[7, 7[
reader state=-1, writer state=1, end_time=20, read_start_time=6


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 6)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=6, readable_time_span=[7, 7[, writable_time_span=[7, 8[
reader state=0, writer state=-1, end_time=20, read_start_time=7


[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [7, 8[ t=7

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 7)....

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 6)

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 7) --> [7, 13[

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=6, readable_time_span=[7, 7[, writable_time_span=[7, 8[
reader state=0, writer state=-1, end_time=20, read_start_time=7


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [7, 8[ t=7

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=6, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=6, readable_time_span=[6, 7[, writable_time_span=[7, 7[
reader state=1, writer state=0, end_time=20, read_start_time=6


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 6)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 6) --> [6, 7[

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 6)

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [7, 8[ t=7

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=6, readable_time_span=[7, 7[, writable_time_span=[7, 8[
reader state=0, writer state=-1, end_time=20, read_start_time=7


[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 7)....

[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=6)

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=6)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 7)....

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=6, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=1, write_position=1, full=1
total_duration=6
last_write_time=12, readable_time_span=[7, 13[, writable_time_span=[13, 13[
reader state=-1, writer state=1, end_time=20, read_start_time=7


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 7)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=6, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=2, write_position=1, full=0
total_duration=6
last_write_time=12, readable_time_span=[8, 13[, writable_time_span=[13, 14[
reader state=0, writer state=1, end_time=20, read_start_time=8


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [13, 14[ t=13

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=7, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=7, readable_time_span=[7, 8[, writable_time_span=[8, 8[
reader state=-1, writer state=0, end_time=20, read_start_time=7


[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 7) --> [7, 8[

[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 7)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 7)....

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=7, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=7, readable_time_span=[7, 8[, writable_time_span=[8, 8[
reader state=1, writer state=0, end_time=20, read_start_time=7


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=7)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 7) --> [7, 8[

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=13, end=0), 
[frame_shape=(320, 240), required_duration=6, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=2, write_position=2, full=1
total_duration=6
last_write_time=13, readable_time_span=[8, 14[, writable_time_span=[14, 14[
reader state=0, writer state=0, end_time=20, read_start_time=8


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=13)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=7, readable_time_span=[7, 8[, writable_time_span=[8, 8[
reader state=-1, writer state=1, end_time=20, read_start_time=7


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 7)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=7, readable_time_span=[8, 8[, writable_time_span=[8, 9[
reader state=0, writer state=-1, end_time=20, read_start_time=8


[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [8, 9[ t=8

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 7)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 8)....

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=7, readable_time_span=[8, 8[, writable_time_span=[8, 9[
reader state=0, writer state=1, end_time=20, read_start_time=8


[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 8) --> [8, 14[

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [8, 9[ t=8

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=7, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=7, readable_time_span=[7, 8[, writable_time_span=[8, 8[
reader state=1, writer state=0, end_time=20, read_start_time=7


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 7)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 7) --> [7, 8[

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 7)

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [8, 9[ t=8

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=7, readable_time_span=[8, 8[, writable_time_span=[8, 9[
reader state=0, writer state=-1, end_time=20, read_start_time=8


[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 8)....

[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=7)

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=7)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 8)....

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=6, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=2, write_position=2, full=1
total_duration=6
last_write_time=13, readable_time_span=[8, 14[, writable_time_span=[14, 14[
reader state=-1, writer state=1, end_time=20, read_start_time=8


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 8)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=6, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=3, write_position=2, full=0
total_duration=6
last_write_time=13, readable_time_span=[9, 14[, writable_time_span=[14, 15[
reader state=0, writer state=1, end_time=20, read_start_time=9


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=8, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=8, readable_time_span=[8, 9[, writable_time_span=[9, 9[
reader state=-1, writer state=0, end_time=20, read_start_time=8


[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [14, 15[ t=14

[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 8)

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 8) --> [8, 9[

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 8)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=8, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=8, readable_time_span=[8, 9[, writable_time_span=[9, 9[
reader state=1, writer state=0, end_time=20, read_start_time=8


[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 8) --> [8, 9[

[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=8)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=14, end=0), 
[frame_shape=(320, 240), required_duration=6, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=3, write_position=3, full=1
total_duration=6
last_write_time=14, readable_time_span=[9, 15[, writable_time_span=[15, 15[
reader state=0, writer state=0, end_time=20, read_start_time=9


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=14)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=8, readable_time_span=[8, 9[, writable_time_span=[9, 9[
reader state=-1, writer state=1, end_time=20, read_start_time=8


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 8)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=8, readable_time_span=[9, 9[, writable_time_span=[9, 10[
reader state=0, writer state=-1, end_time=20, read_start_time=9


[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [9, 10[ t=9

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 8)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 9)....

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=8, readable_time_span=[9, 9[, writable_time_span=[9, 10[
reader state=0, writer state=1, end_time=20, read_start_time=9


[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 9) --> [9, 15[

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=8, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=8, readable_time_span=[8, 9[, writable_time_span=[9, 9[
reader state=1, writer state=0, end_time=20, read_start_time=8


[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [9, 10[ t=9

[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 8)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 8) --> [8, 9[

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 8)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=8, readable_time_span=[9, 9[, writable_time_span=[9, 10[
reader state=0, writer state=-1, end_time=20, read_start_time=9


[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [9, 10[ t=9

[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=8)

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=8)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 9)....

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 9)....

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=6, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=3, write_position=3, full=1
total_duration=6
last_write_time=14, readable_time_span=[9, 15[, writable_time_span=[15, 15[
reader state=-1, writer state=1, end_time=20, read_start_time=9


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 9)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=6, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=4, write_position=3, full=0
total_duration=6
last_write_time=14, readable_time_span=[10, 15[, writable_time_span=[15, 16[
reader state=0, writer state=1, end_time=20, read_start_time=10


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=9, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=9, readable_time_span=[9, 10[, writable_time_span=[10, 10[
reader state=-1, writer state=0, end_time=20, read_start_time=9


[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [15, 16[ t=15

[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 9)

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 9) --> [9, 10[

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 9)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=9, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=9, readable_time_span=[9, 10[, writable_time_span=[10, 10[
reader state=1, writer state=0, end_time=20, read_start_time=9


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=9)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 9) --> [9, 10[

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=15, end=0), 
[frame_shape=(320, 240), required_duration=6, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=4, write_position=4, full=1
total_duration=6
last_write_time=15, readable_time_span=[10, 16[, writable_time_span=[16, 16[
reader state=0, writer state=0, end_time=20, read_start_time=10


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=15)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=9, readable_time_span=[9, 10[, writable_time_span=[10, 10[
reader state=-1, writer state=1, end_time=20, read_start_time=9


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 9)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=9, readable_time_span=[10, 10[, writable_time_span=[10, 11[
reader state=0, writer state=-1, end_time=20, read_start_time=10


[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [10, 11[ t=10

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 9)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 10)....

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=9, readable_time_span=[10, 10[, writable_time_span=[10, 11[
reader state=0, writer state=1, end_time=20, read_start_time=10


[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 10) --> [10, 16[

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [10, 11[ t=10

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=9, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=9, readable_time_span=[9, 10[, writable_time_span=[10, 10[
reader state=1, writer state=0, end_time=20, read_start_time=9


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 9)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 9) --> [9, 10[

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 9)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=9, readable_time_span=[10, 10[, writable_time_span=[10, 11[
reader state=0, writer state=-1, end_time=20, read_start_time=10


[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [10, 11[ t=10

[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=9)

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=9)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 10)....

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 10)....

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=6, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=4, write_position=4, full=1
total_duration=6
last_write_time=15, readable_time_span=[10, 16[, writable_time_span=[16, 16[
reader state=-1, writer state=1, end_time=20, read_start_time=10


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 10)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=6, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=5, write_position=4, full=0
total_duration=6
last_write_time=15, readable_time_span=[11, 16[, writable_time_span=[16, 17[
reader state=0, writer state=1, end_time=20, read_start_time=11


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [16, 17[ t=16

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=10, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=10, readable_time_span=[10, 11[, writable_time_span=[11, 11[
reader state=-1, writer state=0, end_time=20, read_start_time=10


[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 10) --> [10, 11[

[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 10)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 10)....

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=10, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=10, readable_time_span=[10, 11[, writable_time_span=[11, 11[
reader state=1, writer state=0, end_time=20, read_start_time=10


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=10)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 10) --> [10, 11[

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=16, end=0), 
[frame_shape=(320, 240), required_duration=6, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=5, write_position=5, full=1
total_duration=6
last_write_time=16, readable_time_span=[11, 17[, writable_time_span=[17, 17[
reader state=0, writer state=0, end_time=20, read_start_time=11


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=16)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=10, readable_time_span=[10, 11[, writable_time_span=[11, 11[
reader state=-1, writer state=1, end_time=20, read_start_time=10


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 10)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=10, readable_time_span=[11, 11[, writable_time_span=[11, 12[
reader state=0, writer state=-1, end_time=20, read_start_time=11


[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [11, 12[ t=11

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 10)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 11)....

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=10, readable_time_span=[11, 11[, writable_time_span=[11, 12[
reader state=0, writer state=1, end_time=20, read_start_time=11


[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 11) --> [11, 17[

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [11, 12[ t=11

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=10, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=10, readable_time_span=[10, 11[, writable_time_span=[11, 11[
reader state=1, writer state=0, end_time=20, read_start_time=10


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 10)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 10) --> [10, 11[

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 10)

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [11, 12[ t=11

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=10, readable_time_span=[11, 11[, writable_time_span=[11, 12[
reader state=0, writer state=-1, end_time=20, read_start_time=11


[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 11)....

[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=10)

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=10)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 11)....

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=6, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=5, write_position=5, full=1
total_duration=6
last_write_time=16, readable_time_span=[11, 17[, writable_time_span=[17, 17[
reader state=-1, writer state=1, end_time=20, read_start_time=11


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 11)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=6, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=5, full=0
total_duration=6
last_write_time=16, readable_time_span=[12, 17[, writable_time_span=[17, 18[
reader state=0, writer state=1, end_time=20, read_start_time=12


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=11, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=11, readable_time_span=[11, 12[, writable_time_span=[12, 12[
reader state=-1, writer state=0, end_time=20, read_start_time=11


[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 11) --> [11, 12[

[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 11)

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [17, 18[ t=17

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 11)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=11, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=11, readable_time_span=[11, 12[, writable_time_span=[12, 12[
reader state=1, writer state=0, end_time=20, read_start_time=11


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=11)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 11) --> [11, 12[

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=17, end=0), 
[frame_shape=(320, 240), required_duration=6, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=6
last_write_time=17, readable_time_span=[12, 18[, writable_time_span=[18, 18[
reader state=0, writer state=0, end_time=20, read_start_time=12


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=17)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=11, readable_time_span=[11, 12[, writable_time_span=[12, 12[
reader state=-1, writer state=1, end_time=20, read_start_time=11


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 11)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=11, readable_time_span=[12, 12[, writable_time_span=[12, 13[
reader state=0, writer state=1, end_time=20, read_start_time=12


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 11)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=11, readable_time_span=[12, 12[, writable_time_span=[12, 13[
reader state=0, writer state=1, end_time=20, read_start_time=12


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [12, 13[ t=12

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=11, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=11, readable_time_span=[11, 12[, writable_time_span=[12, 12[
reader state=1, writer state=0, end_time=20, read_start_time=11


[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 12)....

[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 11)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [12, 13[ t=12

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 12) --> [12, 18[

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 11) --> [11, 12[

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 11)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=11, readable_time_span=[12, 12[, writable_time_span=[12, 13[
reader state=0, writer state=1, end_time=20, read_start_time=12


[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=11)

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=11)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 12)....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [12, 13[ t=12

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 12)....

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=6, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=6
last_write_time=17, readable_time_span=[12, 18[, writable_time_span=[18, 18[
reader state=-1, writer state=1, end_time=20, read_start_time=12


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 12)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=6, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=1, write_position=0, full=0
total_duration=6
last_write_time=17, readable_time_span=[13, 18[, writable_time_span=[18, 19[
reader state=0, writer state=1, end_time=20, read_start_time=13


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=12, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=12, readable_time_span=[12, 13[, writable_time_span=[13, 13[
reader state=1, writer state=0, end_time=20, read_start_time=12


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 12)

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [18, 19[ t=18

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 12) --> [12, 13[

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 12)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=12, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=12, readable_time_span=[12, 13[, writable_time_span=[13, 13[
reader state=1, writer state=0, end_time=20, read_start_time=12


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=12)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 12) --> [12, 13[

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=18, end=0), 
[frame_shape=(320, 240), required_duration=6, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=1, write_position=1, full=1
total_duration=6
last_write_time=18, readable_time_span=[13, 19[, writable_time_span=[19, 19[
reader state=0, writer state=0, end_time=20, read_start_time=13


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=18)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=12, readable_time_span=[12, 13[, writable_time_span=[13, 13[
reader state=-1, writer state=1, end_time=20, read_start_time=12


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 12)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=12, readable_time_span=[13, 13[, writable_time_span=[13, 14[
reader state=0, writer state=1, end_time=20, read_start_time=13


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 12)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=12, readable_time_span=[13, 13[, writable_time_span=[13, 14[
reader state=0, writer state=1, end_time=20, read_start_time=13


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [13, 14[ t=13

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 13)....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 12) --> [12, 13[

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=12, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=12, readable_time_span=[12, 13[, writable_time_span=[13, 13[
reader state=-1, writer state=0, end_time=20, read_start_time=12


[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 13) --> [13, 19[

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [13, 14[ t=13

[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 12)

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 12)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=12, readable_time_span=[13, 13[, writable_time_span=[13, 14[
reader state=0, writer state=-1, end_time=20, read_start_time=13


[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [13, 14[ t=13

[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=12)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 13)....

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=12)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 13)....

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=6, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=1, write_position=1, full=1
total_duration=6
last_write_time=18, readable_time_span=[13, 19[, writable_time_span=[19, 19[
reader state=-1, writer state=1, end_time=20, read_start_time=13


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 13)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=6, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=2, write_position=1, full=0
total_duration=6
last_write_time=18, readable_time_span=[14, 19[, writable_time_span=[19, 20[
reader state=0, writer state=1, end_time=20, read_start_time=14


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [19, 20[ t=19

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=13, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=13, readable_time_span=[13, 14[, writable_time_span=[14, 14[
reader state=1, writer state=0, end_time=20, read_start_time=13


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 13)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 13) --> [13, 14[

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 13)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=13, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=13, readable_time_span=[13, 14[, writable_time_span=[14, 14[
reader state=1, writer state=0, end_time=20, read_start_time=13


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=13)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 13) --> [13, 14[

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=19, end=1), 
[frame_shape=(320, 240), required_duration=6, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=2, write_position=2, full=1
total_duration=6
last_write_time=19, readable_time_span=[14, 20[, writable_time_span=[20, 20[
reader state=0, writer state=0, end_time=20, read_start_time=14


[src/graph/media_source_node.cc:14, thread_main_]
source:: ended

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=13, readable_time_span=[13, 14[, writable_time_span=[14, 14[
reader state=-1, writer state=1, end_time=20, read_start_time=13


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 13)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=13, readable_time_span=[14, 14[, writable_time_span=[14, 15[
reader state=0, writer state=1, end_time=20, read_start_time=14


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 13)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=13, readable_time_span=[14, 14[, writable_time_span=[14, 15[
reader state=0, writer state=1, end_time=20, read_start_time=14


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [14, 15[ t=14

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [14, 15[ t=14

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=13, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=13, readable_time_span=[13, 14[, writable_time_span=[14, 14[
reader state=1, writer state=0, end_time=20, read_start_time=13


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 13)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 14)....

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 13) --> [13, 14[

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 14) --> [14, 20[

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 13)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=13, readable_time_span=[14, 14[, writable_time_span=[14, 15[
reader state=0, writer state=1, end_time=20, read_start_time=14


[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=13)

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=13)

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [14, 15[ t=14

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 14)....

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 14)....

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=6, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=2, write_position=2, full=1
total_duration=6
last_write_time=19, readable_time_span=[14, 20[, writable_time_span=[20, 20[
reader state=-1, writer state=0, end_time=20, read_start_time=14


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 14)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=6, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=3, write_position=2, full=0
total_duration=6
last_write_time=19, readable_time_span=[15, 20[, writable_time_span=[20, 21[
reader state=0, writer state=0, end_time=20, read_start_time=15


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=14, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=14, readable_time_span=[14, 15[, writable_time_span=[15, 15[
reader state=1, writer state=0, end_time=20, read_start_time=14


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 14)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 14) --> [14, 15[

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 14)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=14, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=14, readable_time_span=[14, 15[, writable_time_span=[15, 15[
reader state=1, writer state=0, end_time=20, read_start_time=14


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=14)

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 14) --> [14, 15[

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=14, readable_time_span=[14, 15[, writable_time_span=[15, 15[
reader state=-1, writer state=1, end_time=20, read_start_time=14


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 14)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=14, readable_time_span=[15, 15[, writable_time_span=[15, 16[
reader state=0, writer state=1, end_time=20, read_start_time=15


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 14)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=14, readable_time_span=[15, 15[, writable_time_span=[15, 16[
reader state=0, writer state=1, end_time=20, read_start_time=15


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [15, 16[ t=15

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=14, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=14, readable_time_span=[14, 15[, writable_time_span=[15, 15[
reader state=1, writer state=0, end_time=20, read_start_time=14


[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 15)....

[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 14)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 15) --> [15, 20[

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [15, 16[ t=15

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 14) --> [14, 15[

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 14)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=14, readable_time_span=[15, 15[, writable_time_span=[15, 16[
reader state=0, writer state=1, end_time=20, read_start_time=15


[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=14)

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=14)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 15)....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [15, 16[ t=15

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 15)....

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=6, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=3, write_position=2, full=0
total_duration=6
last_write_time=19, readable_time_span=[15, 20[, writable_time_span=[20, 21[
reader state=-1, writer state=0, end_time=20, read_start_time=15


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 15)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=6, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=4, write_position=2, full=0
total_duration=6
last_write_time=19, readable_time_span=[16, 20[, writable_time_span=[20, 22[
reader state=0, writer state=0, end_time=20, read_start_time=16


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=15, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=15, readable_time_span=[15, 16[, writable_time_span=[16, 16[
reader state=1, writer state=0, end_time=20, read_start_time=15


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 15)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 15) --> [15, 16[

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 15)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=15, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=15, readable_time_span=[15, 16[, writable_time_span=[16, 16[
reader state=1, writer state=0, end_time=20, read_start_time=15


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=15)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 15) --> [15, 16[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=15, readable_time_span=[15, 16[, writable_time_span=[16, 16[
reader state=-1, writer state=1, end_time=20, read_start_time=15


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 15)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=15, readable_time_span=[16, 16[, writable_time_span=[16, 17[
reader state=0, writer state=1, end_time=20, read_start_time=16


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 15)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=15, readable_time_span=[16, 16[, writable_time_span=[16, 17[
reader state=0, writer state=1, end_time=20, read_start_time=16


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [16, 17[ t=16

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 15) --> [15, 16[

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 16)....

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 15)

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 16) --> [16, 20[

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=15, readable_time_span=[16, 16[, writable_time_span=[16, 17[
reader state=0, writer state=0, end_time=20, read_start_time=16


[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=15)

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [16, 17[ t=16

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=15, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=15, readable_time_span=[15, 16[, writable_time_span=[16, 16[
reader state=1, writer state=0, end_time=20, read_start_time=15


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 15)

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=15)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 16)....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [16, 17[ t=16

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 16)....

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=6, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=4, write_position=2, full=0
total_duration=6
last_write_time=19, readable_time_span=[16, 20[, writable_time_span=[20, 22[
reader state=-1, writer state=0, end_time=20, read_start_time=16


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 16)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=6, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=5, write_position=2, full=0
total_duration=6
last_write_time=19, readable_time_span=[17, 20[, writable_time_span=[20, 23[
reader state=0, writer state=0, end_time=20, read_start_time=17


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=16, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=16, readable_time_span=[16, 17[, writable_time_span=[17, 17[
reader state=1, writer state=0, end_time=20, read_start_time=16


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 16)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 16) --> [16, 17[

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 16)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=16, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=16, readable_time_span=[16, 17[, writable_time_span=[17, 17[
reader state=1, writer state=0, end_time=20, read_start_time=16


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=16)

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 16) --> [16, 17[

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=16, readable_time_span=[16, 17[, writable_time_span=[17, 17[
reader state=-1, writer state=1, end_time=20, read_start_time=16


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 16)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=16, readable_time_span=[17, 17[, writable_time_span=[17, 18[
reader state=0, writer state=1, end_time=20, read_start_time=17


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 16)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=16, readable_time_span=[17, 17[, writable_time_span=[17, 18[
reader state=0, writer state=1, end_time=20, read_start_time=17


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [17, 18[ t=17

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=16, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
cannot lock mutex for debug_print



[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 17)....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [17, 18[ t=17

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 16) --> [16, 17[

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 17) --> [17, 20[

[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 16)

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 16)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [17, 18[ t=17

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=16, readable_time_span=[17, 17[, writable_time_span=[17, 18[
reader state=0, writer state=-1, end_time=20, read_start_time=17


[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 17)....

[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=16)

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=16)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 17)....

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=6, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=5, write_position=2, full=0
total_duration=6
last_write_time=19, readable_time_span=[17, 20[, writable_time_span=[20, 23[
reader state=-1, writer state=0, end_time=20, read_start_time=17


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 17)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=6, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=2, full=0
total_duration=6
last_write_time=19, readable_time_span=[18, 20[, writable_time_span=[20, 24[
reader state=0, writer state=0, end_time=20, read_start_time=18


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=17, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=17, readable_time_span=[17, 18[, writable_time_span=[18, 18[
reader state=1, writer state=0, end_time=20, read_start_time=17


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 17)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 17) --> [17, 18[

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 17)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=17, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=17, readable_time_span=[17, 18[, writable_time_span=[18, 18[
reader state=1, writer state=0, end_time=20, read_start_time=17


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=17)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 17) --> [17, 18[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=17, readable_time_span=[17, 18[, writable_time_span=[18, 18[
reader state=-1, writer state=1, end_time=20, read_start_time=17


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 17)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=17, readable_time_span=[18, 18[, writable_time_span=[18, 19[
reader state=0, writer state=1, end_time=20, read_start_time=18


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 17)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=17, readable_time_span=[18, 18[, writable_time_span=[18, 19[
reader state=0, writer state=1, end_time=20, read_start_time=18


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [18, 19[ t=18

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=17, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
cannot lock mutex for debug_print



[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 18)....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [18, 19[ t=18

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 18) --> [18, 20[

[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 17)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 17) --> [17, 18[

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 17)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=17, readable_time_span=[18, 18[, writable_time_span=[18, 19[
reader state=0, writer state=1, end_time=20, read_start_time=18


[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=17)

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=17)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 18)....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [18, 19[ t=18

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 18)....

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=6, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=2, full=0
total_duration=6
last_write_time=19, readable_time_span=[18, 20[, writable_time_span=[20, 24[
reader state=-1, writer state=0, end_time=20, read_start_time=18


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 18)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=6, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=1, write_position=2, full=0
total_duration=6
last_write_time=19, readable_time_span=[19, 20[, writable_time_span=[20, 25[
reader state=0, writer state=0, end_time=20, read_start_time=19


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=18, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=18, readable_time_span=[18, 19[, writable_time_span=[19, 19[
reader state=1, writer state=0, end_time=20, read_start_time=18


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 18)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 18) --> [18, 19[

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 18)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=18, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=18, readable_time_span=[18, 19[, writable_time_span=[19, 19[
reader state=1, writer state=0, end_time=20, read_start_time=18


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=18)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 18) --> [18, 19[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=18, readable_time_span=[18, 19[, writable_time_span=[19, 19[
reader state=-1, writer state=1, end_time=20, read_start_time=18


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 18)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=18, readable_time_span=[19, 19[, writable_time_span=[19, 20[
reader state=0, writer state=1, end_time=20, read_start_time=19


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 18)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=18, readable_time_span=[19, 19[, writable_time_span=[19, 20[
reader state=0, writer state=1, end_time=20, read_start_time=19


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=18, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=18, readable_time_span=[18, 19[, writable_time_span=[19, 19[
reader state=1, writer state=0, end_time=20, read_start_time=18


[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [19, 20[ t=19

[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 18)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [19, 20[ t=19

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 19)....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 18) --> [18, 19[

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 19) --> [19, 20[

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 18)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=18, readable_time_span=[19, 19[, writable_time_span=[19, 20[
reader state=0, writer state=1, end_time=20, read_start_time=19


[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=18)

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=18)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 19)....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [19, 20[ t=19

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 19)....

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=6, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=1, write_position=2, full=0
total_duration=6
last_write_time=19, readable_time_span=[19, 20[, writable_time_span=[20, 25[
reader state=-1, writer state=0, end_time=20, read_start_time=19


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 19)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=1 - 
 output:=[frame_shape=(320, 240), required_duration=6, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=2, write_position=2, full=0
total_duration=6
last_write_time=19, readable_time_span=[20, 20[, writable_time_span=[20, 26[
reader state=0, writer state=0, end_time=20, read_start_time=20


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=19, end=1), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=19, readable_time_span=[19, 20[, writable_time_span=[20, 20[
reader state=1, writer state=0, end_time=20, read_start_time=19


[src/graph/media_node.cc:14, thread_main_]
node:: ended

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 19) --> [19, 20[

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 19)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=19, end=1), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=19, readable_time_span=[19, 20[, writable_time_span=[20, 20[
reader state=1, writer state=0, end_time=20, read_start_time=19


[src/graph/media_source_node.cc:14, thread_main_]
source:: ended

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 19) --> [19, 20[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=19, readable_time_span=[19, 20[, writable_time_span=[20, 20[
reader state=-1, writer state=0, end_time=20, read_start_time=19


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 19)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=1 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=19, readable_time_span=[20, 20[, writable_time_span=[20, 21[
reader state=0, writer state=0, end_time=20, read_start_time=20


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 19)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=1 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=19, readable_time_span=[20, 20[, writable_time_span=[20, 21[
reader state=0, writer state=0, end_time=20, read_start_time=20


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=19, end=1), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=19, readable_time_span=[19, 20[, writable_time_span=[20, 20[
reader state=1, writer state=0, end_time=20, read_start_time=19


[src/graph/media_node.cc:14, thread_main_]
node:: ended

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 19) --> [19, 20[

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 19)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=1 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=19, readable_time_span=[20, 20[, writable_time_span=[20, 21[
reader state=0, writer state=0, end_time=20, read_start_time=20


[src/graph/media_sink_node.cc:23, pull_frame_]
sink: reached end!

[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=19)

[src/graph/media_graph.cc:53, run]
graph::reached end!

[src/graph/media_graph.cc:17, ~media_graph]
media_graph stopping

[src/graph/media_graph.cc:19, ~media_graph]
media_graph no more

[src/graph/media_graph.cc:12, media_graph]
media_graph

[src/graph/media_source_node.cc:60, launch_]
source:: launch

[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=-1)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [0, 1[ t=0

[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = -1)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[src/graph/media_source_node.cc:60, launch_]
source:: launch

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [0, 1[ t=0

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 0)....

[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=-1)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [0, 1[ t=0

[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = -1)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [0, 1[ t=0

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 0)....

[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = -1)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [0, 1[ t=0

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 0)....

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=-1)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 0)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=0, end=0), 
[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=1, full=0
total_duration=4
last_write_time=0, readable_time_span=[0, 1[, writable_time_span=[1, 4[
reader state=3, writer state=0, end_time=20, read_start_time=0


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=0)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [1, 2[ t=1

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=0, end=0), 
[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=1, full=0
total_duration=5
last_write_time=0, readable_time_span=[0, 1[, writable_time_span=[1, 5[
reader state=2, writer state=0, end_time=20, read_start_time=0


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=0)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [1, 2[ t=1

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=1, end=0), 
[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=2, full=0
total_duration=4
last_write_time=1, readable_time_span=[0, 2[, writable_time_span=[2, 4[
reader state=3, writer state=0, end_time=20, read_start_time=0


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=1)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [2, 3[ t=2

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=1, end=0), 
[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
cannot lock mutex for debug_print



[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=1)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [2, 3[ t=2

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 0) --> [0, 2[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=2, full=0
total_duration=5
last_write_time=1, readable_time_span=[0, 2[, writable_time_span=[2, 5[
reader state=-1, writer state=-1, end_time=20, read_start_time=0


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 0)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=2, full=0
total_duration=5
last_write_time=1, readable_time_span=[0, 2[, writable_time_span=[2, 5[
reader state=0, writer state=-1, end_time=20, read_start_time=0


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=0, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=0, readable_time_span=[0, 1[, writable_time_span=[1, 1[
reader state=1, writer state=0, end_time=20, read_start_time=0


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 0)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 0) --> [0, 1[

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 0)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=2, end=0), 
[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=3, full=0
total_duration=5
last_write_time=2, readable_time_span=[0, 3[, writable_time_span=[3, 5[
reader state=0, writer state=0, end_time=20, read_start_time=0


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=2)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [3, 4[ t=3

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=2, end=0), 
[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
cannot lock mutex for debug_print



[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=2)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [3, 4[ t=3

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 0) --> [0, 3[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=3, full=0
total_duration=4
last_write_time=2, readable_time_span=[0, 3[, writable_time_span=[3, 4[
reader state=-1, writer state=-1, end_time=20, read_start_time=0


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 0)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=3, full=0
total_duration=4
last_write_time=2, readable_time_span=[0, 3[, writable_time_span=[3, 4[
reader state=0, writer state=-1, end_time=20, read_start_time=0


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=0, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=0, readable_time_span=[0, 1[, writable_time_span=[1, 1[
reader state=1, writer state=0, end_time=20, read_start_time=0


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 0)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 0) --> [0, 1[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=0, readable_time_span=[0, 1[, writable_time_span=[1, 1[
reader state=-1, writer state=1, end_time=20, read_start_time=0


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 0)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
cannot lock mutex for debug_print



[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 0)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=0, readable_time_span=[1, 1[, writable_time_span=[1, 2[
reader state=0, writer state=1, end_time=20, read_start_time=1


[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [1, 2[ t=1

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 1)....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [1, 2[ t=1

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 1) --> [0, 3[

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 1)....

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=0, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=0, readable_time_span=[0, 1[, writable_time_span=[1, 1[
reader state=-1, writer state=0, end_time=20, read_start_time=0


[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 0) --> [0, 1[

[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 0)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 0)

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [1, 2[ t=1

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 1)....

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=0, readable_time_span=[1, 1[, writable_time_span=[1, 2[
reader state=0, writer state=-1, end_time=20, read_start_time=1


[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=0)

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=0)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 1)....

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=3, full=0
total_duration=5
last_write_time=2, readable_time_span=[0, 3[, writable_time_span=[3, 5[
reader state=-1, writer state=-1, end_time=20, read_start_time=0


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 1)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=3, full=0
total_duration=5
last_write_time=2, readable_time_span=[0, 3[, writable_time_span=[3, 5[
reader state=0, writer state=-1, end_time=20, read_start_time=0


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=1, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=1, readable_time_span=[1, 2[, writable_time_span=[2, 2[
reader state=1, writer state=0, end_time=20, read_start_time=1


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 1)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 1) --> [1, 2[

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 1)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=3, end=0), 
[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=4, full=0
total_duration=5
last_write_time=3, readable_time_span=[0, 4[, writable_time_span=[4, 5[
reader state=0, writer state=0, end_time=20, read_start_time=0


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=3)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [4, 5[ t=4

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=3, end=0), 
[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=4
last_write_time=3, readable_time_span=[0, 4[, writable_time_span=[4, 4[
reader state=4, writer state=0, end_time=20, read_start_time=0


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=3)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 1) --> [0, 4[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=4
last_write_time=3, readable_time_span=[0, 4[, writable_time_span=[4, 4[
reader state=-1, writer state=1, end_time=20, read_start_time=0


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 1)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=1, write_position=0, full=0
total_duration=4
last_write_time=3, readable_time_span=[1, 4[, writable_time_span=[4, 5[
reader state=0, writer state=1, end_time=20, read_start_time=1


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=1, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=1, readable_time_span=[1, 2[, writable_time_span=[2, 2[
reader state=1, writer state=0, end_time=20, read_start_time=1


[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [4, 5[ t=4

[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 1)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 1) --> [1, 2[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=1, readable_time_span=[1, 2[, writable_time_span=[2, 2[
reader state=-1, writer state=1, end_time=20, read_start_time=1


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 1)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
cannot lock mutex for debug_print



[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 1)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=1, readable_time_span=[2, 2[, writable_time_span=[2, 3[
reader state=0, writer state=1, end_time=20, read_start_time=2


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [2, 3[ t=2

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 2)....

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=1, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
cannot lock mutex for debug_print



[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 1)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [2, 3[ t=2

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 2) --> [0, 4[

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 2)....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 1) --> [1, 2[

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 1)

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [2, 3[ t=2

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=1, readable_time_span=[2, 2[, writable_time_span=[2, 3[
reader state=0, writer state=-1, end_time=20, read_start_time=2


[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 2)....

[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=1)

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=1)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 2)....

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=4, full=0
total_duration=5
last_write_time=3, readable_time_span=[0, 4[, writable_time_span=[4, 5[
reader state=-1, writer state=-1, end_time=20, read_start_time=0


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 2)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=4, full=0
total_duration=5
last_write_time=3, readable_time_span=[0, 4[, writable_time_span=[4, 5[
reader state=0, writer state=-1, end_time=20, read_start_time=0


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=2, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=2, readable_time_span=[2, 3[, writable_time_span=[3, 3[
reader state=1, writer state=0, end_time=20, read_start_time=2


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 2)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 2) --> [2, 3[

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 2)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=4, end=0), 
[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=5
last_write_time=4, readable_time_span=[0, 5[, writable_time_span=[5, 5[
reader state=0, writer state=0, end_time=20, read_start_time=0


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=4)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=4, end=0), 
[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=1, write_position=1, full=1
total_duration=4
last_write_time=4, readable_time_span=[1, 5[, writable_time_span=[5, 5[
reader state=4, writer state=0, end_time=20, read_start_time=1


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=4)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 2) --> [1, 5[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=1, write_position=1, full=1
total_duration=4
last_write_time=4, readable_time_span=[1, 5[, writable_time_span=[5, 5[
reader state=-1, writer state=1, end_time=20, read_start_time=1


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 2)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=2, write_position=1, full=0
total_duration=4
last_write_time=4, readable_time_span=[2, 5[, writable_time_span=[5, 6[
reader state=0, writer state=1, end_time=20, read_start_time=2


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=2, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=2, readable_time_span=[2, 3[, writable_time_span=[3, 3[
reader state=1, writer state=0, end_time=20, read_start_time=2


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 2)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [5, 6[ t=5

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 2) --> [2, 3[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=2, readable_time_span=[2, 3[, writable_time_span=[3, 3[
reader state=-1, writer state=1, end_time=20, read_start_time=2


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 2)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
cannot lock mutex for debug_print



[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 2)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=2, readable_time_span=[3, 3[, writable_time_span=[3, 4[
reader state=0, writer state=1, end_time=20, read_start_time=3


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [3, 4[ t=3

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 3)....

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=2, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
cannot lock mutex for debug_print



[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 2)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 3) --> [0, 5[

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 2) --> [2, 3[

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [3, 4[ t=3

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 3)....

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 2)

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [3, 4[ t=3

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=2, readable_time_span=[3, 3[, writable_time_span=[3, 4[
reader state=0, writer state=-1, end_time=20, read_start_time=3


[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 3)....

[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=2)

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=2)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 3)....

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=5
last_write_time=4, readable_time_span=[0, 5[, writable_time_span=[5, 5[
reader state=-1, writer state=1, end_time=20, read_start_time=0


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 3)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=1, write_position=0, full=0
total_duration=5
last_write_time=4, readable_time_span=[1, 5[, writable_time_span=[5, 6[
reader state=0, writer state=1, end_time=20, read_start_time=1


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [5, 6[ t=5

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=3, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=3, readable_time_span=[3, 4[, writable_time_span=[4, 4[
reader state=1, writer state=0, end_time=20, read_start_time=3


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 3)

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 3) --> [3, 4[

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 3)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=5, end=0), 
[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=2, write_position=2, full=1
total_duration=4
last_write_time=5, readable_time_span=[2, 6[, writable_time_span=[6, 6[
reader state=4, writer state=0, end_time=20, read_start_time=2


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=5)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 3) --> [2, 6[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=2, write_position=2, full=1
total_duration=4
last_write_time=5, readable_time_span=[2, 6[, writable_time_span=[6, 6[
reader state=-1, writer state=1, end_time=20, read_start_time=2


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 3)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=3, write_position=2, full=0
total_duration=4
last_write_time=5, readable_time_span=[3, 6[, writable_time_span=[6, 7[
reader state=0, writer state=1, end_time=20, read_start_time=3


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=3, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=3, readable_time_span=[3, 4[, writable_time_span=[4, 4[
reader state=1, writer state=0, end_time=20, read_start_time=3


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 3)

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [6, 7[ t=6

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 3) --> [3, 4[

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=5, end=0), 
[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=1, write_position=1, full=1
total_duration=5
last_write_time=5, readable_time_span=[1, 6[, writable_time_span=[6, 6[
reader state=0, writer state=0, end_time=20, read_start_time=1


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=5)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=3, readable_time_span=[3, 4[, writable_time_span=[4, 4[
reader state=-1, writer state=1, end_time=20, read_start_time=3


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 3)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
cannot lock mutex for debug_print



[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 3)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=3, readable_time_span=[4, 4[, writable_time_span=[4, 5[
reader state=0, writer state=1, end_time=20, read_start_time=4


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [4, 5[ t=4

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 4)....

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=3, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
cannot lock mutex for debug_print



[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 3)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [4, 5[ t=4

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 4) --> [1, 6[

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 4)....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 3) --> [3, 4[

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 3)

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [4, 5[ t=4

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=3, readable_time_span=[4, 4[, writable_time_span=[4, 5[
reader state=0, writer state=-1, end_time=20, read_start_time=4


[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 4)....

[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=3)

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=3)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 4)....

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=1, write_position=1, full=1
total_duration=5
last_write_time=5, readable_time_span=[1, 6[, writable_time_span=[6, 6[
reader state=-1, writer state=1, end_time=20, read_start_time=1


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 4)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=2, write_position=1, full=0
total_duration=5
last_write_time=5, readable_time_span=[2, 6[, writable_time_span=[6, 7[
reader state=0, writer state=-1, end_time=20, read_start_time=2


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [6, 7[ t=6

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=4, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=4, readable_time_span=[4, 5[, writable_time_span=[5, 5[
reader state=1, writer state=0, end_time=20, read_start_time=4


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 4)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 4) --> [4, 5[

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 4)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=6, end=0), 
[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=3, write_position=3, full=1
total_duration=4
last_write_time=6, readable_time_span=[3, 7[, writable_time_span=[7, 7[
reader state=4, writer state=0, end_time=20, read_start_time=3


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=6)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 4) --> [3, 7[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=3, write_position=3, full=1
total_duration=4
last_write_time=6, readable_time_span=[3, 7[, writable_time_span=[7, 7[
reader state=-1, writer state=1, end_time=20, read_start_time=3


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 4)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=3, full=0
total_duration=4
last_write_time=6, readable_time_span=[4, 7[, writable_time_span=[7, 8[
reader state=0, writer state=1, end_time=20, read_start_time=4


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=4, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=4, readable_time_span=[4, 5[, writable_time_span=[5, 5[
reader state=1, writer state=0, end_time=20, read_start_time=4


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 4)

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [7, 8[ t=7

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 4) --> [4, 5[

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=6, end=0), 
[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=2, write_position=2, full=1
total_duration=5
last_write_time=6, readable_time_span=[2, 7[, writable_time_span=[7, 7[
reader state=0, writer state=0, end_time=20, read_start_time=2


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=6)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=4, readable_time_span=[4, 5[, writable_time_span=[5, 5[
reader state=-1, writer state=1, end_time=20, read_start_time=4


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 4)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
cannot lock mutex for debug_print



[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 4)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=4, readable_time_span=[5, 5[, writable_time_span=[5, 6[
reader state=0, writer state=1, end_time=20, read_start_time=5


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [5, 6[ t=5

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 5)....

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=4, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=4, readable_time_span=[4, 5[, writable_time_span=[5, 5[
reader state=-1, writer state=0, end_time=20, read_start_time=4


[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 5) --> [2, 7[

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 4) --> [4, 5[

[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 4)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [5, 6[ t=5

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [5, 6[ t=5

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 4)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 5)....

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 5)....

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=4, readable_time_span=[5, 5[, writable_time_span=[5, 6[
reader state=0, writer state=-1, end_time=20, read_start_time=5


[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=4)

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=4)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 5)....

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=2, write_position=2, full=1
total_duration=5
last_write_time=6, readable_time_span=[2, 7[, writable_time_span=[7, 7[
reader state=-1, writer state=1, end_time=20, read_start_time=2


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 5)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=3, write_position=2, full=0
total_duration=5
last_write_time=6, readable_time_span=[3, 7[, writable_time_span=[7, 8[
reader state=0, writer state=1, end_time=20, read_start_time=3


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=5, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=5, readable_time_span=[5, 6[, writable_time_span=[6, 6[
reader state=1, writer state=0, end_time=20, read_start_time=5


[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [7, 8[ t=7

[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 5)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 5) --> [5, 6[

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 5)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=7, end=0), 
[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=4
last_write_time=7, readable_time_span=[4, 8[, writable_time_span=[8, 8[
reader state=4, writer state=0, end_time=20, read_start_time=4


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=7)

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 5) --> [4, 8[

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=4
last_write_time=7, readable_time_span=[4, 8[, writable_time_span=[8, 8[
reader state=-1, writer state=1, end_time=20, read_start_time=4


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 5)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=1, write_position=0, full=0
total_duration=4
last_write_time=7, readable_time_span=[5, 8[, writable_time_span=[8, 9[
reader state=0, writer state=1, end_time=20, read_start_time=5


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=5, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=5, readable_time_span=[5, 6[, writable_time_span=[6, 6[
reader state=1, writer state=0, end_time=20, read_start_time=5


[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [8, 9[ t=8

[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 5)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 5) --> [5, 6[

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=7, end=0), 
[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=3, write_position=3, full=1
total_duration=5
last_write_time=7, readable_time_span=[3, 8[, writable_time_span=[8, 8[
reader state=0, writer state=0, end_time=20, read_start_time=3


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=7)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=5, readable_time_span=[5, 6[, writable_time_span=[6, 6[
reader state=-1, writer state=1, end_time=20, read_start_time=5


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 5)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
cannot lock mutex for debug_print



[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 5)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=5, readable_time_span=[6, 6[, writable_time_span=[6, 7[
reader state=0, writer state=1, end_time=20, read_start_time=6


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [6, 7[ t=6

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [6, 7[ t=6

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 6)....

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=5, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=5, readable_time_span=[5, 6[, writable_time_span=[6, 6[
reader state=-1, writer state=0, end_time=20, read_start_time=5


[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 5) --> [5, 6[

[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 5)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 6)....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [6, 7[ t=6

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 5)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 6)....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 6) --> [3, 8[

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=5, readable_time_span=[6, 6[, writable_time_span=[6, 7[
reader state=0, writer state=-1, end_time=20, read_start_time=6


[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=5)

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=5)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 6)....

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=3, write_position=3, full=1
total_duration=5
last_write_time=7, readable_time_span=[3, 8[, writable_time_span=[8, 8[
reader state=-1, writer state=1, end_time=20, read_start_time=3


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 6)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=4, write_position=3, full=0
total_duration=5
last_write_time=7, readable_time_span=[4, 8[, writable_time_span=[8, 9[
reader state=0, writer state=1, end_time=20, read_start_time=4


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [8, 9[ t=8

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=6, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=6, readable_time_span=[6, 7[, writable_time_span=[7, 7[
reader state=1, writer state=0, end_time=20, read_start_time=6


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 6)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 6) --> [6, 7[

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 6)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=8, end=0), 
[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=1, write_position=1, full=1
total_duration=4
last_write_time=8, readable_time_span=[5, 9[, writable_time_span=[9, 9[
reader state=-1, writer state=0, end_time=20, read_start_time=5


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=8)

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 6) --> [5, 9[

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=1, write_position=1, full=1
total_duration=4
last_write_time=8, readable_time_span=[5, 9[, writable_time_span=[9, 9[
reader state=-1, writer state=1, end_time=20, read_start_time=5


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 6)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=2, write_position=1, full=0
total_duration=4
last_write_time=8, readable_time_span=[6, 9[, writable_time_span=[9, 10[
reader state=0, writer state=1, end_time=20, read_start_time=6


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=6, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=6, readable_time_span=[6, 7[, writable_time_span=[7, 7[
reader state=1, writer state=0, end_time=20, read_start_time=6


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 6)

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [9, 10[ t=9

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 6) --> [6, 7[

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=8, end=0), 
[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=4, write_position=4, full=1
total_duration=5
last_write_time=8, readable_time_span=[4, 9[, writable_time_span=[9, 9[
reader state=0, writer state=0, end_time=20, read_start_time=4


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=8)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=6, readable_time_span=[6, 7[, writable_time_span=[7, 7[
reader state=-1, writer state=1, end_time=20, read_start_time=6


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 6)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
cannot lock mutex for debug_print



[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 6)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=6, readable_time_span=[7, 7[, writable_time_span=[7, 8[
reader state=0, writer state=1, end_time=20, read_start_time=7


[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [7, 8[ t=7

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [7, 8[ t=7

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 7)....

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 7)....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 7) --> [4, 9[

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=6, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=6, readable_time_span=[6, 7[, writable_time_span=[7, 7[
reader state=-1, writer state=0, end_time=20, read_start_time=6


[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 6) --> [6, 7[

[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 6)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 6)

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [7, 8[ t=7

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=6, readable_time_span=[7, 7[, writable_time_span=[7, 8[
reader state=0, writer state=-1, end_time=20, read_start_time=7


[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 7)....

[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=6)

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=6)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 7)....

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=4, write_position=4, full=1
total_duration=5
last_write_time=8, readable_time_span=[4, 9[, writable_time_span=[9, 9[
reader state=-1, writer state=1, end_time=20, read_start_time=4


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 7)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=4, full=0
total_duration=5
last_write_time=8, readable_time_span=[5, 9[, writable_time_span=[9, 10[
reader state=0, writer state=1, end_time=20, read_start_time=5


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [9, 10[ t=9

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=7, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=7, readable_time_span=[7, 8[, writable_time_span=[8, 8[
reader state=1, writer state=0, end_time=20, read_start_time=7


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 7)

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 7) --> [7, 8[

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 7)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=9, end=0), 
[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=2, write_position=2, full=1
total_duration=4
last_write_time=9, readable_time_span=[6, 10[, writable_time_span=[10, 10[
reader state=4, writer state=0, end_time=20, read_start_time=6


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=9)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 7) --> [6, 10[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=2, write_position=2, full=1
total_duration=4
last_write_time=9, readable_time_span=[6, 10[, writable_time_span=[10, 10[
reader state=-1, writer state=1, end_time=20, read_start_time=6


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 7)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=3, write_position=2, full=0
total_duration=4
last_write_time=9, readable_time_span=[7, 10[, writable_time_span=[10, 11[
reader state=0, writer state=1, end_time=20, read_start_time=7


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=7, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=7, readable_time_span=[7, 8[, writable_time_span=[8, 8[
reader state=1, writer state=0, end_time=20, read_start_time=7


[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [10, 11[ t=10

[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 7)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 7) --> [7, 8[

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=9, end=0), 
[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=5
last_write_time=9, readable_time_span=[5, 10[, writable_time_span=[10, 10[
reader state=0, writer state=0, end_time=20, read_start_time=5


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=9)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=7, readable_time_span=[7, 8[, writable_time_span=[8, 8[
reader state=-1, writer state=1, end_time=20, read_start_time=7


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 7)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
cannot lock mutex for debug_print



[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [8, 9[ t=8

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 7)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 8)....

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=7, readable_time_span=[8, 8[, writable_time_span=[8, 9[
reader state=0, writer state=1, end_time=20, read_start_time=8


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 8) --> [5, 10[

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=7, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=7, readable_time_span=[7, 8[, writable_time_span=[8, 8[
reader state=-1, writer state=0, end_time=20, read_start_time=7


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 7)

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 7) --> [7, 8[

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [8, 9[ t=8

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 7)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 8)....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [8, 9[ t=8

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=7, readable_time_span=[8, 8[, writable_time_span=[8, 9[
reader state=0, writer state=-1, end_time=20, read_start_time=8


[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 8)....

[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=7)

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=7)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 8)....

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=5
last_write_time=9, readable_time_span=[5, 10[, writable_time_span=[10, 10[
reader state=-1, writer state=1, end_time=20, read_start_time=5


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 8)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=1, write_position=0, full=0
total_duration=5
last_write_time=9, readable_time_span=[6, 10[, writable_time_span=[10, 11[
reader state=0, writer state=1, end_time=20, read_start_time=6


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [10, 11[ t=10

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=8, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=8, readable_time_span=[8, 9[, writable_time_span=[9, 9[
reader state=1, writer state=0, end_time=20, read_start_time=8


[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 8) --> [8, 9[

[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 8)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 8)....

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=10, end=0), 
[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=3, write_position=3, full=1
total_duration=4
last_write_time=10, readable_time_span=[7, 11[, writable_time_span=[11, 11[
reader state=4, writer state=0, end_time=20, read_start_time=7


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=10)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 8) --> [7, 11[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=3, write_position=3, full=1
total_duration=4
last_write_time=10, readable_time_span=[7, 11[, writable_time_span=[11, 11[
reader state=-1, writer state=1, end_time=20, read_start_time=7


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 8)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=3, full=0
total_duration=4
last_write_time=10, readable_time_span=[8, 11[, writable_time_span=[11, 12[
reader state=0, writer state=1, end_time=20, read_start_time=8


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=8, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=8, readable_time_span=[8, 9[, writable_time_span=[9, 9[
reader state=1, writer state=0, end_time=20, read_start_time=8


[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [11, 12[ t=11

[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 8)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 8) --> [8, 9[

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=10, end=0), 
[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=1, write_position=1, full=1
total_duration=5
last_write_time=10, readable_time_span=[6, 11[, writable_time_span=[11, 11[
reader state=0, writer state=0, end_time=20, read_start_time=6


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=10)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=8, readable_time_span=[8, 9[, writable_time_span=[9, 9[
reader state=-1, writer state=1, end_time=20, read_start_time=8


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 8)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=8, readable_time_span=[9, 9[, writable_time_span=[9, 10[
reader state=0, writer state=-1, end_time=20, read_start_time=9


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 8)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=8, readable_time_span=[9, 9[, writable_time_span=[9, 10[
reader state=0, writer state=1, end_time=20, read_start_time=9


[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [9, 10[ t=9

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 9)....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [9, 10[ t=9

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 9)....

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=8, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=8, readable_time_span=[8, 9[, writable_time_span=[9, 9[
reader state=-1, writer state=0, end_time=20, read_start_time=8


[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 9) --> [6, 11[

[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 8)

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 8) --> [8, 9[

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 8)

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [9, 10[ t=9

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 9)....

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=8, readable_time_span=[9, 9[, writable_time_span=[9, 10[
reader state=0, writer state=-1, end_time=20, read_start_time=9


[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=8)

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=8)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 9)....

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=1, write_position=1, full=1
total_duration=5
last_write_time=10, readable_time_span=[6, 11[, writable_time_span=[11, 11[
reader state=-1, writer state=1, end_time=20, read_start_time=6


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 9)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=2, write_position=1, full=0
total_duration=5
last_write_time=10, readable_time_span=[7, 11[, writable_time_span=[11, 12[
reader state=0, writer state=1, end_time=20, read_start_time=7


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [11, 12[ t=11

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=9, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=9, readable_time_span=[9, 10[, writable_time_span=[10, 10[
reader state=1, writer state=0, end_time=20, read_start_time=9


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 9)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 9) --> [9, 10[

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 9)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=11, end=0), 
[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=4
last_write_time=11, readable_time_span=[8, 12[, writable_time_span=[12, 12[
reader state=4, writer state=0, end_time=20, read_start_time=8


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=11)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 9) --> [8, 12[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=4
last_write_time=11, readable_time_span=[8, 12[, writable_time_span=[12, 12[
reader state=-1, writer state=1, end_time=20, read_start_time=8


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 9)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=1, write_position=0, full=0
total_duration=4
last_write_time=11, readable_time_span=[9, 12[, writable_time_span=[12, 13[
reader state=0, writer state=1, end_time=20, read_start_time=9


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=9, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=9, readable_time_span=[9, 10[, writable_time_span=[10, 10[
reader state=1, writer state=0, end_time=20, read_start_time=9


[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [12, 13[ t=12

[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 9)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 9) --> [9, 10[

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=11, end=0), 
[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=2, write_position=2, full=1
total_duration=5
last_write_time=11, readable_time_span=[7, 12[, writable_time_span=[12, 12[
reader state=0, writer state=0, end_time=20, read_start_time=7


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=11)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=9, readable_time_span=[9, 10[, writable_time_span=[10, 10[
reader state=-1, writer state=1, end_time=20, read_start_time=9


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 9)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
cannot lock mutex for debug_print



[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 9)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=9, readable_time_span=[10, 10[, writable_time_span=[10, 11[
reader state=0, writer state=1, end_time=20, read_start_time=10


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [10, 11[ t=10

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 10)....

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=9, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
cannot lock mutex for debug_print



[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [10, 11[ t=10

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 10) --> [7, 12[

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 9) --> [9, 10[

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 10)....

[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 9)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 9)

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [10, 11[ t=10

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=9, readable_time_span=[10, 10[, writable_time_span=[10, 11[
reader state=0, writer state=-1, end_time=20, read_start_time=10


[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 10)....

[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=9)

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=9)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 10)....

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=2, write_position=2, full=1
total_duration=5
last_write_time=11, readable_time_span=[7, 12[, writable_time_span=[12, 12[
reader state=-1, writer state=1, end_time=20, read_start_time=7


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 10)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=3, write_position=2, full=0
total_duration=5
last_write_time=11, readable_time_span=[8, 12[, writable_time_span=[12, 13[
reader state=0, writer state=1, end_time=20, read_start_time=8


[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [12, 13[ t=12

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=10, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=10, readable_time_span=[10, 11[, writable_time_span=[11, 11[
reader state=1, writer state=0, end_time=20, read_start_time=10


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 10)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 10) --> [10, 11[

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 10)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=12, end=0), 
[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=1, write_position=1, full=1
total_duration=4
last_write_time=12, readable_time_span=[9, 13[, writable_time_span=[13, 13[
reader state=4, writer state=0, end_time=20, read_start_time=9


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=12)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 10) --> [9, 13[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=1, write_position=1, full=1
total_duration=4
last_write_time=12, readable_time_span=[9, 13[, writable_time_span=[13, 13[
reader state=-1, writer state=1, end_time=20, read_start_time=9


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 10)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=2, write_position=1, full=0
total_duration=4
last_write_time=12, readable_time_span=[10, 13[, writable_time_span=[13, 14[
reader state=0, writer state=1, end_time=20, read_start_time=10


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=10, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=10, readable_time_span=[10, 11[, writable_time_span=[11, 11[
reader state=1, writer state=0, end_time=20, read_start_time=10


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 10)

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [13, 14[ t=13

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 10) --> [10, 11[

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=12, end=0), 
[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=3, write_position=3, full=1
total_duration=5
last_write_time=12, readable_time_span=[8, 13[, writable_time_span=[13, 13[
reader state=0, writer state=0, end_time=20, read_start_time=8


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=12)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=10, readable_time_span=[10, 11[, writable_time_span=[11, 11[
reader state=-1, writer state=1, end_time=20, read_start_time=10


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 10)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
cannot lock mutex for debug_print



[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 10)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=10, readable_time_span=[11, 11[, writable_time_span=[11, 12[
reader state=0, writer state=1, end_time=20, read_start_time=11


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [11, 12[ t=11

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 11)....

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=10, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
cannot lock mutex for debug_print



[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [11, 12[ t=11

[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 10)

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 11) --> [8, 13[

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 11)....

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 10) --> [10, 11[

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 10)

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [11, 12[ t=11

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 11)....

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=10, readable_time_span=[11, 11[, writable_time_span=[11, 12[
reader state=0, writer state=-1, end_time=20, read_start_time=11


[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=10)

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=10)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 11)....

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=3, write_position=3, full=1
total_duration=5
last_write_time=12, readable_time_span=[8, 13[, writable_time_span=[13, 13[
reader state=-1, writer state=1, end_time=20, read_start_time=8


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 11)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=4, write_position=3, full=0
total_duration=5
last_write_time=12, readable_time_span=[9, 13[, writable_time_span=[13, 14[
reader state=0, writer state=1, end_time=20, read_start_time=9


[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [13, 14[ t=13

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=11, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=11, readable_time_span=[11, 12[, writable_time_span=[12, 12[
reader state=1, writer state=0, end_time=20, read_start_time=11


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 11)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 11) --> [11, 12[

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 11)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=13, end=0), 
[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
cannot lock mutex for debug_print



[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=13)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 11) --> [10, 14[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=2, write_position=2, full=1
total_duration=4
last_write_time=13, readable_time_span=[10, 14[, writable_time_span=[14, 14[
reader state=-1, writer state=1, end_time=20, read_start_time=10


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 11)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=3, write_position=2, full=0
total_duration=4
last_write_time=13, readable_time_span=[11, 14[, writable_time_span=[14, 15[
reader state=0, writer state=1, end_time=20, read_start_time=11


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=11, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=11, readable_time_span=[11, 12[, writable_time_span=[12, 12[
reader state=1, writer state=0, end_time=20, read_start_time=11


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 11)

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [14, 15[ t=14

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 11) --> [11, 12[

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=13, end=0), 
[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=4, write_position=4, full=1
total_duration=5
last_write_time=13, readable_time_span=[9, 14[, writable_time_span=[14, 14[
reader state=0, writer state=0, end_time=20, read_start_time=9


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=13)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=11, readable_time_span=[11, 12[, writable_time_span=[12, 12[
reader state=-1, writer state=1, end_time=20, read_start_time=11


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 11)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
cannot lock mutex for debug_print



[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 11)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=11, readable_time_span=[12, 12[, writable_time_span=[12, 13[
reader state=0, writer state=1, end_time=20, read_start_time=12


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [12, 13[ t=12

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 12)....

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=11, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
cannot lock mutex for debug_print



[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [12, 13[ t=12

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 12) --> [9, 14[

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 11) --> [11, 12[

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 12)....

[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 11)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 11)

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [12, 13[ t=12

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=11, readable_time_span=[12, 12[, writable_time_span=[12, 13[
reader state=0, writer state=-1, end_time=20, read_start_time=12


[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 12)....

[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=11)

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=11)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 12)....

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=4, write_position=4, full=1
total_duration=5
last_write_time=13, readable_time_span=[9, 14[, writable_time_span=[14, 14[
reader state=-1, writer state=1, end_time=20, read_start_time=9


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 12)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=4, full=0
total_duration=5
last_write_time=13, readable_time_span=[10, 14[, writable_time_span=[14, 15[
reader state=0, writer state=1, end_time=20, read_start_time=10


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [14, 15[ t=14

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=12, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=12, readable_time_span=[12, 13[, writable_time_span=[13, 13[
reader state=1, writer state=0, end_time=20, read_start_time=12


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 12)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 12) --> [12, 13[

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 12)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=14, end=0), 
[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=3, write_position=3, full=1
total_duration=4
last_write_time=14, readable_time_span=[11, 15[, writable_time_span=[15, 15[
reader state=4, writer state=0, end_time=20, read_start_time=11


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=14)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 12) --> [11, 15[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=3, write_position=3, full=1
total_duration=4
last_write_time=14, readable_time_span=[11, 15[, writable_time_span=[15, 15[
reader state=-1, writer state=1, end_time=20, read_start_time=11


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 12)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
cannot lock mutex for debug_print



[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [15, 16[ t=15

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=12, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=12, readable_time_span=[12, 13[, writable_time_span=[13, 13[
reader state=1, writer state=0, end_time=20, read_start_time=12


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 12)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 12) --> [12, 13[

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=14, end=0), 
[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=5
last_write_time=14, readable_time_span=[10, 15[, writable_time_span=[15, 15[
reader state=0, writer state=0, end_time=20, read_start_time=10


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=14)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=12, readable_time_span=[12, 13[, writable_time_span=[13, 13[
reader state=-1, writer state=1, end_time=20, read_start_time=12


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 12)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
cannot lock mutex for debug_print



[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 12)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=12, readable_time_span=[13, 13[, writable_time_span=[13, 14[
reader state=0, writer state=1, end_time=20, read_start_time=13


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [13, 14[ t=13

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 13)....

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=12, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
cannot lock mutex for debug_print



[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [13, 14[ t=13

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 13) --> [10, 15[

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 12) --> [12, 13[

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 13)....

[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 12)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 12)

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [13, 14[ t=13

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=12, readable_time_span=[13, 13[, writable_time_span=[13, 14[
reader state=0, writer state=-1, end_time=20, read_start_time=13


[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 13)....

[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=12)

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=12)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 13)....

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=5
last_write_time=14, readable_time_span=[10, 15[, writable_time_span=[15, 15[
reader state=-1, writer state=1, end_time=20, read_start_time=10


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 13)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=1, write_position=0, full=0
total_duration=5
last_write_time=14, readable_time_span=[11, 15[, writable_time_span=[15, 16[
reader state=0, writer state=1, end_time=20, read_start_time=11


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [15, 16[ t=15

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=13, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=13, readable_time_span=[13, 14[, writable_time_span=[14, 14[
reader state=1, writer state=0, end_time=20, read_start_time=13


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 13)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 13) --> [13, 14[

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 13)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=15, end=0), 
[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=4
last_write_time=15, readable_time_span=[12, 16[, writable_time_span=[16, 16[
reader state=4, writer state=0, end_time=20, read_start_time=12


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=15)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 13) --> [12, 16[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=4
last_write_time=15, readable_time_span=[12, 16[, writable_time_span=[16, 16[
reader state=-1, writer state=1, end_time=20, read_start_time=12


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 13)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=1, write_position=0, full=0
total_duration=4
last_write_time=15, readable_time_span=[13, 16[, writable_time_span=[16, 17[
reader state=0, writer state=1, end_time=20, read_start_time=13


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=13, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=13, readable_time_span=[13, 14[, writable_time_span=[14, 14[
reader state=1, writer state=0, end_time=20, read_start_time=13


[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [16, 17[ t=16

[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 13)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 13) --> [13, 14[

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=15, end=0), 
[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=1, write_position=1, full=1
total_duration=5
last_write_time=15, readable_time_span=[11, 16[, writable_time_span=[16, 16[
reader state=0, writer state=0, end_time=20, read_start_time=11


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=15)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=13, readable_time_span=[13, 14[, writable_time_span=[14, 14[
reader state=-1, writer state=1, end_time=20, read_start_time=13


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 13)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
cannot lock mutex for debug_print



[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 13)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=13, readable_time_span=[14, 14[, writable_time_span=[14, 15[
reader state=0, writer state=1, end_time=20, read_start_time=14


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [14, 15[ t=14

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 14)....

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=13, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
cannot lock mutex for debug_print



[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [14, 15[ t=14

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 14) --> [11, 16[

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 13) --> [13, 14[

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 14)....

[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 13)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 13)

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [14, 15[ t=14

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=13, readable_time_span=[14, 14[, writable_time_span=[14, 15[
reader state=0, writer state=-1, end_time=20, read_start_time=14


[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 14)....

[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=13)

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=13)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 14)....

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=1, write_position=1, full=1
total_duration=5
last_write_time=15, readable_time_span=[11, 16[, writable_time_span=[16, 16[
reader state=-1, writer state=1, end_time=20, read_start_time=11


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 14)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=2, write_position=1, full=0
total_duration=5
last_write_time=15, readable_time_span=[12, 16[, writable_time_span=[16, 17[
reader state=0, writer state=-1, end_time=20, read_start_time=12


[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [16, 17[ t=16

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=14, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=14, readable_time_span=[14, 15[, writable_time_span=[15, 15[
reader state=1, writer state=0, end_time=20, read_start_time=14


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 14)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 14) --> [14, 15[

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 14)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=16, end=0), 
[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=1, write_position=1, full=1
total_duration=4
last_write_time=16, readable_time_span=[13, 17[, writable_time_span=[17, 17[
reader state=4, writer state=0, end_time=20, read_start_time=13


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=16)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 14) --> [13, 17[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=1, write_position=1, full=1
total_duration=4
last_write_time=16, readable_time_span=[13, 17[, writable_time_span=[17, 17[
reader state=-1, writer state=1, end_time=20, read_start_time=13


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 14)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=2, write_position=1, full=0
total_duration=4
last_write_time=16, readable_time_span=[14, 17[, writable_time_span=[17, 18[
reader state=0, writer state=1, end_time=20, read_start_time=14


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=14, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=14, readable_time_span=[14, 15[, writable_time_span=[15, 15[
reader state=1, writer state=0, end_time=20, read_start_time=14


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 14)

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [17, 18[ t=17

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 14) --> [14, 15[

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=16, end=0), 
[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=2, write_position=2, full=1
total_duration=5
last_write_time=16, readable_time_span=[12, 17[, writable_time_span=[17, 17[
reader state=0, writer state=0, end_time=20, read_start_time=12


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=16)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=14, readable_time_span=[14, 15[, writable_time_span=[15, 15[
reader state=-1, writer state=1, end_time=20, read_start_time=14


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 14)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
cannot lock mutex for debug_print



[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 14)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=14, readable_time_span=[15, 15[, writable_time_span=[15, 16[
reader state=0, writer state=1, end_time=20, read_start_time=15


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [15, 16[ t=15

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 15)....

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=14, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
cannot lock mutex for debug_print



[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [15, 16[ t=15

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 15) --> [12, 17[

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 14) --> [14, 15[

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 15)....

[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 14)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 14)

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [15, 16[ t=15

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=14, readable_time_span=[15, 15[, writable_time_span=[15, 16[
reader state=0, writer state=-1, end_time=20, read_start_time=15


[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 15)....

[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=14)

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=14)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 15)....

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=2, write_position=2, full=1
total_duration=5
last_write_time=16, readable_time_span=[12, 17[, writable_time_span=[17, 17[
reader state=-1, writer state=1, end_time=20, read_start_time=12


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 15)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=3, write_position=2, full=0
total_duration=5
last_write_time=16, readable_time_span=[13, 17[, writable_time_span=[17, 18[
reader state=0, writer state=1, end_time=20, read_start_time=13


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [17, 18[ t=17

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=15, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=15, readable_time_span=[15, 16[, writable_time_span=[16, 16[
reader state=1, writer state=0, end_time=20, read_start_time=15


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 15)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 15) --> [15, 16[

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 15)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=17, end=0), 
[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=2, write_position=2, full=1
total_duration=4
last_write_time=17, readable_time_span=[14, 18[, writable_time_span=[18, 18[
reader state=4, writer state=0, end_time=20, read_start_time=14


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=17)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 15) --> [14, 18[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=2, write_position=2, full=1
total_duration=4
last_write_time=17, readable_time_span=[14, 18[, writable_time_span=[18, 18[
reader state=-1, writer state=1, end_time=20, read_start_time=14


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 15)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=3, write_position=2, full=0
total_duration=4
last_write_time=17, readable_time_span=[15, 18[, writable_time_span=[18, 19[
reader state=0, writer state=1, end_time=20, read_start_time=15


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [18, 19[ t=18

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=15, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=15, readable_time_span=[15, 16[, writable_time_span=[16, 16[
reader state=1, writer state=0, end_time=20, read_start_time=15


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 15)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 15) --> [15, 16[

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=17, end=0), 
[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=3, write_position=3, full=1
total_duration=5
last_write_time=17, readable_time_span=[13, 18[, writable_time_span=[18, 18[
reader state=0, writer state=0, end_time=20, read_start_time=13


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=17)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=15, readable_time_span=[15, 16[, writable_time_span=[16, 16[
reader state=-1, writer state=1, end_time=20, read_start_time=15


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 15)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
cannot lock mutex for debug_print



[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 15)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=15, readable_time_span=[16, 16[, writable_time_span=[16, 17[
reader state=0, writer state=1, end_time=20, read_start_time=16


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [16, 17[ t=16

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 16)....

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=15, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
cannot lock mutex for debug_print



[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [16, 17[ t=16

[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 15)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 16)....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 16) --> [13, 18[

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 15) --> [15, 16[

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 15)

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [16, 17[ t=16

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=15, readable_time_span=[16, 16[, writable_time_span=[16, 17[
reader state=0, writer state=-1, end_time=20, read_start_time=16


[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 16)....

[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=15)

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=15)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 16)....

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=3, write_position=3, full=1
total_duration=5
last_write_time=17, readable_time_span=[13, 18[, writable_time_span=[18, 18[
reader state=-1, writer state=1, end_time=20, read_start_time=13


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 16)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=4, write_position=3, full=0
total_duration=5
last_write_time=17, readable_time_span=[14, 18[, writable_time_span=[18, 19[
reader state=0, writer state=1, end_time=20, read_start_time=14


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [18, 19[ t=18

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=16, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=16, readable_time_span=[16, 17[, writable_time_span=[17, 17[
reader state=1, writer state=0, end_time=20, read_start_time=16


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 16)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 16) --> [16, 17[

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 16)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=18, end=0), 
[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
cannot lock mutex for debug_print



[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=18)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 16) --> [15, 19[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=3, write_position=3, full=1
total_duration=4
last_write_time=18, readable_time_span=[15, 19[, writable_time_span=[19, 19[
reader state=-1, writer state=1, end_time=20, read_start_time=15


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 16)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=3, full=0
total_duration=4
last_write_time=18, readable_time_span=[16, 19[, writable_time_span=[19, 20[
reader state=0, writer state=1, end_time=20, read_start_time=16


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=16, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=16, readable_time_span=[16, 17[, writable_time_span=[17, 17[
reader state=1, writer state=0, end_time=20, read_start_time=16


[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [19, 20[ t=19

[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 16)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 16) --> [16, 17[

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=18, end=0), 
[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=4, write_position=4, full=1
total_duration=5
last_write_time=18, readable_time_span=[14, 19[, writable_time_span=[19, 19[
reader state=0, writer state=0, end_time=20, read_start_time=14


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=18)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=16, readable_time_span=[16, 17[, writable_time_span=[17, 17[
reader state=-1, writer state=1, end_time=20, read_start_time=16


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 16)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
cannot lock mutex for debug_print



[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 16)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=16, readable_time_span=[17, 17[, writable_time_span=[17, 18[
reader state=0, writer state=1, end_time=20, read_start_time=17


[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [17, 18[ t=17

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 17)....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [17, 18[ t=17

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 17) --> [14, 19[

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=16, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=16, readable_time_span=[16, 17[, writable_time_span=[17, 17[
reader state=-1, writer state=0, end_time=20, read_start_time=16


[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 17)....

[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 16)

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 16) --> [16, 17[

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 16)

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [17, 18[ t=17

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 17)....

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=16, readable_time_span=[17, 17[, writable_time_span=[17, 18[
reader state=0, writer state=-1, end_time=20, read_start_time=17


[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=16)

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=16)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 17)....

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=4, write_position=4, full=1
total_duration=5
last_write_time=18, readable_time_span=[14, 19[, writable_time_span=[19, 19[
reader state=-1, writer state=1, end_time=20, read_start_time=14


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 17)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=4, full=0
total_duration=5
last_write_time=18, readable_time_span=[15, 19[, writable_time_span=[19, 20[
reader state=0, writer state=1, end_time=20, read_start_time=15


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=17, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=17, readable_time_span=[17, 18[, writable_time_span=[18, 18[
reader state=1, writer state=0, end_time=20, read_start_time=17


[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [19, 20[ t=19

[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 17)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 17) --> [17, 18[

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 17)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=19, end=1), 
[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=4
last_write_time=19, readable_time_span=[16, 20[, writable_time_span=[20, 20[
reader state=4, writer state=0, end_time=20, read_start_time=16


[src/graph/media_source_node.cc:14, thread_main_]
source:: ended

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 17) --> [16, 20[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=4
last_write_time=19, readable_time_span=[16, 20[, writable_time_span=[20, 20[
reader state=-1, writer state=0, end_time=20, read_start_time=16


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 17)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=1, write_position=0, full=0
total_duration=4
last_write_time=19, readable_time_span=[17, 20[, writable_time_span=[20, 21[
reader state=0, writer state=0, end_time=20, read_start_time=17


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=17, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=17, readable_time_span=[17, 18[, writable_time_span=[18, 18[
reader state=1, writer state=0, end_time=20, read_start_time=17


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 17)

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 17) --> [17, 18[

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=19, end=1), 
[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=5
last_write_time=19, readable_time_span=[15, 20[, writable_time_span=[20, 20[
reader state=0, writer state=0, end_time=20, read_start_time=15


[src/graph/media_source_node.cc:14, thread_main_]
source:: ended

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=17, readable_time_span=[17, 18[, writable_time_span=[18, 18[
reader state=-1, writer state=1, end_time=20, read_start_time=17


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 17)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=17, readable_time_span=[18, 18[, writable_time_span=[18, 19[
reader state=0, writer state=1, end_time=20, read_start_time=18


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 17)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=17, readable_time_span=[18, 18[, writable_time_span=[18, 19[
reader state=0, writer state=1, end_time=20, read_start_time=18


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [18, 19[ t=18

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 18)....

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=17, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=17, readable_time_span=[17, 18[, writable_time_span=[18, 18[
reader state=-1, writer state=0, end_time=20, read_start_time=17


[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [18, 19[ t=18

[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 17)

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 17) --> [17, 18[

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 18)....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 18) --> [17, 20[

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 17)

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 18) --> [15, 20[

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=17, readable_time_span=[18, 18[, writable_time_span=[18, 19[
reader state=0, writer state=0, end_time=20, read_start_time=18


[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=17)

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=17)

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [18, 19[ t=18

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 18)....

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 18)....

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=5
last_write_time=19, readable_time_span=[15, 20[, writable_time_span=[20, 20[
reader state=-1, writer state=0, end_time=20, read_start_time=15


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 18)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=1, write_position=0, full=0
total_duration=5
last_write_time=19, readable_time_span=[16, 20[, writable_time_span=[20, 21[
reader state=0, writer state=0, end_time=20, read_start_time=16


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=18, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=18, readable_time_span=[18, 19[, writable_time_span=[19, 19[
reader state=1, writer state=0, end_time=20, read_start_time=18


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 18)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=1, write_position=0, full=0
total_duration=4
last_write_time=19, readable_time_span=[17, 20[, writable_time_span=[20, 21[
reader state=-1, writer state=0, end_time=20, read_start_time=17


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 18)

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 18) --> [18, 19[

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=2, write_position=0, full=0
total_duration=4
last_write_time=19, readable_time_span=[18, 20[, writable_time_span=[20, 22[
reader state=0, writer state=0, end_time=20, read_start_time=18


[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 18)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 18) --> [18, 19[

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=18, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=18, readable_time_span=[18, 19[, writable_time_span=[19, 19[
reader state=-1, writer state=0, end_time=20, read_start_time=18


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 18)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=18, readable_time_span=[18, 19[, writable_time_span=[19, 19[
reader state=-1, writer state=1, end_time=20, read_start_time=18


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 18)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=18, readable_time_span=[19, 19[, writable_time_span=[19, 20[
reader state=0, writer state=1, end_time=20, read_start_time=19


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 18)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=18, readable_time_span=[19, 19[, writable_time_span=[19, 20[
reader state=0, writer state=1, end_time=20, read_start_time=19


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [19, 20[ t=19

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=18, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=18, readable_time_span=[18, 19[, writable_time_span=[19, 19[
reader state=-1, writer state=0, end_time=20, read_start_time=18


[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 19)....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 18) --> [18, 19[

[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 18)

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [19, 20[ t=19

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 19) --> [16, 20[

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 19)....

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 18)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 19) --> [18, 20[

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=18, readable_time_span=[19, 19[, writable_time_span=[19, 20[
reader state=0, writer state=0, end_time=20, read_start_time=19


[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=18)

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [19, 20[ t=19

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=18)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 19)....

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 19)....

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=1, write_position=0, full=0
total_duration=5
last_write_time=19, readable_time_span=[16, 20[, writable_time_span=[20, 21[
reader state=-1, writer state=0, end_time=20, read_start_time=16


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 19)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=2, write_position=0, full=0
total_duration=5
last_write_time=19, readable_time_span=[17, 20[, writable_time_span=[20, 22[
reader state=0, writer state=0, end_time=20, read_start_time=17


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=19, end=1), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=19, readable_time_span=[19, 20[, writable_time_span=[20, 20[
reader state=1, writer state=0, end_time=20, read_start_time=19


[src/graph/media_node.cc:14, thread_main_]
node:: ended

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 19) --> [19, 20[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=2, write_position=0, full=0
total_duration=4
last_write_time=19, readable_time_span=[18, 20[, writable_time_span=[20, 22[
reader state=-1, writer state=0, end_time=20, read_start_time=18


[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 19)....

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 19)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=3, write_position=0, full=0
total_duration=4
last_write_time=19, readable_time_span=[19, 20[, writable_time_span=[20, 23[
reader state=0, writer state=0, end_time=20, read_start_time=19


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=19, end=1), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=19, readable_time_span=[19, 20[, writable_time_span=[20, 20[
reader state=1, writer state=0, end_time=20, read_start_time=19


[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 19) --> [19, 20[

[src/graph/media_node.cc:14, thread_main_]
node:: ended

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=19, readable_time_span=[19, 20[, writable_time_span=[20, 20[
reader state=-1, writer state=0, end_time=20, read_start_time=19


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 19)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=1 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=19, readable_time_span=[20, 20[, writable_time_span=[20, 21[
reader state=0, writer state=0, end_time=20, read_start_time=20


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 19)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=1 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=19, readable_time_span=[20, 20[, writable_time_span=[20, 21[
reader state=0, writer state=0, end_time=20, read_start_time=20


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=19, end=1), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=19, readable_time_span=[19, 20[, writable_time_span=[20, 20[
reader state=-1, writer state=0, end_time=20, read_start_time=19


[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 19) --> [19, 20[

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 19)

[src/graph/media_node.cc:14, thread_main_]
node:: ended

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=1 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=19, readable_time_span=[20, 20[, writable_time_span=[20, 21[
reader state=0, writer state=0, end_time=20, read_start_time=20


[src/graph/media_sink_node.cc:23, pull_frame_]
sink: reached end!

[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=19)

[src/graph/media_graph.cc:53, run]
graph::reached end!

[src/graph/media_graph.cc:17, ~media_graph]
media_graph stopping

[src/graph/media_graph.cc:19, ~media_graph]
media_graph no more

[src/graph/media_graph.cc:12, media_graph]
media_graph

[src/graph/media_source_node.cc:60, launch_]
source:: launch

[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=-1)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [0, 1[ t=0

[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = -1)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [0, 1[ t=0

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [0, 1[ t=0

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 0)....

[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = -1)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [0, 1[ t=0

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 0)....

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=-1)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 0)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=0, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=0, readable_time_span=[0, 1[, writable_time_span=[1, 1[
reader state=1, writer state=0, end_time=20, read_start_time=0


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=0)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 0) --> [0, 1[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=0, readable_time_span=[0, 1[, writable_time_span=[1, 1[
reader state=-1, writer state=1, end_time=20, read_start_time=0


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 0)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=0, readable_time_span=[1, 1[, writable_time_span=[1, 2[
reader state=0, writer state=1, end_time=20, read_start_time=1


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=0, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=0, readable_time_span=[0, 1[, writable_time_span=[1, 1[
reader state=1, writer state=0, end_time=20, read_start_time=0


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 0)

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [1, 2[ t=1

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 0) --> [0, 1[

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 0)....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 0) --> [0, 1[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=0, readable_time_span=[0, 1[, writable_time_span=[1, 1[
reader state=-1, writer state=1, end_time=20, read_start_time=0


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 0)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=0, readable_time_span=[1, 1[, writable_time_span=[1, 2[
reader state=0, writer state=1, end_time=20, read_start_time=1


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 0)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=0, readable_time_span=[1, 1[, writable_time_span=[1, 2[
reader state=0, writer state=0, end_time=20, read_start_time=1


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [1, 2[ t=1

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=0, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=0, readable_time_span=[0, 1[, writable_time_span=[1, 1[
reader state=1, writer state=0, end_time=20, read_start_time=0


[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 0)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [1, 2[ t=1

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 0) --> [0, 1[

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 1)....

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 0)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=0, readable_time_span=[1, 1[, writable_time_span=[1, 2[
reader state=0, writer state=1, end_time=20, read_start_time=1


[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=0)

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=0)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 1)....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [1, 2[ t=1

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 1)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=1, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=1, readable_time_span=[1, 2[, writable_time_span=[2, 2[
reader state=1, writer state=0, end_time=20, read_start_time=1


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=1)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 1) --> [1, 2[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=1, readable_time_span=[1, 2[, writable_time_span=[2, 2[
reader state=-1, writer state=1, end_time=20, read_start_time=1


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 1)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=1, readable_time_span=[2, 2[, writable_time_span=[2, 3[
reader state=0, writer state=1, end_time=20, read_start_time=2


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=1, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=1, readable_time_span=[1, 2[, writable_time_span=[2, 2[
reader state=1, writer state=0, end_time=20, read_start_time=1


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 1)

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [2, 3[ t=2

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 1) --> [1, 2[

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 1)....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 1) --> [1, 2[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=1, readable_time_span=[1, 2[, writable_time_span=[2, 2[
reader state=-1, writer state=1, end_time=20, read_start_time=1


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 1)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=1, readable_time_span=[2, 2[, writable_time_span=[2, 3[
reader state=0, writer state=1, end_time=20, read_start_time=2


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 1)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=1, readable_time_span=[2, 2[, writable_time_span=[2, 3[
reader state=0, writer state=0, end_time=20, read_start_time=2


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [2, 3[ t=2

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=1, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=1, readable_time_span=[1, 2[, writable_time_span=[2, 2[
reader state=1, writer state=0, end_time=20, read_start_time=1


[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 1)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [2, 3[ t=2

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 2)....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 1) --> [1, 2[

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 1)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=1, readable_time_span=[2, 2[, writable_time_span=[2, 3[
reader state=0, writer state=1, end_time=20, read_start_time=2


[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=1)

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=1)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 2)....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [2, 3[ t=2

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 2)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=2, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=2, readable_time_span=[2, 3[, writable_time_span=[3, 3[
reader state=1, writer state=0, end_time=20, read_start_time=2


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=2)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 2) --> [2, 3[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=2, readable_time_span=[2, 3[, writable_time_span=[3, 3[
reader state=-1, writer state=1, end_time=20, read_start_time=2


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 2)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=2, readable_time_span=[3, 3[, writable_time_span=[3, 4[
reader state=0, writer state=1, end_time=20, read_start_time=3


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=2, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=2, readable_time_span=[2, 3[, writable_time_span=[3, 3[
reader state=1, writer state=0, end_time=20, read_start_time=2


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 2)

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [3, 4[ t=3

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 2) --> [2, 3[

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 2)....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 2) --> [2, 3[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=2, readable_time_span=[2, 3[, writable_time_span=[3, 3[
reader state=-1, writer state=1, end_time=20, read_start_time=2


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 2)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=2, readable_time_span=[3, 3[, writable_time_span=[3, 4[
reader state=0, writer state=1, end_time=20, read_start_time=3


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 2)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=2, readable_time_span=[3, 3[, writable_time_span=[3, 4[
reader state=0, writer state=0, end_time=20, read_start_time=3


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [3, 4[ t=3

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=2, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=2, readable_time_span=[2, 3[, writable_time_span=[3, 3[
reader state=1, writer state=0, end_time=20, read_start_time=2


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 2)

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 2) --> [2, 3[

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 2)

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [3, 4[ t=3

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [3, 4[ t=3

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 3)....

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=2, readable_time_span=[3, 3[, writable_time_span=[3, 4[
reader state=0, writer state=-1, end_time=20, read_start_time=3


[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 3)....

[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=2)

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=2)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 3)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=3, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=3, readable_time_span=[3, 4[, writable_time_span=[4, 4[
reader state=1, writer state=0, end_time=20, read_start_time=3


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=3)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 3) --> [3, 4[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=3, readable_time_span=[3, 4[, writable_time_span=[4, 4[
reader state=-1, writer state=1, end_time=20, read_start_time=3


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 3)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=3, readable_time_span=[4, 4[, writable_time_span=[4, 5[
reader state=0, writer state=1, end_time=20, read_start_time=4


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=3, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=3, readable_time_span=[3, 4[, writable_time_span=[4, 4[
reader state=1, writer state=0, end_time=20, read_start_time=3


[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [4, 5[ t=4

[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 3)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 3) --> [3, 4[

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 3)....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 3) --> [3, 4[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=3, readable_time_span=[3, 4[, writable_time_span=[4, 4[
reader state=-1, writer state=1, end_time=20, read_start_time=3


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 3)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=3, readable_time_span=[4, 4[, writable_time_span=[4, 5[
reader state=0, writer state=1, end_time=20, read_start_time=4


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 3)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=3, readable_time_span=[4, 4[, writable_time_span=[4, 5[
reader state=0, writer state=0, end_time=20, read_start_time=4


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [4, 5[ t=4

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=3, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=3, readable_time_span=[3, 4[, writable_time_span=[4, 4[
reader state=1, writer state=0, end_time=20, read_start_time=3


[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 3)

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [4, 5[ t=4

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 4)....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 3) --> [3, 4[

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 3)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=3, readable_time_span=[4, 4[, writable_time_span=[4, 5[
reader state=0, writer state=1, end_time=20, read_start_time=4


[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=3)

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=3)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 4)....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [4, 5[ t=4

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 4)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=4, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=4, readable_time_span=[4, 5[, writable_time_span=[5, 5[
reader state=1, writer state=0, end_time=20, read_start_time=4


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=4)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 4) --> [4, 5[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=4, readable_time_span=[4, 5[, writable_time_span=[5, 5[
reader state=-1, writer state=1, end_time=20, read_start_time=4


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 4)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=4, readable_time_span=[5, 5[, writable_time_span=[5, 6[
reader state=0, writer state=1, end_time=20, read_start_time=5


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=4, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=4, readable_time_span=[4, 5[, writable_time_span=[5, 5[
reader state=1, writer state=0, end_time=20, read_start_time=4


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 4)

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [5, 6[ t=5

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 4) --> [4, 5[

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 4)....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 4) --> [4, 5[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=4, readable_time_span=[4, 5[, writable_time_span=[5, 5[
reader state=-1, writer state=1, end_time=20, read_start_time=4


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 4)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=4, readable_time_span=[5, 5[, writable_time_span=[5, 6[
reader state=0, writer state=1, end_time=20, read_start_time=5


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 4)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=4, readable_time_span=[5, 5[, writable_time_span=[5, 6[
reader state=0, writer state=0, end_time=20, read_start_time=5


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [5, 6[ t=5

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 4) --> [4, 5[

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [5, 6[ t=5

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 5)....

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=4, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=4, readable_time_span=[4, 5[, writable_time_span=[5, 5[
reader state=1, writer state=0, end_time=20, read_start_time=4


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 4)

[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 4)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=4, readable_time_span=[5, 5[, writable_time_span=[5, 6[
reader state=0, writer state=0, end_time=20, read_start_time=5


[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=4)

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [5, 6[ t=5

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=4)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 5)....

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 5)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=5, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=5, readable_time_span=[5, 6[, writable_time_span=[6, 6[
reader state=1, writer state=0, end_time=20, read_start_time=5


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=5)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 5) --> [5, 6[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=5, readable_time_span=[5, 6[, writable_time_span=[6, 6[
reader state=-1, writer state=1, end_time=20, read_start_time=5


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 5)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=5, readable_time_span=[6, 6[, writable_time_span=[6, 7[
reader state=0, writer state=1, end_time=20, read_start_time=6


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=5, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=5, readable_time_span=[5, 6[, writable_time_span=[6, 6[
reader state=1, writer state=0, end_time=20, read_start_time=5


[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 5) --> [5, 6[

[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 5)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 5)....

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [6, 7[ t=6

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 5) --> [5, 6[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=5, readable_time_span=[5, 6[, writable_time_span=[6, 6[
reader state=-1, writer state=1, end_time=20, read_start_time=5


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 5)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=5, readable_time_span=[6, 6[, writable_time_span=[6, 7[
reader state=0, writer state=1, end_time=20, read_start_time=6


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 5)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=5, readable_time_span=[6, 6[, writable_time_span=[6, 7[
reader state=0, writer state=0, end_time=20, read_start_time=6


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [6, 7[ t=6

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=5, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=5, readable_time_span=[5, 6[, writable_time_span=[6, 6[
reader state=1, writer state=0, end_time=20, read_start_time=5


[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 5)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [6, 7[ t=6

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 6)....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 5) --> [5, 6[

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 5)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=5, readable_time_span=[6, 6[, writable_time_span=[6, 7[
reader state=0, writer state=-1, end_time=20, read_start_time=6


[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [6, 7[ t=6

[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=5)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 6)....

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=5)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 6)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=6, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=6, readable_time_span=[6, 7[, writable_time_span=[7, 7[
reader state=1, writer state=0, end_time=20, read_start_time=6


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=6)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 6) --> [6, 7[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=6, readable_time_span=[6, 7[, writable_time_span=[7, 7[
reader state=-1, writer state=1, end_time=20, read_start_time=6


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 6)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=6, readable_time_span=[7, 7[, writable_time_span=[7, 8[
reader state=0, writer state=1, end_time=20, read_start_time=7


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=6, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=6, readable_time_span=[6, 7[, writable_time_span=[7, 7[
reader state=1, writer state=0, end_time=20, read_start_time=6


[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [7, 8[ t=7

[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 6)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 6) --> [6, 7[

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 6)....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 6) --> [6, 7[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=6, readable_time_span=[6, 7[, writable_time_span=[7, 7[
reader state=-1, writer state=1, end_time=20, read_start_time=6


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 6)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=6, readable_time_span=[7, 7[, writable_time_span=[7, 8[
reader state=0, writer state=1, end_time=20, read_start_time=7


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 6)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=6, readable_time_span=[7, 7[, writable_time_span=[7, 8[
reader state=0, writer state=0, end_time=20, read_start_time=7


[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [7, 8[ t=7

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [7, 8[ t=7

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 7)....

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=6, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=6, readable_time_span=[6, 7[, writable_time_span=[7, 7[
reader state=1, writer state=0, end_time=20, read_start_time=6


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 6)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 6) --> [6, 7[

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 6)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=6, readable_time_span=[7, 7[, writable_time_span=[7, 8[
reader state=0, writer state=1, end_time=20, read_start_time=7


[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=6)

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=6)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 7)....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [7, 8[ t=7

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 7)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=7, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=7, readable_time_span=[7, 8[, writable_time_span=[8, 8[
reader state=1, writer state=0, end_time=20, read_start_time=7


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=7)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 7) --> [7, 8[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=7, readable_time_span=[7, 8[, writable_time_span=[8, 8[
reader state=-1, writer state=1, end_time=20, read_start_time=7


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 7)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=7, readable_time_span=[8, 8[, writable_time_span=[8, 9[
reader state=0, writer state=1, end_time=20, read_start_time=8


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [8, 9[ t=8

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 7) --> [7, 8[

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 7)....

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=7, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=7, readable_time_span=[7, 8[, writable_time_span=[8, 8[
reader state=-1, writer state=0, end_time=20, read_start_time=7


[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 7) --> [7, 8[

[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 7)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=7, readable_time_span=[7, 8[, writable_time_span=[8, 8[
reader state=-1, writer state=1, end_time=20, read_start_time=7


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 7)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=7, readable_time_span=[8, 8[, writable_time_span=[8, 9[
reader state=0, writer state=1, end_time=20, read_start_time=8


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 7)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=7, readable_time_span=[8, 8[, writable_time_span=[8, 9[
reader state=0, writer state=0, end_time=20, read_start_time=8


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [8, 9[ t=8

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=7, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=7, readable_time_span=[7, 8[, writable_time_span=[8, 8[
reader state=1, writer state=0, end_time=20, read_start_time=7


[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 7)

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [8, 9[ t=8

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 8)....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 7) --> [7, 8[

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 7)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=7, readable_time_span=[8, 8[, writable_time_span=[8, 9[
reader state=0, writer state=-1, end_time=20, read_start_time=8


[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [8, 9[ t=8

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 8)....

[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=7)

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=7)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 8)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=8, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=8, readable_time_span=[8, 9[, writable_time_span=[9, 9[
reader state=1, writer state=0, end_time=20, read_start_time=8


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=8)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 8) --> [8, 9[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=8, readable_time_span=[8, 9[, writable_time_span=[9, 9[
reader state=-1, writer state=1, end_time=20, read_start_time=8


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 8)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=8, readable_time_span=[9, 9[, writable_time_span=[9, 10[
reader state=0, writer state=1, end_time=20, read_start_time=9


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [9, 10[ t=9

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=8, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=8, readable_time_span=[8, 9[, writable_time_span=[9, 9[
reader state=-1, writer state=0, end_time=20, read_start_time=8


[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 8) --> [8, 9[

[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 8)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 8)....

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 8) --> [8, 9[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=8, readable_time_span=[8, 9[, writable_time_span=[9, 9[
reader state=-1, writer state=1, end_time=20, read_start_time=8


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 8)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=8, readable_time_span=[9, 9[, writable_time_span=[9, 10[
reader state=0, writer state=1, end_time=20, read_start_time=9


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 8)

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [9, 10[ t=9

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=8, readable_time_span=[9, 9[, writable_time_span=[9, 10[
reader state=0, writer state=0, end_time=20, read_start_time=9


[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [9, 10[ t=9

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 9)....

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=8, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=8, readable_time_span=[8, 9[, writable_time_span=[9, 9[
reader state=1, writer state=0, end_time=20, read_start_time=8


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 8)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 8) --> [8, 9[

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 8)

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [9, 10[ t=9

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=8, readable_time_span=[9, 9[, writable_time_span=[9, 10[
reader state=0, writer state=-1, end_time=20, read_start_time=9


[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 9)....

[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=8)

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=8)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 9)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=9, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=9, readable_time_span=[9, 10[, writable_time_span=[10, 10[
reader state=1, writer state=0, end_time=20, read_start_time=9


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=9)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 9) --> [9, 10[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=9, readable_time_span=[9, 10[, writable_time_span=[10, 10[
reader state=-1, writer state=1, end_time=20, read_start_time=9


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 9)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=9, readable_time_span=[10, 10[, writable_time_span=[10, 11[
reader state=0, writer state=1, end_time=20, read_start_time=10


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [10, 11[ t=10

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 9) --> [9, 10[

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 9)....

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=9, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=9, readable_time_span=[9, 10[, writable_time_span=[10, 10[
reader state=-1, writer state=0, end_time=20, read_start_time=9


[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 9) --> [9, 10[

[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 9)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=9, readable_time_span=[9, 10[, writable_time_span=[10, 10[
reader state=-1, writer state=1, end_time=20, read_start_time=9


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 9)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=9, readable_time_span=[10, 10[, writable_time_span=[10, 11[
reader state=0, writer state=1, end_time=20, read_start_time=10


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 9)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=9, readable_time_span=[10, 10[, writable_time_span=[10, 11[
reader state=0, writer state=0, end_time=20, read_start_time=10


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=9, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=9, readable_time_span=[9, 10[, writable_time_span=[10, 10[
reader state=1, writer state=0, end_time=20, read_start_time=9


[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [10, 11[ t=10

[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 9)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [10, 11[ t=10

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 10)....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 9) --> [9, 10[

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 9)

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [10, 11[ t=10

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 10)....

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=9, readable_time_span=[10, 10[, writable_time_span=[10, 11[
reader state=0, writer state=-1, end_time=20, read_start_time=10


[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=9)

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=9)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 10)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=10, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=10, readable_time_span=[10, 11[, writable_time_span=[11, 11[
reader state=1, writer state=0, end_time=20, read_start_time=10


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=10)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 10) --> [10, 11[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=10, readable_time_span=[10, 11[, writable_time_span=[11, 11[
reader state=-1, writer state=1, end_time=20, read_start_time=10


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 10)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=10, readable_time_span=[11, 11[, writable_time_span=[11, 12[
reader state=0, writer state=1, end_time=20, read_start_time=11


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 10) --> [10, 11[

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [11, 12[ t=11

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=10, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=10, readable_time_span=[10, 11[, writable_time_span=[11, 11[
reader state=-1, writer state=0, end_time=20, read_start_time=10


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 10)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 10)....

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 10) --> [10, 11[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=10, readable_time_span=[10, 11[, writable_time_span=[11, 11[
reader state=-1, writer state=1, end_time=20, read_start_time=10


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 10)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=10, readable_time_span=[11, 11[, writable_time_span=[11, 12[
reader state=0, writer state=1, end_time=20, read_start_time=11


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 10)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=10, readable_time_span=[11, 11[, writable_time_span=[11, 12[
reader state=0, writer state=0, end_time=20, read_start_time=11


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [11, 12[ t=11

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=10, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=10, readable_time_span=[10, 11[, writable_time_span=[11, 11[
reader state=1, writer state=0, end_time=20, read_start_time=10


[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 10)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [11, 12[ t=11

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 11)....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 10) --> [10, 11[

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 10)

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [11, 12[ t=11

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=10, readable_time_span=[11, 11[, writable_time_span=[11, 12[
reader state=0, writer state=-1, end_time=20, read_start_time=11


[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 11)....

[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=10)

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=10)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 11)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=11, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=11, readable_time_span=[11, 12[, writable_time_span=[12, 12[
reader state=1, writer state=0, end_time=20, read_start_time=11


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=11)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 11) --> [11, 12[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=11, readable_time_span=[11, 12[, writable_time_span=[12, 12[
reader state=-1, writer state=1, end_time=20, read_start_time=11


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 11)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=11, readable_time_span=[12, 12[, writable_time_span=[12, 13[
reader state=0, writer state=1, end_time=20, read_start_time=12


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 11) --> [11, 12[

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [12, 13[ t=12

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=11, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=11, readable_time_span=[11, 12[, writable_time_span=[12, 12[
reader state=-1, writer state=0, end_time=20, read_start_time=11


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 11)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 11)....

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 11) --> [11, 12[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=11, readable_time_span=[11, 12[, writable_time_span=[12, 12[
reader state=-1, writer state=1, end_time=20, read_start_time=11


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 11)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=11, readable_time_span=[12, 12[, writable_time_span=[12, 13[
reader state=0, writer state=1, end_time=20, read_start_time=12


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 11)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=11, readable_time_span=[12, 12[, writable_time_span=[12, 13[
reader state=0, writer state=0, end_time=20, read_start_time=12


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=11, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=11, readable_time_span=[11, 12[, writable_time_span=[12, 12[
reader state=1, writer state=0, end_time=20, read_start_time=11


[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [12, 13[ t=12

[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 11)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 11) --> [11, 12[

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 11)

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [12, 13[ t=12

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 12)....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [12, 13[ t=12

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=11, readable_time_span=[12, 12[, writable_time_span=[12, 13[
reader state=0, writer state=-1, end_time=20, read_start_time=12


[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 12)....

[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=11)

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=11)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 12)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=12, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=12, readable_time_span=[12, 13[, writable_time_span=[13, 13[
reader state=1, writer state=0, end_time=20, read_start_time=12


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=12)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 12) --> [12, 13[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=12, readable_time_span=[12, 13[, writable_time_span=[13, 13[
reader state=-1, writer state=1, end_time=20, read_start_time=12


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 12)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=12, readable_time_span=[13, 13[, writable_time_span=[13, 14[
reader state=0, writer state=1, end_time=20, read_start_time=13


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=12, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=12, readable_time_span=[12, 13[, writable_time_span=[13, 13[
reader state=1, writer state=0, end_time=20, read_start_time=12


[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [13, 14[ t=13

[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 12)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 12) --> [12, 13[

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 12)....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 12) --> [12, 13[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=12, readable_time_span=[12, 13[, writable_time_span=[13, 13[
reader state=-1, writer state=1, end_time=20, read_start_time=12


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 12)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=12, readable_time_span=[13, 13[, writable_time_span=[13, 14[
reader state=0, writer state=1, end_time=20, read_start_time=13


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 12)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=12, readable_time_span=[13, 13[, writable_time_span=[13, 14[
reader state=0, writer state=0, end_time=20, read_start_time=13


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [13, 14[ t=13

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=12, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=12, readable_time_span=[12, 13[, writable_time_span=[13, 13[
reader state=1, writer state=0, end_time=20, read_start_time=12


[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 12)

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [13, 14[ t=13

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 13)....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 12) --> [12, 13[

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 12)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=12, readable_time_span=[13, 13[, writable_time_span=[13, 14[
reader state=0, writer state=-1, end_time=20, read_start_time=13


[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [13, 14[ t=13

[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=12)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 13)....

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=12)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 13)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=13, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=13, readable_time_span=[13, 14[, writable_time_span=[14, 14[
reader state=1, writer state=0, end_time=20, read_start_time=13


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=13)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 13) --> [13, 14[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=13, readable_time_span=[13, 14[, writable_time_span=[14, 14[
reader state=-1, writer state=1, end_time=20, read_start_time=13


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 13)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=13, readable_time_span=[14, 14[, writable_time_span=[14, 15[
reader state=0, writer state=1, end_time=20, read_start_time=14


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=13, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=13, readable_time_span=[13, 14[, writable_time_span=[14, 14[
reader state=1, writer state=0, end_time=20, read_start_time=13


[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [14, 15[ t=14

[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 13)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 13) --> [13, 14[

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 13)....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 13) --> [13, 14[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=13, readable_time_span=[13, 14[, writable_time_span=[14, 14[
reader state=-1, writer state=1, end_time=20, read_start_time=13


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 13)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=13, readable_time_span=[14, 14[, writable_time_span=[14, 15[
reader state=0, writer state=1, end_time=20, read_start_time=14


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 13)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=13, readable_time_span=[14, 14[, writable_time_span=[14, 15[
reader state=0, writer state=0, end_time=20, read_start_time=14


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [14, 15[ t=14

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 13) --> [13, 14[

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [14, 15[ t=14

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 14)....

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=13, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=13, readable_time_span=[13, 14[, writable_time_span=[14, 14[
reader state=1, writer state=0, end_time=20, read_start_time=13


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 13)

[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 13)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=13, readable_time_span=[14, 14[, writable_time_span=[14, 15[
reader state=0, writer state=0, end_time=20, read_start_time=14


[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=13)

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=13)

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [14, 15[ t=14

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 14)....

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 14)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=14, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=14, readable_time_span=[14, 15[, writable_time_span=[15, 15[
reader state=1, writer state=0, end_time=20, read_start_time=14


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=14)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 14) --> [14, 15[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=14, readable_time_span=[14, 15[, writable_time_span=[15, 15[
reader state=-1, writer state=1, end_time=20, read_start_time=14


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 14)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=14, readable_time_span=[15, 15[, writable_time_span=[15, 16[
reader state=0, writer state=1, end_time=20, read_start_time=15


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=14, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=14, readable_time_span=[14, 15[, writable_time_span=[15, 15[
reader state=1, writer state=0, end_time=20, read_start_time=14


[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 14) --> [14, 15[

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [15, 16[ t=15

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 14)....

[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 14)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 14) --> [14, 15[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=14, readable_time_span=[14, 15[, writable_time_span=[15, 15[
reader state=-1, writer state=1, end_time=20, read_start_time=14


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 14)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=14, readable_time_span=[15, 15[, writable_time_span=[15, 16[
reader state=0, writer state=1, end_time=20, read_start_time=15


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 14)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=14, readable_time_span=[15, 15[, writable_time_span=[15, 16[
reader state=0, writer state=0, end_time=20, read_start_time=15


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [15, 16[ t=15

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=14, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=14, readable_time_span=[14, 15[, writable_time_span=[15, 15[
reader state=1, writer state=0, end_time=20, read_start_time=14


[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 14)

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [15, 16[ t=15

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 15)....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 14) --> [14, 15[

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 14)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=14, readable_time_span=[15, 15[, writable_time_span=[15, 16[
reader state=0, writer state=1, end_time=20, read_start_time=15


[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=14)

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=14)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 15)....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [15, 16[ t=15

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 15)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=15, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=15, readable_time_span=[15, 16[, writable_time_span=[16, 16[
reader state=1, writer state=0, end_time=20, read_start_time=15


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=15)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 15) --> [15, 16[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=15, readable_time_span=[15, 16[, writable_time_span=[16, 16[
reader state=-1, writer state=1, end_time=20, read_start_time=15


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 15)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=15, readable_time_span=[16, 16[, writable_time_span=[16, 17[
reader state=0, writer state=1, end_time=20, read_start_time=16


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=15, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=15, readable_time_span=[15, 16[, writable_time_span=[16, 16[
reader state=1, writer state=0, end_time=20, read_start_time=15


[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [16, 17[ t=16

[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 15)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 15) --> [15, 16[

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 15)....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 15) --> [15, 16[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=15, readable_time_span=[15, 16[, writable_time_span=[16, 16[
reader state=-1, writer state=1, end_time=20, read_start_time=15


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 15)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=15, readable_time_span=[16, 16[, writable_time_span=[16, 17[
reader state=0, writer state=1, end_time=20, read_start_time=16


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 15)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=15, readable_time_span=[16, 16[, writable_time_span=[16, 17[
reader state=0, writer state=0, end_time=20, read_start_time=16


[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [16, 17[ t=16

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [16, 17[ t=16

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 16)....

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=15, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=15, readable_time_span=[15, 16[, writable_time_span=[16, 16[
reader state=1, writer state=0, end_time=20, read_start_time=15


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 15)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 15) --> [15, 16[

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 15)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=15, readable_time_span=[16, 16[, writable_time_span=[16, 17[
reader state=0, writer state=1, end_time=20, read_start_time=16


[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=15)

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=15)

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [16, 17[ t=16

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 16)....

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 16)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=16, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=16, readable_time_span=[16, 17[, writable_time_span=[17, 17[
reader state=1, writer state=0, end_time=20, read_start_time=16


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=16)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 16) --> [16, 17[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=16, readable_time_span=[16, 17[, writable_time_span=[17, 17[
reader state=-1, writer state=1, end_time=20, read_start_time=16


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 16)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=16, readable_time_span=[17, 17[, writable_time_span=[17, 18[
reader state=0, writer state=1, end_time=20, read_start_time=17


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [17, 18[ t=17

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=16, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=16, readable_time_span=[16, 17[, writable_time_span=[17, 17[
reader state=-1, writer state=0, end_time=20, read_start_time=16


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 16)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 16) --> [16, 17[

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 16)....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 16) --> [16, 17[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=16, readable_time_span=[16, 17[, writable_time_span=[17, 17[
reader state=-1, writer state=1, end_time=20, read_start_time=16


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 16)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=16, readable_time_span=[17, 17[, writable_time_span=[17, 18[
reader state=0, writer state=1, end_time=20, read_start_time=17


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 16)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=16, readable_time_span=[17, 17[, writable_time_span=[17, 18[
reader state=0, writer state=0, end_time=20, read_start_time=17


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [17, 18[ t=17

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=16, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=16, readable_time_span=[16, 17[, writable_time_span=[17, 17[
reader state=1, writer state=0, end_time=20, read_start_time=16


[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 16)

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [17, 18[ t=17

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 17)....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 16) --> [16, 17[

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 16)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=16, readable_time_span=[17, 17[, writable_time_span=[17, 18[
reader state=0, writer state=1, end_time=20, read_start_time=17


[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=16)

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=16)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 17)....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [17, 18[ t=17

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 17)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=17, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=17, readable_time_span=[17, 18[, writable_time_span=[18, 18[
reader state=1, writer state=0, end_time=20, read_start_time=17


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=17)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 17) --> [17, 18[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=17, readable_time_span=[17, 18[, writable_time_span=[18, 18[
reader state=-1, writer state=1, end_time=20, read_start_time=17


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 17)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=17, readable_time_span=[18, 18[, writable_time_span=[18, 19[
reader state=0, writer state=1, end_time=20, read_start_time=18


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=17, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=17, readable_time_span=[17, 18[, writable_time_span=[18, 18[
reader state=1, writer state=0, end_time=20, read_start_time=17


[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [18, 19[ t=18

[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 17)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 17) --> [17, 18[

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 17)....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 17) --> [17, 18[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=17, readable_time_span=[17, 18[, writable_time_span=[18, 18[
reader state=-1, writer state=1, end_time=20, read_start_time=17


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 17)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=17, readable_time_span=[18, 18[, writable_time_span=[18, 19[
reader state=0, writer state=-1, end_time=20, read_start_time=18


[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [18, 19[ t=18

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 17)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [18, 19[ t=18

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=17, readable_time_span=[18, 18[, writable_time_span=[18, 19[
reader state=0, writer state=-1, end_time=20, read_start_time=18


[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 18)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=17, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=17, readable_time_span=[17, 18[, writable_time_span=[18, 18[
reader state=1, writer state=0, end_time=20, read_start_time=17


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 17)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 17) --> [17, 18[

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 17)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=17, readable_time_span=[18, 18[, writable_time_span=[18, 19[
reader state=0, writer state=1, end_time=20, read_start_time=18


[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=17)

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=17)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 18)....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [18, 19[ t=18

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 18)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=18, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=18, readable_time_span=[18, 19[, writable_time_span=[19, 19[
reader state=1, writer state=0, end_time=20, read_start_time=18


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=18)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 18) --> [18, 19[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=18, readable_time_span=[18, 19[, writable_time_span=[19, 19[
reader state=-1, writer state=1, end_time=20, read_start_time=18


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 18)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=18, readable_time_span=[19, 19[, writable_time_span=[19, 20[
reader state=0, writer state=1, end_time=20, read_start_time=19


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=18, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=18, readable_time_span=[18, 19[, writable_time_span=[19, 19[
reader state=1, writer state=0, end_time=20, read_start_time=18


[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [19, 20[ t=19

[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 18)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 18) --> [18, 19[

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 18)....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 18) --> [18, 19[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=18, readable_time_span=[18, 19[, writable_time_span=[19, 19[
reader state=-1, writer state=1, end_time=20, read_start_time=18


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 18)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=18, readable_time_span=[19, 19[, writable_time_span=[19, 20[
reader state=0, writer state=1, end_time=20, read_start_time=19


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 18)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=18, readable_time_span=[19, 19[, writable_time_span=[19, 20[
reader state=0, writer state=0, end_time=20, read_start_time=19


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [19, 20[ t=19

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=18, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=18, readable_time_span=[18, 19[, writable_time_span=[19, 19[
reader state=1, writer state=0, end_time=20, read_start_time=18


[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 18)

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [19, 20[ t=19

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 19)....

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 18) --> [18, 19[

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 18)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=18, readable_time_span=[19, 19[, writable_time_span=[19, 20[
reader state=0, writer state=1, end_time=20, read_start_time=19


[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=18)

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=18)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 19)....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [19, 20[ t=19

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 19)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=19, end=1), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=19, readable_time_span=[19, 20[, writable_time_span=[20, 20[
reader state=1, writer state=0, end_time=20, read_start_time=19


[src/graph/media_source_node.cc:14, thread_main_]
source:: ended

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 19) --> [19, 20[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=19, readable_time_span=[19, 20[, writable_time_span=[20, 20[
reader state=-1, writer state=0, end_time=20, read_start_time=19


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 19)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=1 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=19, readable_time_span=[20, 20[, writable_time_span=[20, 21[
reader state=0, writer state=0, end_time=20, read_start_time=20


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=19, end=1), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=19, readable_time_span=[19, 20[, writable_time_span=[20, 20[
reader state=1, writer state=0, end_time=20, read_start_time=19


[src/graph/media_node.cc:14, thread_main_]
node:: ended

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 19) --> [19, 20[

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 19)....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 19) --> [19, 20[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=19, readable_time_span=[19, 20[, writable_time_span=[20, 20[
reader state=-1, writer state=0, end_time=20, read_start_time=19


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 19)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=1 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=19, readable_time_span=[20, 20[, writable_time_span=[20, 21[
reader state=0, writer state=0, end_time=20, read_start_time=20


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 19)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=1 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=19, readable_time_span=[20, 20[, writable_time_span=[20, 21[
reader state=0, writer state=0, end_time=20, read_start_time=20


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=19, end=1), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=19, readable_time_span=[19, 20[, writable_time_span=[20, 20[
reader state=1, writer state=0, end_time=20, read_start_time=19


[src/graph/media_node.cc:14, thread_main_]
node:: ended

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 19) --> [19, 20[

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 19)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=1 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=19, readable_time_span=[20, 20[, writable_time_span=[20, 21[
reader state=0, writer state=0, end_time=20, read_start_time=20


[src/graph/media_sink_node.cc:23, pull_frame_]
sink: reached end!

[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=19)

[src/graph/media_graph.cc:53, run]
graph::reached end!

[src/graph/media_graph.cc:17, ~media_graph]
media_graph stopping

[src/graph/media_graph.cc:19, ~media_graph]
media_graph no more

[src/graph/media_graph.cc:12, media_graph]
media_graph

[src/graph/media_source_node.cc:60, launch_]
source:: launch

[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=-1)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [0, 1[ t=0

[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = -1)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [0, 1[ t=0

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [0, 1[ t=0

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 0)....

[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = -1)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [0, 1[ t=0

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 0)....

[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = -1)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [0, 1[ t=0

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 0)....

[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = -1)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [0, 1[ t=0

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 0)....

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=-1)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 0)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=0, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=0, readable_time_span=[0, 1[, writable_time_span=[1, 1[
reader state=1, writer state=0, end_time=20, read_start_time=0


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=0)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 0) --> [0, 1[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=0, readable_time_span=[0, 1[, writable_time_span=[1, 1[
reader state=-1, writer state=1, end_time=20, read_start_time=0


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 0)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=0, readable_time_span=[1, 1[, writable_time_span=[1, 2[
reader state=0, writer state=1, end_time=20, read_start_time=1


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=0, end=0), 
[frame_shape=(320, 240), required_duration=9, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=1, full=0
total_duration=9
last_write_time=0, readable_time_span=[0, 1[, writable_time_span=[1, 9[
reader state=1, writer state=0, end_time=20, read_start_time=0


[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [1, 2[ t=1

[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 0)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [1, 2[ t=1

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 0) --> [0, 1[

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [1, 2[ t=1

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 0)....

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 1)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=1, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=1, readable_time_span=[1, 2[, writable_time_span=[2, 2[
reader state=1, writer state=0, end_time=20, read_start_time=1


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=1)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 1) --> [1, 2[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=1, readable_time_span=[1, 2[, writable_time_span=[2, 2[
reader state=-1, writer state=1, end_time=20, read_start_time=1


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 1)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=1, readable_time_span=[2, 2[, writable_time_span=[2, 3[
reader state=0, writer state=1, end_time=20, read_start_time=2


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=1, end=0), 
[frame_shape=(320, 240), required_duration=9, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=2, full=0
total_duration=9
last_write_time=1, readable_time_span=[0, 2[, writable_time_span=[2, 9[
reader state=-1, writer state=0, end_time=20, read_start_time=0


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 1)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [2, 3[ t=2

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [2, 3[ t=2

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [2, 3[ t=2

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 2)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=2, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=2, readable_time_span=[2, 3[, writable_time_span=[3, 3[
reader state=1, writer state=0, end_time=20, read_start_time=2


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=2)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 2) --> [2, 3[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=2, readable_time_span=[2, 3[, writable_time_span=[3, 3[
reader state=-1, writer state=1, end_time=20, read_start_time=2


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 2)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=2, readable_time_span=[3, 3[, writable_time_span=[3, 4[
reader state=0, writer state=1, end_time=20, read_start_time=3


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [3, 4[ t=3

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=2, end=0), 
[frame_shape=(320, 240), required_duration=9, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=3, full=0
total_duration=9
last_write_time=2, readable_time_span=[0, 3[, writable_time_span=[3, 9[
reader state=-1, writer state=0, end_time=20, read_start_time=0


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 2)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [3, 4[ t=3

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [3, 4[ t=3

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 3)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=3, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=3, readable_time_span=[3, 4[, writable_time_span=[4, 4[
reader state=1, writer state=0, end_time=20, read_start_time=3


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=3)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 3) --> [3, 4[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=3, readable_time_span=[3, 4[, writable_time_span=[4, 4[
reader state=-1, writer state=1, end_time=20, read_start_time=3


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 3)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=3, readable_time_span=[4, 4[, writable_time_span=[4, 5[
reader state=0, writer state=1, end_time=20, read_start_time=4


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=3, end=0), 
[frame_shape=(320, 240), required_duration=9, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=4, full=0
total_duration=9
last_write_time=3, readable_time_span=[0, 4[, writable_time_span=[4, 9[
reader state=-1, writer state=0, end_time=20, read_start_time=0


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 3)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [4, 5[ t=4

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [4, 5[ t=4

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [4, 5[ t=4

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 4)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=4, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=4, readable_time_span=[4, 5[, writable_time_span=[5, 5[
reader state=1, writer state=0, end_time=20, read_start_time=4


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=4)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 4) --> [4, 5[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=4, readable_time_span=[4, 5[, writable_time_span=[5, 5[
reader state=-1, writer state=1, end_time=20, read_start_time=4


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 4)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=4, readable_time_span=[5, 5[, writable_time_span=[5, 6[
reader state=0, writer state=1, end_time=20, read_start_time=5


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=4, end=0), 
[frame_shape=(320, 240), required_duration=9, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=5, full=0
total_duration=9
last_write_time=4, readable_time_span=[0, 5[, writable_time_span=[5, 9[
reader state=-1, writer state=0, end_time=20, read_start_time=0


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 4)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [5, 6[ t=5

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [5, 6[ t=5

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [5, 6[ t=5

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 5)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=5, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=5, readable_time_span=[5, 6[, writable_time_span=[6, 6[
reader state=1, writer state=0, end_time=20, read_start_time=5


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=5)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 5) --> [5, 6[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=5, readable_time_span=[5, 6[, writable_time_span=[6, 6[
reader state=-1, writer state=1, end_time=20, read_start_time=5


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 5)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=5, readable_time_span=[6, 6[, writable_time_span=[6, 7[
reader state=0, writer state=1, end_time=20, read_start_time=6


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=5, end=0), 
[frame_shape=(320, 240), required_duration=9, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=6, full=0
total_duration=9
last_write_time=5, readable_time_span=[0, 6[, writable_time_span=[6, 9[
reader state=-1, writer state=0, end_time=20, read_start_time=0


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 5)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [6, 7[ t=6

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [6, 7[ t=6

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 0) --> [0, 6[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=6, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=6
last_write_time=5, readable_time_span=[0, 6[, writable_time_span=[6, 6[
reader state=-1, writer state=1, end_time=20, read_start_time=0


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 0)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=6, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=1, write_position=0, full=0
total_duration=6
last_write_time=5, readable_time_span=[1, 6[, writable_time_span=[6, 7[
reader state=0, writer state=1, end_time=20, read_start_time=1


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=0, end=0), 
[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
cannot lock mutex for debug_print



[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 0)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [6, 7[ t=6

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [1, 2[ t=1

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 6)....

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 1)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=6, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=6, readable_time_span=[6, 7[, writable_time_span=[7, 7[
reader state=1, writer state=0, end_time=20, read_start_time=6


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=6)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 6) --> [6, 7[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=6, readable_time_span=[6, 7[, writable_time_span=[7, 7[
reader state=-1, writer state=1, end_time=20, read_start_time=6


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 6)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=6, readable_time_span=[7, 7[, writable_time_span=[7, 8[
reader state=0, writer state=1, end_time=20, read_start_time=7


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=6, end=0), 
[frame_shape=(320, 240), required_duration=9, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=7, full=0
total_duration=9
last_write_time=6, readable_time_span=[0, 7[, writable_time_span=[7, 9[
reader state=-1, writer state=0, end_time=20, read_start_time=0


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 6)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [7, 8[ t=7

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [7, 8[ t=7

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 1) --> [1, 7[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=6, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=1, write_position=1, full=1
total_duration=6
last_write_time=6, readable_time_span=[1, 7[, writable_time_span=[7, 7[
reader state=-1, writer state=1, end_time=20, read_start_time=1


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 1)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=6, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=2, write_position=1, full=0
total_duration=6
last_write_time=6, readable_time_span=[2, 7[, writable_time_span=[7, 8[
reader state=0, writer state=1, end_time=20, read_start_time=2


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=1, end=0), 
[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
cannot lock mutex for debug_print



[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 1)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [7, 8[ t=7

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [2, 3[ t=2

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 7)....

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 2)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=7, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=7, readable_time_span=[7, 8[, writable_time_span=[8, 8[
reader state=1, writer state=0, end_time=20, read_start_time=7


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=7)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 7) --> [7, 8[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=7, readable_time_span=[7, 8[, writable_time_span=[8, 8[
reader state=-1, writer state=1, end_time=20, read_start_time=7


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 7)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=7, readable_time_span=[8, 8[, writable_time_span=[8, 9[
reader state=0, writer state=1, end_time=20, read_start_time=8


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=7, end=0), 
[frame_shape=(320, 240), required_duration=9, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=8, full=0
total_duration=9
last_write_time=7, readable_time_span=[0, 8[, writable_time_span=[8, 9[
reader state=-1, writer state=0, end_time=20, read_start_time=0


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 7)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [8, 9[ t=8

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [8, 9[ t=8

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 2) --> [2, 8[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=6, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=2, write_position=2, full=1
total_duration=6
last_write_time=7, readable_time_span=[2, 8[, writable_time_span=[8, 8[
reader state=-1, writer state=1, end_time=20, read_start_time=2


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 2)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=6, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=3, write_position=2, full=0
total_duration=6
last_write_time=7, readable_time_span=[3, 8[, writable_time_span=[8, 9[
reader state=0, writer state=1, end_time=20, read_start_time=3


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [8, 9[ t=8

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 8)....

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=2, end=0), 
[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=3, full=0
total_duration=4
last_write_time=2, readable_time_span=[0, 3[, writable_time_span=[3, 4[
reader state=4, writer state=0, end_time=20, read_start_time=0


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 2)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [3, 4[ t=3

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 3)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=8, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=8, readable_time_span=[8, 9[, writable_time_span=[9, 9[
reader state=1, writer state=0, end_time=20, read_start_time=8


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=8)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 8) --> [8, 9[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=8, readable_time_span=[8, 9[, writable_time_span=[9, 9[
reader state=-1, writer state=1, end_time=20, read_start_time=8


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 8)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=8, readable_time_span=[9, 9[, writable_time_span=[9, 10[
reader state=0, writer state=1, end_time=20, read_start_time=9


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=8, end=0), 
[frame_shape=(320, 240), required_duration=9, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=9
last_write_time=8, readable_time_span=[0, 9[, writable_time_span=[9, 9[
reader state=-1, writer state=0, end_time=20, read_start_time=0


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 8)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [9, 10[ t=9

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 3) --> [3, 9[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=6, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=3, write_position=3, full=1
total_duration=6
last_write_time=8, readable_time_span=[3, 9[, writable_time_span=[9, 9[
reader state=-1, writer state=0, end_time=20, read_start_time=3


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 3)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=6, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=4, write_position=3, full=0
total_duration=6
last_write_time=8, readable_time_span=[4, 9[, writable_time_span=[9, 10[
reader state=0, writer state=0, end_time=20, read_start_time=4


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=3, end=0), 
[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=4
last_write_time=3, readable_time_span=[0, 4[, writable_time_span=[4, 4[
reader state=4, writer state=0, end_time=20, read_start_time=0


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 3)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 0) --> [0, 4[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=4
last_write_time=3, readable_time_span=[0, 4[, writable_time_span=[4, 4[
reader state=-1, writer state=1, end_time=20, read_start_time=0


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 0)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=1, write_position=0, full=0
total_duration=4
last_write_time=3, readable_time_span=[1, 4[, writable_time_span=[4, 5[
reader state=0, writer state=1, end_time=20, read_start_time=1


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=0, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
cannot lock mutex for debug_print



[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 0)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [4, 5[ t=4

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 0) --> [0, 1[

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 4)....

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=9, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=9
last_write_time=8, readable_time_span=[0, 9[, writable_time_span=[9, 9[
reader state=-1, writer state=1, end_time=20, read_start_time=0


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 0)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=9, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=1, write_position=0, full=0
total_duration=9
last_write_time=8, readable_time_span=[1, 9[, writable_time_span=[9, 10[
reader state=0, writer state=1, end_time=20, read_start_time=1


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 0)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=0, readable_time_span=[1, 1[, writable_time_span=[1, 2[
reader state=0, writer state=-1, end_time=20, read_start_time=1


[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [9, 10[ t=9

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [1, 2[ t=1

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 1)....

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=0, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=0, readable_time_span=[0, 1[, writable_time_span=[1, 1[
reader state=1, writer state=0, end_time=20, read_start_time=0


[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [9, 10[ t=9

[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 0)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 9)....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 0) --> [0, 1[

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 0)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=0, readable_time_span=[1, 1[, writable_time_span=[1, 2[
reader state=0, writer state=1, end_time=20, read_start_time=1


[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=0)

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=0)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 1)....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [1, 2[ t=1

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 1)....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 1) --> [1, 2[

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 1)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=9, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=9, readable_time_span=[9, 10[, writable_time_span=[10, 10[
reader state=1, writer state=0, end_time=20, read_start_time=9


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=9)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 9) --> [9, 10[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=9, readable_time_span=[9, 10[, writable_time_span=[10, 10[
reader state=-1, writer state=1, end_time=20, read_start_time=9


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 9)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=9, readable_time_span=[10, 10[, writable_time_span=[10, 11[
reader state=0, writer state=1, end_time=20, read_start_time=10


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=9, end=0), 
[frame_shape=(320, 240), required_duration=9, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=1, write_position=1, full=1
total_duration=9
last_write_time=9, readable_time_span=[1, 10[, writable_time_span=[10, 10[
reader state=-1, writer state=0, end_time=20, read_start_time=1


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 9)

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [10, 11[ t=10

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 4) --> [4, 10[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=6, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=4, write_position=4, full=1
total_duration=6
last_write_time=9, readable_time_span=[4, 10[, writable_time_span=[10, 10[
reader state=-1, writer state=0, end_time=20, read_start_time=4


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 4)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=6, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=5, write_position=4, full=0
total_duration=6
last_write_time=9, readable_time_span=[5, 10[, writable_time_span=[10, 11[
reader state=0, writer state=0, end_time=20, read_start_time=5


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=4, end=0), 
[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=1, write_position=1, full=1
total_duration=4
last_write_time=4, readable_time_span=[1, 5[, writable_time_span=[5, 5[
reader state=4, writer state=0, end_time=20, read_start_time=1


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 4)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 1) --> [1, 5[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=1, write_position=1, full=1
total_duration=4
last_write_time=4, readable_time_span=[1, 5[, writable_time_span=[5, 5[
reader state=-1, writer state=1, end_time=20, read_start_time=1


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 1)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=2, write_position=1, full=0
total_duration=4
last_write_time=4, readable_time_span=[2, 5[, writable_time_span=[5, 6[
reader state=0, writer state=1, end_time=20, read_start_time=2


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [5, 6[ t=5

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 5)....

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=1, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
cannot lock mutex for debug_print



[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 1)

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 1) --> [1, 2[

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=9, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=1, write_position=1, full=1
total_duration=9
last_write_time=9, readable_time_span=[1, 10[, writable_time_span=[10, 10[
reader state=-1, writer state=1, end_time=20, read_start_time=1


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 1)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=9, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=2, write_position=1, full=0
total_duration=9
last_write_time=9, readable_time_span=[2, 10[, writable_time_span=[10, 11[
reader state=0, writer state=1, end_time=20, read_start_time=2


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 1)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
cannot lock mutex for debug_print



[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=1, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=1, readable_time_span=[1, 2[, writable_time_span=[2, 2[
reader state=1, writer state=0, end_time=20, read_start_time=1


[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [2, 3[ t=2

[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 1)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [10, 11[ t=10

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 2)....

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 1) --> [1, 2[

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [10, 11[ t=10

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 10)....

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 1)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=1, readable_time_span=[2, 2[, writable_time_span=[2, 3[
reader state=0, writer state=1, end_time=20, read_start_time=2


[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=1)

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=1)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 2)....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [2, 3[ t=2

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 2)....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 2) --> [2, 3[

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 2)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=10, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=10, readable_time_span=[10, 11[, writable_time_span=[11, 11[
reader state=1, writer state=0, end_time=20, read_start_time=10


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=10)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 10) --> [10, 11[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=10, readable_time_span=[10, 11[, writable_time_span=[11, 11[
reader state=-1, writer state=1, end_time=20, read_start_time=10


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 10)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=10, readable_time_span=[11, 11[, writable_time_span=[11, 12[
reader state=0, writer state=1, end_time=20, read_start_time=11


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=10, end=0), 
[frame_shape=(320, 240), required_duration=9, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=2, write_position=2, full=1
total_duration=9
last_write_time=10, readable_time_span=[2, 11[, writable_time_span=[11, 11[
reader state=-1, writer state=0, end_time=20, read_start_time=2


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 10)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [11, 12[ t=11

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 5) --> [5, 11[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=6, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=5, write_position=5, full=1
total_duration=6
last_write_time=10, readable_time_span=[5, 11[, writable_time_span=[11, 11[
reader state=-1, writer state=0, end_time=20, read_start_time=5


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 5)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=6, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=5, full=0
total_duration=6
last_write_time=10, readable_time_span=[6, 11[, writable_time_span=[11, 12[
reader state=0, writer state=0, end_time=20, read_start_time=6


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=5, end=0), 
[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=2, write_position=2, full=1
total_duration=4
last_write_time=5, readable_time_span=[2, 6[, writable_time_span=[6, 6[
reader state=-1, writer state=0, end_time=20, read_start_time=2


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 5)

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 2) --> [2, 6[

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=2, write_position=2, full=1
total_duration=4
last_write_time=5, readable_time_span=[2, 6[, writable_time_span=[6, 6[
reader state=-1, writer state=1, end_time=20, read_start_time=2


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 2)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=3, write_position=2, full=0
total_duration=4
last_write_time=5, readable_time_span=[3, 6[, writable_time_span=[6, 7[
reader state=0, writer state=1, end_time=20, read_start_time=3


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=2, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
cannot lock mutex for debug_print



[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 2)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [6, 7[ t=6

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 2) --> [2, 3[

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 6)....

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=9, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=2, write_position=2, full=1
total_duration=9
last_write_time=10, readable_time_span=[2, 11[, writable_time_span=[11, 11[
reader state=-1, writer state=1, end_time=20, read_start_time=2


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 2)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=9, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=3, write_position=2, full=0
total_duration=9
last_write_time=10, readable_time_span=[3, 11[, writable_time_span=[11, 12[
reader state=0, writer state=1, end_time=20, read_start_time=3


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 2)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
cannot lock mutex for debug_print



[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=2, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=2, readable_time_span=[2, 3[, writable_time_span=[3, 3[
reader state=1, writer state=0, end_time=20, read_start_time=2


[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [11, 12[ t=11

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 2) --> [2, 3[

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [3, 4[ t=3

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 2)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 3)....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [11, 12[ t=11

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=2, readable_time_span=[3, 3[, writable_time_span=[3, 4[
reader state=0, writer state=0, end_time=20, read_start_time=3


[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 11)....

[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=2)

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=2)

[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 2)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 3)....

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [3, 4[ t=3

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 3)....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 3) --> [3, 4[

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 3)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=11, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=11, readable_time_span=[11, 12[, writable_time_span=[12, 12[
reader state=1, writer state=0, end_time=20, read_start_time=11


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=11)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 11) --> [11, 12[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=11, readable_time_span=[11, 12[, writable_time_span=[12, 12[
reader state=-1, writer state=1, end_time=20, read_start_time=11


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 11)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=11, readable_time_span=[12, 12[, writable_time_span=[12, 13[
reader state=0, writer state=1, end_time=20, read_start_time=12


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=11, end=0), 
[frame_shape=(320, 240), required_duration=9, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=3, write_position=3, full=1
total_duration=9
last_write_time=11, readable_time_span=[3, 12[, writable_time_span=[12, 12[
reader state=-1, writer state=0, end_time=20, read_start_time=3


[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [12, 13[ t=12

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 6) --> [6, 12[

[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 11)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=6, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=6
last_write_time=11, readable_time_span=[6, 12[, writable_time_span=[12, 12[
reader state=-1, writer state=0, end_time=20, read_start_time=6


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 6)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=6, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=1, write_position=0, full=0
total_duration=6
last_write_time=11, readable_time_span=[7, 12[, writable_time_span=[12, 13[
reader state=0, writer state=0, end_time=20, read_start_time=7


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=6, end=0), 
[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=3, write_position=3, full=1
total_duration=4
last_write_time=6, readable_time_span=[3, 7[, writable_time_span=[7, 7[
reader state=4, writer state=0, end_time=20, read_start_time=3


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 6)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 3) --> [3, 7[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=3, write_position=3, full=1
total_duration=4
last_write_time=6, readable_time_span=[3, 7[, writable_time_span=[7, 7[
reader state=-1, writer state=1, end_time=20, read_start_time=3


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 3)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=3, full=0
total_duration=4
last_write_time=6, readable_time_span=[4, 7[, writable_time_span=[7, 8[
reader state=0, writer state=1, end_time=20, read_start_time=4


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=3, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
cannot lock mutex for debug_print



[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 3)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [7, 8[ t=7

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 3) --> [3, 4[

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 7)....

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=9, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=3, write_position=3, full=1
total_duration=9
last_write_time=11, readable_time_span=[3, 12[, writable_time_span=[12, 12[
reader state=-1, writer state=1, end_time=20, read_start_time=3


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 3)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=9, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=4, write_position=3, full=0
total_duration=9
last_write_time=11, readable_time_span=[4, 12[, writable_time_span=[12, 13[
reader state=0, writer state=1, end_time=20, read_start_time=4


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 3)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=3, readable_time_span=[4, 4[, writable_time_span=[4, 5[
reader state=0, writer state=1, end_time=20, read_start_time=4


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=3, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
cannot lock mutex for debug_print



[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 3)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [12, 13[ t=12

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 3) --> [3, 4[

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [4, 5[ t=4

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 3)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 4)....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [12, 13[ t=12

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=3, readable_time_span=[4, 4[, writable_time_span=[4, 5[
reader state=0, writer state=1, end_time=20, read_start_time=4


[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [4, 5[ t=4

[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=3)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 12)....

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 4)....

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=3)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 4)....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 4) --> [4, 5[

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 4)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=12, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=12, readable_time_span=[12, 13[, writable_time_span=[13, 13[
reader state=1, writer state=0, end_time=20, read_start_time=12


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=12)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 12) --> [12, 13[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=12, readable_time_span=[12, 13[, writable_time_span=[13, 13[
reader state=-1, writer state=1, end_time=20, read_start_time=12


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 12)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=12, readable_time_span=[13, 13[, writable_time_span=[13, 14[
reader state=0, writer state=1, end_time=20, read_start_time=13


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=12, end=0), 
[frame_shape=(320, 240), required_duration=9, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=4, write_position=4, full=1
total_duration=9
last_write_time=12, readable_time_span=[4, 13[, writable_time_span=[13, 13[
reader state=-1, writer state=0, end_time=20, read_start_time=4


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 12)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [13, 14[ t=13

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 7) --> [7, 13[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=6, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=1, write_position=1, full=1
total_duration=6
last_write_time=12, readable_time_span=[7, 13[, writable_time_span=[13, 13[
reader state=-1, writer state=0, end_time=20, read_start_time=7


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 7)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=6, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=2, write_position=1, full=0
total_duration=6
last_write_time=12, readable_time_span=[8, 13[, writable_time_span=[13, 14[
reader state=0, writer state=0, end_time=20, read_start_time=8


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=7, end=0), 
[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=4
last_write_time=7, readable_time_span=[4, 8[, writable_time_span=[8, 8[
reader state=4, writer state=0, end_time=20, read_start_time=4


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 7)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 4) --> [4, 8[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=4
last_write_time=7, readable_time_span=[4, 8[, writable_time_span=[8, 8[
reader state=-1, writer state=1, end_time=20, read_start_time=4


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 4)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=1, write_position=0, full=0
total_duration=4
last_write_time=7, readable_time_span=[5, 8[, writable_time_span=[8, 9[
reader state=0, writer state=-1, end_time=20, read_start_time=5


[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [8, 9[ t=8

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 8)....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=4, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=4, readable_time_span=[4, 5[, writable_time_span=[5, 5[
reader state=-1, writer state=0, end_time=20, read_start_time=4


[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 4) --> [4, 5[

[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 4)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=9, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=4, write_position=4, full=1
total_duration=9
last_write_time=12, readable_time_span=[4, 13[, writable_time_span=[13, 13[
reader state=-1, writer state=1, end_time=20, read_start_time=4


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 4)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=9, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=5, write_position=4, full=0
total_duration=9
last_write_time=12, readable_time_span=[5, 13[, writable_time_span=[13, 14[
reader state=0, writer state=1, end_time=20, read_start_time=5


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 4)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
cannot lock mutex for debug_print



[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=4, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=4, readable_time_span=[4, 5[, writable_time_span=[5, 5[
reader state=1, writer state=0, end_time=20, read_start_time=4


[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [13, 14[ t=13

[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 4)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [5, 6[ t=5

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 5)....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [13, 14[ t=13

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 4) --> [4, 5[

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 13)....

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 4)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=4, readable_time_span=[5, 5[, writable_time_span=[5, 6[
reader state=0, writer state=1, end_time=20, read_start_time=5


[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=4)

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=4)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 5)....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [5, 6[ t=5

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 5)....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 5) --> [5, 6[

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 5)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=13, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=13, readable_time_span=[13, 14[, writable_time_span=[14, 14[
reader state=1, writer state=0, end_time=20, read_start_time=13


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=13)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 13) --> [13, 14[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=13, readable_time_span=[13, 14[, writable_time_span=[14, 14[
reader state=-1, writer state=1, end_time=20, read_start_time=13


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 13)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=13, readable_time_span=[14, 14[, writable_time_span=[14, 15[
reader state=0, writer state=1, end_time=20, read_start_time=14


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=13, end=0), 
[frame_shape=(320, 240), required_duration=9, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=5, write_position=5, full=1
total_duration=9
last_write_time=13, readable_time_span=[5, 14[, writable_time_span=[14, 14[
reader state=-1, writer state=0, end_time=20, read_start_time=5


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 13)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [14, 15[ t=14

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 8) --> [8, 14[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=6, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=2, write_position=2, full=1
total_duration=6
last_write_time=13, readable_time_span=[8, 14[, writable_time_span=[14, 14[
reader state=-1, writer state=0, end_time=20, read_start_time=8


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 8)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=6, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=3, write_position=2, full=0
total_duration=6
last_write_time=13, readable_time_span=[9, 14[, writable_time_span=[14, 15[
reader state=0, writer state=0, end_time=20, read_start_time=9


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=8, end=0), 
[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=1, write_position=1, full=1
total_duration=4
last_write_time=8, readable_time_span=[5, 9[, writable_time_span=[9, 9[
reader state=4, writer state=0, end_time=20, read_start_time=5


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 8)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 5) --> [5, 9[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=1, write_position=1, full=1
total_duration=4
last_write_time=8, readable_time_span=[5, 9[, writable_time_span=[9, 9[
reader state=-1, writer state=1, end_time=20, read_start_time=5


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 5)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=2, write_position=1, full=0
total_duration=4
last_write_time=8, readable_time_span=[6, 9[, writable_time_span=[9, 10[
reader state=0, writer state=1, end_time=20, read_start_time=6


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=5, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
cannot lock mutex for debug_print



[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 5)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [9, 10[ t=9

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 5) --> [5, 6[

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 9)....

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=9, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=5, write_position=5, full=1
total_duration=9
last_write_time=13, readable_time_span=[5, 14[, writable_time_span=[14, 14[
reader state=-1, writer state=1, end_time=20, read_start_time=5


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 5)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=9, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=6, write_position=5, full=0
total_duration=9
last_write_time=13, readable_time_span=[6, 14[, writable_time_span=[14, 15[
reader state=0, writer state=1, end_time=20, read_start_time=6


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 5)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
cannot lock mutex for debug_print



[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [14, 15[ t=14

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [6, 7[ t=6

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 6)....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [14, 15[ t=14

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 14)....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=5, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=5, readable_time_span=[5, 6[, writable_time_span=[6, 6[
reader state=1, writer state=0, end_time=20, read_start_time=5


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 5)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 5) --> [5, 6[

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 5)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=5, readable_time_span=[6, 6[, writable_time_span=[6, 7[
reader state=0, writer state=1, end_time=20, read_start_time=6


[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=5)

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=5)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 6)....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [6, 7[ t=6

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 6)....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 6) --> [6, 7[

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 6)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=14, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=14, readable_time_span=[14, 15[, writable_time_span=[15, 15[
reader state=1, writer state=0, end_time=20, read_start_time=14


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=14)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 14) --> [14, 15[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=14, readable_time_span=[14, 15[, writable_time_span=[15, 15[
reader state=-1, writer state=1, end_time=20, read_start_time=14


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 14)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=14, readable_time_span=[15, 15[, writable_time_span=[15, 16[
reader state=0, writer state=1, end_time=20, read_start_time=15


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [15, 16[ t=15

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=14, end=0), 
[frame_shape=(320, 240), required_duration=9, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=6, write_position=6, full=1
total_duration=9
last_write_time=14, readable_time_span=[6, 15[, writable_time_span=[15, 15[
reader state=-1, writer state=0, end_time=20, read_start_time=6


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 14)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 9) --> [9, 15[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=6, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=3, write_position=3, full=1
total_duration=6
last_write_time=14, readable_time_span=[9, 15[, writable_time_span=[15, 15[
reader state=-1, writer state=0, end_time=20, read_start_time=9


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 9)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=6, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=4, write_position=3, full=0
total_duration=6
last_write_time=14, readable_time_span=[10, 15[, writable_time_span=[15, 16[
reader state=0, writer state=0, end_time=20, read_start_time=10


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=9, end=0), 
[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=2, write_position=2, full=1
total_duration=4
last_write_time=9, readable_time_span=[6, 10[, writable_time_span=[10, 10[
reader state=4, writer state=0, end_time=20, read_start_time=6


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 9)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 6) --> [6, 10[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=2, write_position=2, full=1
total_duration=4
last_write_time=9, readable_time_span=[6, 10[, writable_time_span=[10, 10[
reader state=-1, writer state=1, end_time=20, read_start_time=6


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 6)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=3, write_position=2, full=0
total_duration=4
last_write_time=9, readable_time_span=[7, 10[, writable_time_span=[10, 11[
reader state=0, writer state=1, end_time=20, read_start_time=7


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=6, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
cannot lock mutex for debug_print



[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 6)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [10, 11[ t=10

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 6) --> [6, 7[

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 10)....

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=9, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=6, write_position=6, full=1
total_duration=9
last_write_time=14, readable_time_span=[6, 15[, writable_time_span=[15, 15[
reader state=-1, writer state=1, end_time=20, read_start_time=6


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 6)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=9, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=7, write_position=6, full=0
total_duration=9
last_write_time=14, readable_time_span=[7, 15[, writable_time_span=[15, 16[
reader state=0, writer state=1, end_time=20, read_start_time=7


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 6)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
cannot lock mutex for debug_print



[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=6, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=6, readable_time_span=[6, 7[, writable_time_span=[7, 7[
reader state=1, writer state=0, end_time=20, read_start_time=6


[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [15, 16[ t=15

[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 6)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [7, 8[ t=7

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 7)....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [15, 16[ t=15

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 6) --> [6, 7[

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 15)....

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 6)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=6, readable_time_span=[7, 7[, writable_time_span=[7, 8[
reader state=0, writer state=1, end_time=20, read_start_time=7


[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=6)

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=6)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 7)....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [7, 8[ t=7

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 7)....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 7) --> [7, 8[

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 7)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=15, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=15, readable_time_span=[15, 16[, writable_time_span=[16, 16[
reader state=1, writer state=0, end_time=20, read_start_time=15


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=15)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 15) --> [15, 16[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=15, readable_time_span=[15, 16[, writable_time_span=[16, 16[
reader state=-1, writer state=1, end_time=20, read_start_time=15


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 15)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=15, readable_time_span=[16, 16[, writable_time_span=[16, 17[
reader state=0, writer state=1, end_time=20, read_start_time=16


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=15, end=0), 
[frame_shape=(320, 240), required_duration=9, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=7, write_position=7, full=1
total_duration=9
last_write_time=15, readable_time_span=[7, 16[, writable_time_span=[16, 16[
reader state=-1, writer state=0, end_time=20, read_start_time=7


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 15)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [16, 17[ t=16

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 10) --> [10, 16[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=6, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=4, write_position=4, full=1
total_duration=6
last_write_time=15, readable_time_span=[10, 16[, writable_time_span=[16, 16[
reader state=-1, writer state=0, end_time=20, read_start_time=10


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 10)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=6, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=5, write_position=4, full=0
total_duration=6
last_write_time=15, readable_time_span=[11, 16[, writable_time_span=[16, 17[
reader state=0, writer state=0, end_time=20, read_start_time=11


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=10, end=0), 
[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=3, write_position=3, full=1
total_duration=4
last_write_time=10, readable_time_span=[7, 11[, writable_time_span=[11, 11[
reader state=4, writer state=0, end_time=20, read_start_time=7


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 10)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 7) --> [7, 11[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=3, write_position=3, full=1
total_duration=4
last_write_time=10, readable_time_span=[7, 11[, writable_time_span=[11, 11[
reader state=-1, writer state=1, end_time=20, read_start_time=7


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 7)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=3, full=0
total_duration=4
last_write_time=10, readable_time_span=[8, 11[, writable_time_span=[11, 12[
reader state=0, writer state=1, end_time=20, read_start_time=8


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=7, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
cannot lock mutex for debug_print



[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 7)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [11, 12[ t=11

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 7) --> [7, 8[

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 11)....

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=9, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=7, write_position=7, full=1
total_duration=9
last_write_time=15, readable_time_span=[7, 16[, writable_time_span=[16, 16[
reader state=-1, writer state=1, end_time=20, read_start_time=7


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 7)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=9, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=8, write_position=7, full=0
total_duration=9
last_write_time=15, readable_time_span=[8, 16[, writable_time_span=[16, 17[
reader state=0, writer state=1, end_time=20, read_start_time=8


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 7)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
cannot lock mutex for debug_print



[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=7, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=7, readable_time_span=[7, 8[, writable_time_span=[8, 8[
reader state=1, writer state=0, end_time=20, read_start_time=7


[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [16, 17[ t=16

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [8, 9[ t=8

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 7) --> [7, 8[

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 8)....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [16, 17[ t=16

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 16)....

[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 7)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [8, 9[ t=8

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 8)....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 8) --> [8, 9[

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 8)....

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 7)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=7, readable_time_span=[8, 8[, writable_time_span=[8, 9[
reader state=0, writer state=-1, end_time=20, read_start_time=8


[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=7)

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=7)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 8)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=16, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=16, readable_time_span=[16, 17[, writable_time_span=[17, 17[
reader state=1, writer state=0, end_time=20, read_start_time=16


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=16)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 16) --> [16, 17[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=16, readable_time_span=[16, 17[, writable_time_span=[17, 17[
reader state=-1, writer state=1, end_time=20, read_start_time=16


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 16)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=16, readable_time_span=[17, 17[, writable_time_span=[17, 18[
reader state=0, writer state=1, end_time=20, read_start_time=17


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=16, end=0), 
[frame_shape=(320, 240), required_duration=9, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=8, write_position=8, full=1
total_duration=9
last_write_time=16, readable_time_span=[8, 17[, writable_time_span=[17, 17[
reader state=-1, writer state=0, end_time=20, read_start_time=8


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 16)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [17, 18[ t=17

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 11) --> [11, 17[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=6, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=5, write_position=5, full=1
total_duration=6
last_write_time=16, readable_time_span=[11, 17[, writable_time_span=[17, 17[
reader state=-1, writer state=0, end_time=20, read_start_time=11


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 11)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=6, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=5, full=0
total_duration=6
last_write_time=16, readable_time_span=[12, 17[, writable_time_span=[17, 18[
reader state=0, writer state=0, end_time=20, read_start_time=12


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=11, end=0), 
[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=4
last_write_time=11, readable_time_span=[8, 12[, writable_time_span=[12, 12[
reader state=4, writer state=0, end_time=20, read_start_time=8


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 11)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 8) --> [8, 12[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=4
last_write_time=11, readable_time_span=[8, 12[, writable_time_span=[12, 12[
reader state=-1, writer state=1, end_time=20, read_start_time=8


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 8)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=1, write_position=0, full=0
total_duration=4
last_write_time=11, readable_time_span=[9, 12[, writable_time_span=[12, 13[
reader state=0, writer state=1, end_time=20, read_start_time=9


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=8, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
cannot lock mutex for debug_print



[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 8)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [12, 13[ t=12

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 8) --> [8, 9[

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 12)....

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=9, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=8, write_position=8, full=1
total_duration=9
last_write_time=16, readable_time_span=[8, 17[, writable_time_span=[17, 17[
reader state=-1, writer state=1, end_time=20, read_start_time=8


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 8)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=9, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=8, full=0
total_duration=9
last_write_time=16, readable_time_span=[9, 17[, writable_time_span=[17, 18[
reader state=0, writer state=1, end_time=20, read_start_time=9


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 8)

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [17, 18[ t=17

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=8, readable_time_span=[9, 9[, writable_time_span=[9, 10[
reader state=0, writer state=-1, end_time=20, read_start_time=9


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [9, 10[ t=9

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 9)....

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=8, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
cannot lock mutex for debug_print



[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [17, 18[ t=17

[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 8)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 17)....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 8) --> [8, 9[

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 8)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=8, readable_time_span=[9, 9[, writable_time_span=[9, 10[
reader state=0, writer state=1, end_time=20, read_start_time=9


[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=8)

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [9, 10[ t=9

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=8)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 9)....

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 9)....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 9) --> [9, 10[

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 9)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=17, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=17, readable_time_span=[17, 18[, writable_time_span=[18, 18[
reader state=1, writer state=0, end_time=20, read_start_time=17


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=17)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 17) --> [17, 18[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=17, readable_time_span=[17, 18[, writable_time_span=[18, 18[
reader state=-1, writer state=1, end_time=20, read_start_time=17


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 17)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
cannot lock mutex for debug_print



[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [18, 19[ t=18

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=17, end=0), 
[frame_shape=(320, 240), required_duration=9, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=9
last_write_time=17, readable_time_span=[9, 18[, writable_time_span=[18, 18[
reader state=-1, writer state=0, end_time=20, read_start_time=9


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 17)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 12) --> [12, 18[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=6, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=6
last_write_time=17, readable_time_span=[12, 18[, writable_time_span=[18, 18[
reader state=-1, writer state=0, end_time=20, read_start_time=12


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 12)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=6, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=1, write_position=0, full=0
total_duration=6
last_write_time=17, readable_time_span=[13, 18[, writable_time_span=[18, 19[
reader state=0, writer state=0, end_time=20, read_start_time=13


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=12, end=0), 
[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
cannot lock mutex for debug_print



[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 12)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 9) --> [9, 13[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=1, write_position=1, full=1
total_duration=4
last_write_time=12, readable_time_span=[9, 13[, writable_time_span=[13, 13[
reader state=-1, writer state=1, end_time=20, read_start_time=9


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 9)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=2, write_position=1, full=0
total_duration=4
last_write_time=12, readable_time_span=[10, 13[, writable_time_span=[13, 14[
reader state=0, writer state=1, end_time=20, read_start_time=10


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=9, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
cannot lock mutex for debug_print



[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 9) --> [9, 10[

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [13, 14[ t=13

[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 9)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 13)....

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=9, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=9
last_write_time=17, readable_time_span=[9, 18[, writable_time_span=[18, 18[
reader state=-1, writer state=1, end_time=20, read_start_time=9


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 9)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=9, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=1, write_position=0, full=0
total_duration=9
last_write_time=17, readable_time_span=[10, 18[, writable_time_span=[18, 19[
reader state=0, writer state=1, end_time=20, read_start_time=10


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 9)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
cannot lock mutex for debug_print



[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=9, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=9, readable_time_span=[9, 10[, writable_time_span=[10, 10[
reader state=1, writer state=0, end_time=20, read_start_time=9


[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [18, 19[ t=18

[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 9)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [10, 11[ t=10

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 10)....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [18, 19[ t=18

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 9) --> [9, 10[

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 18)....

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 9)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=9, readable_time_span=[10, 10[, writable_time_span=[10, 11[
reader state=0, writer state=1, end_time=20, read_start_time=10


[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=9)

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=9)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 10)....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [10, 11[ t=10

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 10)....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 10) --> [10, 11[

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 10)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=18, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
cannot lock mutex for debug_print



[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=18)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 18) --> [18, 19[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=18, readable_time_span=[18, 19[, writable_time_span=[19, 19[
reader state=-1, writer state=1, end_time=20, read_start_time=18


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 18)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=18, readable_time_span=[19, 19[, writable_time_span=[19, 20[
reader state=0, writer state=1, end_time=20, read_start_time=19


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=18, end=0), 
[frame_shape=(320, 240), required_duration=9, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=1, write_position=1, full=1
total_duration=9
last_write_time=18, readable_time_span=[10, 19[, writable_time_span=[19, 19[
reader state=-1, writer state=0, end_time=20, read_start_time=10


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 18)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [19, 20[ t=19

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 13) --> [13, 19[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=6, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=1, write_position=1, full=1
total_duration=6
last_write_time=18, readable_time_span=[13, 19[, writable_time_span=[19, 19[
reader state=-1, writer state=0, end_time=20, read_start_time=13


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 13)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=6, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=2, write_position=1, full=0
total_duration=6
last_write_time=18, readable_time_span=[14, 19[, writable_time_span=[19, 20[
reader state=0, writer state=0, end_time=20, read_start_time=14


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=13, end=0), 
[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
cannot lock mutex for debug_print



[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 13)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 10) --> [10, 14[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=2, write_position=2, full=1
total_duration=4
last_write_time=13, readable_time_span=[10, 14[, writable_time_span=[14, 14[
reader state=-1, writer state=1, end_time=20, read_start_time=10


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 10)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=3, write_position=2, full=0
total_duration=4
last_write_time=13, readable_time_span=[11, 14[, writable_time_span=[14, 15[
reader state=0, writer state=1, end_time=20, read_start_time=11


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=10, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
cannot lock mutex for debug_print



[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 10)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [14, 15[ t=14

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 10) --> [10, 11[

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 14)....

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=9, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=1, write_position=1, full=1
total_duration=9
last_write_time=18, readable_time_span=[10, 19[, writable_time_span=[19, 19[
reader state=-1, writer state=1, end_time=20, read_start_time=10


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 10)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=9, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=2, write_position=1, full=0
total_duration=9
last_write_time=18, readable_time_span=[11, 19[, writable_time_span=[19, 20[
reader state=0, writer state=1, end_time=20, read_start_time=11


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 10)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
cannot lock mutex for debug_print



[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=10, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=10, readable_time_span=[10, 11[, writable_time_span=[11, 11[
reader state=1, writer state=0, end_time=20, read_start_time=10


[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [19, 20[ t=19

[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 10)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [11, 12[ t=11

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 11)....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [19, 20[ t=19

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 10) --> [10, 11[

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 10)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=10, readable_time_span=[11, 11[, writable_time_span=[11, 12[
reader state=0, writer state=1, end_time=20, read_start_time=11


[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=10)

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=10)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 19)....

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 11)....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [11, 12[ t=11

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 11)....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 11) --> [11, 12[

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 11)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=19, end=1), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=19, readable_time_span=[19, 20[, writable_time_span=[20, 20[
reader state=1, writer state=0, end_time=20, read_start_time=19


[src/graph/media_source_node.cc:14, thread_main_]
source:: ended

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 19) --> [19, 20[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=19, readable_time_span=[19, 20[, writable_time_span=[20, 20[
reader state=-1, writer state=0, end_time=20, read_start_time=19


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 19)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=1 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=19, readable_time_span=[20, 20[, writable_time_span=[20, 21[
reader state=0, writer state=0, end_time=20, read_start_time=20


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=19, end=1), 
[frame_shape=(320, 240), required_duration=9, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=2, write_position=2, full=1
total_duration=9
last_write_time=19, readable_time_span=[11, 20[, writable_time_span=[20, 20[
reader state=-1, writer state=0, end_time=20, read_start_time=11


[src/graph/media_node.cc:14, thread_main_]
node:: ended

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 14) --> [14, 20[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=6, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=2, write_position=2, full=1
total_duration=6
last_write_time=19, readable_time_span=[14, 20[, writable_time_span=[20, 20[
reader state=-1, writer state=0, end_time=20, read_start_time=14


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 14)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=6, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=3, write_position=2, full=0
total_duration=6
last_write_time=19, readable_time_span=[15, 20[, writable_time_span=[20, 21[
reader state=0, writer state=0, end_time=20, read_start_time=15


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=14, end=0), 
[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=3, write_position=3, full=1
total_duration=4
last_write_time=14, readable_time_span=[11, 15[, writable_time_span=[15, 15[
reader state=4, writer state=0, end_time=20, read_start_time=11


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 14)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 11) --> [11, 15[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=3, write_position=3, full=1
total_duration=4
last_write_time=14, readable_time_span=[11, 15[, writable_time_span=[15, 15[
reader state=-1, writer state=1, end_time=20, read_start_time=11


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 11)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=3, full=0
total_duration=4
last_write_time=14, readable_time_span=[12, 15[, writable_time_span=[15, 16[
reader state=0, writer state=1, end_time=20, read_start_time=12


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=11, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=11, readable_time_span=[11, 12[, writable_time_span=[12, 12[
reader state=1, writer state=0, end_time=20, read_start_time=11


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 11)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [15, 16[ t=15

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 11) --> [11, 12[

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 15)....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 15) --> [15, 20[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=6, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=3, write_position=2, full=0
total_duration=6
last_write_time=19, readable_time_span=[15, 20[, writable_time_span=[20, 21[
reader state=-1, writer state=0, end_time=20, read_start_time=15


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 15)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=6, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=4, write_position=2, full=0
total_duration=6
last_write_time=19, readable_time_span=[16, 20[, writable_time_span=[20, 22[
reader state=0, writer state=0, end_time=20, read_start_time=16


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=15, end=0), 
[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=4
last_write_time=15, readable_time_span=[12, 16[, writable_time_span=[16, 16[
reader state=0, writer state=0, end_time=20, read_start_time=12


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 15)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=9, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=2, write_position=2, full=1
total_duration=9
last_write_time=19, readable_time_span=[11, 20[, writable_time_span=[20, 20[
reader state=-1, writer state=0, end_time=20, read_start_time=11


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 11)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=9, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=3, write_position=2, full=0
total_duration=9
last_write_time=19, readable_time_span=[12, 20[, writable_time_span=[20, 21[
reader state=0, writer state=0, end_time=20, read_start_time=12


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 11)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=11, readable_time_span=[12, 12[, writable_time_span=[12, 13[
reader state=0, writer state=1, end_time=20, read_start_time=12


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=11, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=11, readable_time_span=[11, 12[, writable_time_span=[12, 12[
reader state=1, writer state=0, end_time=20, read_start_time=11


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 11)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [12, 13[ t=12

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 12)....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 11) --> [11, 12[

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 12) --> [12, 16[

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 11)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=11, readable_time_span=[12, 12[, writable_time_span=[12, 13[
reader state=0, writer state=1, end_time=20, read_start_time=12


[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=11)

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=11)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 12)....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [12, 13[ t=12

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 12)....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 12) --> [12, 13[

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 12)....

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=4
last_write_time=15, readable_time_span=[12, 16[, writable_time_span=[16, 16[
reader state=-1, writer state=1, end_time=20, read_start_time=12


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 12)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=1, write_position=0, full=0
total_duration=4
last_write_time=15, readable_time_span=[13, 16[, writable_time_span=[16, 17[
reader state=0, writer state=1, end_time=20, read_start_time=13


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=12, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=12, readable_time_span=[12, 13[, writable_time_span=[13, 13[
reader state=1, writer state=0, end_time=20, read_start_time=12


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 12)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [16, 17[ t=16

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 12) --> [12, 13[

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 16)....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 16) --> [16, 20[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=6, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=4, write_position=2, full=0
total_duration=6
last_write_time=19, readable_time_span=[16, 20[, writable_time_span=[20, 22[
reader state=-1, writer state=0, end_time=20, read_start_time=16


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 16)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=6, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=5, write_position=2, full=0
total_duration=6
last_write_time=19, readable_time_span=[17, 20[, writable_time_span=[20, 23[
reader state=0, writer state=0, end_time=20, read_start_time=17


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=16, end=0), 
[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=1, write_position=1, full=1
total_duration=4
last_write_time=16, readable_time_span=[13, 17[, writable_time_span=[17, 17[
reader state=0, writer state=0, end_time=20, read_start_time=13


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 16)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=9, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=3, write_position=2, full=0
total_duration=9
last_write_time=19, readable_time_span=[12, 20[, writable_time_span=[20, 21[
reader state=-1, writer state=0, end_time=20, read_start_time=12


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 12)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=9, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=4, write_position=2, full=0
total_duration=9
last_write_time=19, readable_time_span=[13, 20[, writable_time_span=[20, 22[
reader state=0, writer state=0, end_time=20, read_start_time=13


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 12)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=12, readable_time_span=[13, 13[, writable_time_span=[13, 14[
reader state=0, writer state=1, end_time=20, read_start_time=13


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=12, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=12, readable_time_span=[12, 13[, writable_time_span=[13, 13[
reader state=1, writer state=0, end_time=20, read_start_time=12


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 12)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [13, 14[ t=13

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 13)....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 12) --> [12, 13[

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 13) --> [13, 17[

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 12)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=12, readable_time_span=[13, 13[, writable_time_span=[13, 14[
reader state=0, writer state=1, end_time=20, read_start_time=13


[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=12)

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=12)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 13)....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [13, 14[ t=13

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 13)....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 13) --> [13, 14[

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 13)....

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=1, write_position=1, full=1
total_duration=4
last_write_time=16, readable_time_span=[13, 17[, writable_time_span=[17, 17[
reader state=-1, writer state=1, end_time=20, read_start_time=13


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 13)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=2, write_position=1, full=0
total_duration=4
last_write_time=16, readable_time_span=[14, 17[, writable_time_span=[17, 18[
reader state=0, writer state=1, end_time=20, read_start_time=14


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=13, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
cannot lock mutex for debug_print



[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 13)

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [17, 18[ t=17

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 13) --> [13, 14[

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 17)....

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 17) --> [17, 20[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=6, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=5, write_position=2, full=0
total_duration=6
last_write_time=19, readable_time_span=[17, 20[, writable_time_span=[20, 23[
reader state=-1, writer state=0, end_time=20, read_start_time=17


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 17)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=6, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=2, full=0
total_duration=6
last_write_time=19, readable_time_span=[18, 20[, writable_time_span=[20, 24[
reader state=0, writer state=0, end_time=20, read_start_time=18


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=17, end=0), 
[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=2, write_position=2, full=1
total_duration=4
last_write_time=17, readable_time_span=[14, 18[, writable_time_span=[18, 18[
reader state=0, writer state=0, end_time=20, read_start_time=14


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 17)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=9, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=4, write_position=2, full=0
total_duration=9
last_write_time=19, readable_time_span=[13, 20[, writable_time_span=[20, 22[
reader state=-1, writer state=0, end_time=20, read_start_time=13


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 13)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=9, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=5, write_position=2, full=0
total_duration=9
last_write_time=19, readable_time_span=[14, 20[, writable_time_span=[20, 23[
reader state=0, writer state=0, end_time=20, read_start_time=14


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 13)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=13, readable_time_span=[14, 14[, writable_time_span=[14, 15[
reader state=0, writer state=1, end_time=20, read_start_time=14


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=13, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=13, readable_time_span=[13, 14[, writable_time_span=[14, 14[
reader state=1, writer state=0, end_time=20, read_start_time=13


[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [14, 15[ t=14

[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 13)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 14)....

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 14) --> [14, 18[

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 13) --> [13, 14[

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 13)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
cannot lock mutex for debug_print



[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=13)

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [14, 15[ t=14

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=13)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 14)....

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 14)....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 14) --> [14, 15[

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 14)....

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=2, write_position=2, full=1
total_duration=4
last_write_time=17, readable_time_span=[14, 18[, writable_time_span=[18, 18[
reader state=-1, writer state=1, end_time=20, read_start_time=14


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 14)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=3, write_position=2, full=0
total_duration=4
last_write_time=17, readable_time_span=[15, 18[, writable_time_span=[18, 19[
reader state=0, writer state=1, end_time=20, read_start_time=15


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=14, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=14, readable_time_span=[14, 15[, writable_time_span=[15, 15[
reader state=1, writer state=0, end_time=20, read_start_time=14


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 14)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 14) --> [14, 15[

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [18, 19[ t=18

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 18)....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 18) --> [18, 20[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=6, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=2, full=0
total_duration=6
last_write_time=19, readable_time_span=[18, 20[, writable_time_span=[20, 24[
reader state=-1, writer state=0, end_time=20, read_start_time=18


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 18)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=6, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=1, write_position=2, full=0
total_duration=6
last_write_time=19, readable_time_span=[19, 20[, writable_time_span=[20, 25[
reader state=0, writer state=0, end_time=20, read_start_time=19


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=18, end=0), 
[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=3, write_position=3, full=1
total_duration=4
last_write_time=18, readable_time_span=[15, 19[, writable_time_span=[19, 19[
reader state=0, writer state=0, end_time=20, read_start_time=15


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 18)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=9, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=5, write_position=2, full=0
total_duration=9
last_write_time=19, readable_time_span=[14, 20[, writable_time_span=[20, 23[
reader state=-1, writer state=0, end_time=20, read_start_time=14


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 14)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=9, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=6, write_position=2, full=0
total_duration=9
last_write_time=19, readable_time_span=[15, 20[, writable_time_span=[20, 24[
reader state=0, writer state=0, end_time=20, read_start_time=15


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 14)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=14, readable_time_span=[15, 15[, writable_time_span=[15, 16[
reader state=0, writer state=1, end_time=20, read_start_time=15


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=14, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=14, readable_time_span=[14, 15[, writable_time_span=[15, 15[
reader state=1, writer state=0, end_time=20, read_start_time=14


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 14)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [15, 16[ t=15

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 15)....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 14) --> [14, 15[

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 15) --> [15, 19[

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 14)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=14, readable_time_span=[15, 15[, writable_time_span=[15, 16[
reader state=0, writer state=1, end_time=20, read_start_time=15


[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=14)

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=14)

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [15, 16[ t=15

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 15)....

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 15)....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 15) --> [15, 16[

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 15)....

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=3, write_position=3, full=1
total_duration=4
last_write_time=18, readable_time_span=[15, 19[, writable_time_span=[19, 19[
reader state=-1, writer state=1, end_time=20, read_start_time=15


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 15)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=3, full=0
total_duration=4
last_write_time=18, readable_time_span=[16, 19[, writable_time_span=[19, 20[
reader state=0, writer state=1, end_time=20, read_start_time=16


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=15, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
cannot lock mutex for debug_print



[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 15)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 15) --> [15, 16[

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [19, 20[ t=19

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 19)....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 19) --> [19, 20[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=6, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=1, write_position=2, full=0
total_duration=6
last_write_time=19, readable_time_span=[19, 20[, writable_time_span=[20, 25[
reader state=-1, writer state=0, end_time=20, read_start_time=19


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 19)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=1 - 
 output:=[frame_shape=(320, 240), required_duration=6, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=2, write_position=2, full=0
total_duration=6
last_write_time=19, readable_time_span=[20, 20[, writable_time_span=[20, 26[
reader state=0, writer state=0, end_time=20, read_start_time=20


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=19, end=1), 
[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=4
last_write_time=19, readable_time_span=[16, 20[, writable_time_span=[20, 20[
reader state=0, writer state=0, end_time=20, read_start_time=16


[src/graph/media_node.cc:14, thread_main_]
node:: ended

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=9, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=6, write_position=2, full=0
total_duration=9
last_write_time=19, readable_time_span=[15, 20[, writable_time_span=[20, 24[
reader state=-1, writer state=0, end_time=20, read_start_time=15


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 15)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=9, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=7, write_position=2, full=0
total_duration=9
last_write_time=19, readable_time_span=[16, 20[, writable_time_span=[20, 25[
reader state=0, writer state=0, end_time=20, read_start_time=16


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 15)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=15, readable_time_span=[16, 16[, writable_time_span=[16, 17[
reader state=0, writer state=1, end_time=20, read_start_time=16


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=15, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=15, readable_time_span=[15, 16[, writable_time_span=[16, 16[
reader state=1, writer state=0, end_time=20, read_start_time=15


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 15)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [16, 17[ t=16

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 16)....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 15) --> [15, 16[

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 16) --> [16, 20[

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 15)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=15, readable_time_span=[16, 16[, writable_time_span=[16, 17[
reader state=0, writer state=1, end_time=20, read_start_time=16


[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=15)

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=15)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 16)....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [16, 17[ t=16

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 16)....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 16) --> [16, 17[

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 16)....

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=4
last_write_time=19, readable_time_span=[16, 20[, writable_time_span=[20, 20[
reader state=-1, writer state=0, end_time=20, read_start_time=16


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 16)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=1, write_position=0, full=0
total_duration=4
last_write_time=19, readable_time_span=[17, 20[, writable_time_span=[20, 21[
reader state=0, writer state=0, end_time=20, read_start_time=17


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=16, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=16, readable_time_span=[16, 17[, writable_time_span=[17, 17[
reader state=1, writer state=0, end_time=20, read_start_time=16


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 16)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 16) --> [16, 17[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=9, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=7, write_position=2, full=0
total_duration=9
last_write_time=19, readable_time_span=[16, 20[, writable_time_span=[20, 25[
reader state=-1, writer state=0, end_time=20, read_start_time=16


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 16)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=9, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=8, write_position=2, full=0
total_duration=9
last_write_time=19, readable_time_span=[17, 20[, writable_time_span=[20, 26[
reader state=0, writer state=0, end_time=20, read_start_time=17


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 16)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=16, readable_time_span=[17, 17[, writable_time_span=[17, 18[
reader state=0, writer state=1, end_time=20, read_start_time=17


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=16, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=16, readable_time_span=[16, 17[, writable_time_span=[17, 17[
reader state=1, writer state=0, end_time=20, read_start_time=16


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 16)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [17, 18[ t=17

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 17)....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 17) --> [17, 20[

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 16) --> [16, 17[

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 16)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=16, readable_time_span=[17, 17[, writable_time_span=[17, 18[
reader state=0, writer state=1, end_time=20, read_start_time=17


[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=16)

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=16)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 17)....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [17, 18[ t=17

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 17)....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 17) --> [17, 18[

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 17)....

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=1, write_position=0, full=0
total_duration=4
last_write_time=19, readable_time_span=[17, 20[, writable_time_span=[20, 21[
reader state=-1, writer state=0, end_time=20, read_start_time=17


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 17)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=2, write_position=0, full=0
total_duration=4
last_write_time=19, readable_time_span=[18, 20[, writable_time_span=[20, 22[
reader state=0, writer state=0, end_time=20, read_start_time=18


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=17, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=17, readable_time_span=[17, 18[, writable_time_span=[18, 18[
reader state=1, writer state=0, end_time=20, read_start_time=17


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 17)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 17) --> [17, 18[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=9, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=8, write_position=2, full=0
total_duration=9
last_write_time=19, readable_time_span=[17, 20[, writable_time_span=[20, 26[
reader state=-1, writer state=0, end_time=20, read_start_time=17


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 17)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=9, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=2, full=0
total_duration=9
last_write_time=19, readable_time_span=[18, 20[, writable_time_span=[20, 27[
reader state=0, writer state=0, end_time=20, read_start_time=18


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 17)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=17, readable_time_span=[18, 18[, writable_time_span=[18, 19[
reader state=0, writer state=1, end_time=20, read_start_time=18


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=17, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=17, readable_time_span=[17, 18[, writable_time_span=[18, 18[
reader state=1, writer state=0, end_time=20, read_start_time=17


[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [18, 19[ t=18

[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 17)

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 17) --> [17, 18[

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 18)....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 18) --> [18, 20[

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 17)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=17, readable_time_span=[18, 18[, writable_time_span=[18, 19[
reader state=0, writer state=-1, end_time=20, read_start_time=18


[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [18, 19[ t=18

[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=17)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 18)....

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=17)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 18)....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 18) --> [18, 19[

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 18)....

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=2, write_position=0, full=0
total_duration=4
last_write_time=19, readable_time_span=[18, 20[, writable_time_span=[20, 22[
reader state=-1, writer state=0, end_time=20, read_start_time=18


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 18)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=3, write_position=0, full=0
total_duration=4
last_write_time=19, readable_time_span=[19, 20[, writable_time_span=[20, 23[
reader state=0, writer state=0, end_time=20, read_start_time=19


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=18, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=18, readable_time_span=[18, 19[, writable_time_span=[19, 19[
reader state=1, writer state=0, end_time=20, read_start_time=18


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 18)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 18) --> [18, 19[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=9, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=2, full=0
total_duration=9
last_write_time=19, readable_time_span=[18, 20[, writable_time_span=[20, 27[
reader state=-1, writer state=0, end_time=20, read_start_time=18


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 18)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=9, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=1, write_position=2, full=0
total_duration=9
last_write_time=19, readable_time_span=[19, 20[, writable_time_span=[20, 28[
reader state=0, writer state=0, end_time=20, read_start_time=19


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 18)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=18, readable_time_span=[19, 19[, writable_time_span=[19, 20[
reader state=0, writer state=1, end_time=20, read_start_time=19


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=18, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=18, readable_time_span=[18, 19[, writable_time_span=[19, 19[
reader state=1, writer state=0, end_time=20, read_start_time=18


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 18)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [19, 20[ t=19

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 19)....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 19) --> [19, 20[

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 18) --> [18, 19[

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 18)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=18, readable_time_span=[19, 19[, writable_time_span=[19, 20[
reader state=0, writer state=1, end_time=20, read_start_time=19


[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=18)

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=18)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 19)....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [19, 20[ t=19

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 19)....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 19) --> [19, 20[

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 19)....

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=3, write_position=0, full=0
total_duration=4
last_write_time=19, readable_time_span=[19, 20[, writable_time_span=[20, 23[
reader state=-1, writer state=0, end_time=20, read_start_time=19


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 19)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=1 - 
 output:=[frame_shape=(320, 240), required_duration=4, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=4
last_write_time=19, readable_time_span=[20, 20[, writable_time_span=[20, 24[
reader state=0, writer state=0, end_time=20, read_start_time=20


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=19, end=1), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=19, readable_time_span=[19, 20[, writable_time_span=[20, 20[
reader state=1, writer state=0, end_time=20, read_start_time=19


[src/graph/media_node.cc:14, thread_main_]
node:: ended

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 19) --> [19, 20[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=9, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=1, write_position=2, full=0
total_duration=9
last_write_time=19, readable_time_span=[19, 20[, writable_time_span=[20, 28[
reader state=-1, writer state=0, end_time=20, read_start_time=19


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 19)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=1 - 
 output:=[frame_shape=(320, 240), required_duration=9, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=2, write_position=2, full=0
total_duration=9
last_write_time=19, readable_time_span=[20, 20[, writable_time_span=[20, 29[
reader state=0, writer state=0, end_time=20, read_start_time=20


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 19)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=1 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=19, readable_time_span=[20, 20[, writable_time_span=[20, 21[
reader state=0, writer state=0, end_time=20, read_start_time=20


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=19, end=1), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=19, readable_time_span=[19, 20[, writable_time_span=[20, 20[
reader state=1, writer state=0, end_time=20, read_start_time=19


[src/graph/media_node.cc:14, thread_main_]
node:: ended

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 19) --> [19, 20[

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 19)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=1 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=19, readable_time_span=[20, 20[, writable_time_span=[20, 21[
reader state=0, writer state=0, end_time=20, read_start_time=20


[src/graph/media_sink_node.cc:23, pull_frame_]
sink: reached end!

[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=19)

[src/graph/media_graph.cc:53, run]
graph::reached end!

[src/graph/media_graph.cc:17, ~media_graph]
media_graph stopping

[src/graph/media_graph.cc:19, ~media_graph]
media_graph no more

[src/graph/media_graph.cc:12, media_graph]
media_graph

[src/graph/media_source_node.cc:60, launch_]
source:: launch

[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=-1)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [0, 1[ t=0

[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = -1)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [0, 1[ t=0

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [0, 1[ t=0

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 0)....

[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = -1)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [0, 1[ t=0

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 0)....

[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = -1)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [0, 1[ t=0

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 0)....

[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = -1)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [0, 1[ t=0

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 0)....

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=-1)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 0)....

[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = -1)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [0, 1[ t=0

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 0)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=0, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=0, readable_time_span=[0, 1[, writable_time_span=[1, 1[
reader state=1, writer state=0, end_time=20, read_start_time=0


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=0)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 0) --> [0, 1[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=0, readable_time_span=[0, 1[, writable_time_span=[1, 1[
reader state=-1, writer state=1, end_time=20, read_start_time=0


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 0)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=0, readable_time_span=[1, 1[, writable_time_span=[1, 2[
reader state=0, writer state=1, end_time=20, read_start_time=1


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=0, end=0), 
[frame_shape=(320, 240), required_duration=10, setup=1]
buffer: ndarray_shared_ring: 
cannot lock mutex for debug_print



[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [1, 2[ t=1

[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 0)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [1, 2[ t=1

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [1, 2[ t=1

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 1)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=1, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=1, readable_time_span=[1, 2[, writable_time_span=[2, 2[
reader state=1, writer state=0, end_time=20, read_start_time=1


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=1)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 1) --> [1, 2[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=1, readable_time_span=[1, 2[, writable_time_span=[2, 2[
reader state=-1, writer state=1, end_time=20, read_start_time=1


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 1)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=1, readable_time_span=[2, 2[, writable_time_span=[2, 3[
reader state=0, writer state=1, end_time=20, read_start_time=2


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [2, 3[ t=2

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=1, end=0), 
[frame_shape=(320, 240), required_duration=10, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=2, full=0
total_duration=10
last_write_time=1, readable_time_span=[0, 2[, writable_time_span=[2, 10[
reader state=2, writer state=0, end_time=20, read_start_time=0


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 1)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [2, 3[ t=2

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 0) --> [0, 2[

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [2, 3[ t=2

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 2)....

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=10, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=2, full=0
total_duration=10
last_write_time=1, readable_time_span=[0, 2[, writable_time_span=[2, 10[
reader state=-1, writer state=-1, end_time=20, read_start_time=0


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 0)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=10, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=2, full=0
total_duration=10
last_write_time=1, readable_time_span=[0, 2[, writable_time_span=[2, 10[
reader state=0, writer state=-1, end_time=20, read_start_time=0


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=0, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=0, readable_time_span=[0, 1[, writable_time_span=[1, 1[
reader state=1, writer state=0, end_time=20, read_start_time=0


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 0)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 0) --> [0, 1[

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 0)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=2, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=2, readable_time_span=[2, 3[, writable_time_span=[3, 3[
reader state=1, writer state=0, end_time=20, read_start_time=2


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=2)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 2) --> [2, 3[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=2, readable_time_span=[2, 3[, writable_time_span=[3, 3[
reader state=-1, writer state=1, end_time=20, read_start_time=2


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 2)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=2, readable_time_span=[3, 3[, writable_time_span=[3, 4[
reader state=0, writer state=1, end_time=20, read_start_time=3


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=2, end=0), 
[frame_shape=(320, 240), required_duration=10, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=3, full=0
total_duration=10
last_write_time=2, readable_time_span=[0, 3[, writable_time_span=[3, 10[
reader state=0, writer state=0, end_time=20, read_start_time=0


[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [3, 4[ t=3

[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 2)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [3, 4[ t=3

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [3, 4[ t=3

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 3)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=3, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=3, readable_time_span=[3, 4[, writable_time_span=[4, 4[
reader state=1, writer state=0, end_time=20, read_start_time=3


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=3)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 3) --> [3, 4[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=3, readable_time_span=[3, 4[, writable_time_span=[4, 4[
reader state=-1, writer state=1, end_time=20, read_start_time=3


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 3)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=3, readable_time_span=[4, 4[, writable_time_span=[4, 5[
reader state=0, writer state=1, end_time=20, read_start_time=4


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=3, end=0), 
[frame_shape=(320, 240), required_duration=10, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=4, full=0
total_duration=10
last_write_time=3, readable_time_span=[0, 4[, writable_time_span=[4, 10[
reader state=0, writer state=0, end_time=20, read_start_time=0


[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [4, 5[ t=4

[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 3)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [4, 5[ t=4

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [4, 5[ t=4

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 4)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=4, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=4, readable_time_span=[4, 5[, writable_time_span=[5, 5[
reader state=1, writer state=0, end_time=20, read_start_time=4


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=4)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 4) --> [4, 5[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=4, readable_time_span=[4, 5[, writable_time_span=[5, 5[
reader state=-1, writer state=1, end_time=20, read_start_time=4


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 4)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=4, readable_time_span=[5, 5[, writable_time_span=[5, 6[
reader state=0, writer state=1, end_time=20, read_start_time=5


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=4, end=0), 
[frame_shape=(320, 240), required_duration=10, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=5, full=0
total_duration=10
last_write_time=4, readable_time_span=[0, 5[, writable_time_span=[5, 10[
reader state=0, writer state=0, end_time=20, read_start_time=0


[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [5, 6[ t=5

[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 4)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [5, 6[ t=5

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [5, 6[ t=5

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 5)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=5, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=5, readable_time_span=[5, 6[, writable_time_span=[6, 6[
reader state=1, writer state=0, end_time=20, read_start_time=5


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=5)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 5) --> [5, 6[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=5, readable_time_span=[5, 6[, writable_time_span=[6, 6[
reader state=-1, writer state=1, end_time=20, read_start_time=5


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 5)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=5, readable_time_span=[6, 6[, writable_time_span=[6, 7[
reader state=0, writer state=1, end_time=20, read_start_time=6


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=5, end=0), 
[frame_shape=(320, 240), required_duration=10, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=6, full=0
total_duration=10
last_write_time=5, readable_time_span=[0, 6[, writable_time_span=[6, 10[
reader state=0, writer state=0, end_time=20, read_start_time=0


[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [6, 7[ t=6

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 0) --> [0, 6[

[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 5)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [6, 7[ t=6

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [6, 7[ t=6

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 6)....

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=8, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=6, full=0
total_duration=8
last_write_time=5, readable_time_span=[0, 6[, writable_time_span=[6, 8[
reader state=-1, writer state=-1, end_time=20, read_start_time=0


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 0)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=8, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=6, full=0
total_duration=8
last_write_time=5, readable_time_span=[0, 6[, writable_time_span=[6, 8[
reader state=0, writer state=-1, end_time=20, read_start_time=0


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=0, end=0), 
[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=1, full=0
total_duration=5
last_write_time=0, readable_time_span=[0, 1[, writable_time_span=[1, 5[
reader state=4, writer state=0, end_time=20, read_start_time=0


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 0)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [1, 2[ t=1

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 1)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=6, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=6, readable_time_span=[6, 7[, writable_time_span=[7, 7[
reader state=1, writer state=0, end_time=20, read_start_time=6


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=6)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 6) --> [6, 7[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=6, readable_time_span=[6, 7[, writable_time_span=[7, 7[
reader state=-1, writer state=1, end_time=20, read_start_time=6


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 6)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=6, readable_time_span=[7, 7[, writable_time_span=[7, 8[
reader state=0, writer state=1, end_time=20, read_start_time=7


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [7, 8[ t=7

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=6, end=0), 
[frame_shape=(320, 240), required_duration=10, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=7, full=0
total_duration=10
last_write_time=6, readable_time_span=[0, 7[, writable_time_span=[7, 10[
reader state=0, writer state=0, end_time=20, read_start_time=0


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 6)

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 1) --> [0, 7[

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [7, 8[ t=7

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [7, 8[ t=7

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 7)....

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=8, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=7, full=0
total_duration=8
last_write_time=6, readable_time_span=[0, 7[, writable_time_span=[7, 8[
reader state=-1, writer state=-1, end_time=20, read_start_time=0


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 1)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=8, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=7, full=0
total_duration=8
last_write_time=6, readable_time_span=[0, 7[, writable_time_span=[7, 8[
reader state=0, writer state=-1, end_time=20, read_start_time=0


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=1, end=0), 
[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=2, full=0
total_duration=5
last_write_time=1, readable_time_span=[0, 2[, writable_time_span=[2, 5[
reader state=4, writer state=0, end_time=20, read_start_time=0


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 1)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [2, 3[ t=2

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 2)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=7, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=7, readable_time_span=[7, 8[, writable_time_span=[8, 8[
reader state=1, writer state=0, end_time=20, read_start_time=7


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=7)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 7) --> [7, 8[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=7, readable_time_span=[7, 8[, writable_time_span=[8, 8[
reader state=-1, writer state=1, end_time=20, read_start_time=7


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 7)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=7, readable_time_span=[8, 8[, writable_time_span=[8, 9[
reader state=0, writer state=1, end_time=20, read_start_time=8


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=7, end=0), 
[frame_shape=(320, 240), required_duration=10, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=8, full=0
total_duration=10
last_write_time=7, readable_time_span=[0, 8[, writable_time_span=[8, 10[
reader state=0, writer state=0, end_time=20, read_start_time=0


[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [8, 9[ t=8

[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 7)

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 2) --> [0, 8[

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [8, 9[ t=8

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=8, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=8
last_write_time=7, readable_time_span=[0, 8[, writable_time_span=[8, 8[
reader state=-1, writer state=1, end_time=20, read_start_time=0


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 2)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=8, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=1, write_position=0, full=0
total_duration=8
last_write_time=7, readable_time_span=[1, 8[, writable_time_span=[8, 9[
reader state=0, writer state=-1, end_time=20, read_start_time=1


[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [8, 9[ t=8

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 8)....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=2, end=0), 
[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=3, full=0
total_duration=5
last_write_time=2, readable_time_span=[0, 3[, writable_time_span=[3, 5[
reader state=4, writer state=0, end_time=20, read_start_time=0


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 2)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [3, 4[ t=3

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 3)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=8, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=8, readable_time_span=[8, 9[, writable_time_span=[9, 9[
reader state=1, writer state=0, end_time=20, read_start_time=8


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=8)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 8) --> [8, 9[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=8, readable_time_span=[8, 9[, writable_time_span=[9, 9[
reader state=-1, writer state=1, end_time=20, read_start_time=8


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 8)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=8, readable_time_span=[9, 9[, writable_time_span=[9, 10[
reader state=0, writer state=1, end_time=20, read_start_time=9


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=8, end=0), 
[frame_shape=(320, 240), required_duration=10, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=9, full=0
total_duration=10
last_write_time=8, readable_time_span=[0, 9[, writable_time_span=[9, 10[
reader state=0, writer state=0, end_time=20, read_start_time=0


[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [9, 10[ t=9

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 3) --> [1, 9[

[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 8)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [9, 10[ t=9

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=8, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=1, write_position=1, full=1
total_duration=8
last_write_time=8, readable_time_span=[1, 9[, writable_time_span=[9, 9[
reader state=-1, writer state=1, end_time=20, read_start_time=1


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 3)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=8, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=2, write_position=1, full=0
total_duration=8
last_write_time=8, readable_time_span=[2, 9[, writable_time_span=[9, 10[
reader state=0, writer state=-1, end_time=20, read_start_time=2


[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [9, 10[ t=9

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 9)....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=3, end=0), 
[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=4, full=0
total_duration=5
last_write_time=3, readable_time_span=[0, 4[, writable_time_span=[4, 5[
reader state=4, writer state=0, end_time=20, read_start_time=0


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 3)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [4, 5[ t=4

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 4)....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 0) --> [0, 4[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=4, full=0
total_duration=5
last_write_time=3, readable_time_span=[0, 4[, writable_time_span=[4, 5[
reader state=-1, writer state=-1, end_time=20, read_start_time=0


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 0)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=4, full=0
total_duration=5
last_write_time=3, readable_time_span=[0, 4[, writable_time_span=[4, 5[
reader state=0, writer state=-1, end_time=20, read_start_time=0


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=0, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=0, readable_time_span=[0, 1[, writable_time_span=[1, 1[
reader state=1, writer state=0, end_time=20, read_start_time=0


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 0)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 0) --> [0, 1[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=0, readable_time_span=[0, 1[, writable_time_span=[1, 1[
reader state=-1, writer state=1, end_time=20, read_start_time=0


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 0)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=0, readable_time_span=[1, 1[, writable_time_span=[1, 2[
reader state=0, writer state=1, end_time=20, read_start_time=1


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 0)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
cannot lock mutex for debug_print



[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [1, 2[ t=1

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [1, 2[ t=1

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 0) --> [0, 1[

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 1)....

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 1)....

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 0)

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 1) --> [0, 3[

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=0, readable_time_span=[1, 1[, writable_time_span=[1, 2[
reader state=0, writer state=0, end_time=20, read_start_time=1


[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=0, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=0, readable_time_span=[0, 1[, writable_time_span=[1, 1[
reader state=1, writer state=0, end_time=20, read_start_time=0


[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=0)

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=0)

[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 0)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 1)....

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [1, 2[ t=1

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 1)....

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=10, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=9, full=0
total_duration=10
last_write_time=8, readable_time_span=[0, 9[, writable_time_span=[9, 10[
reader state=-1, writer state=-1, end_time=20, read_start_time=0


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 1)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=10, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=1, write_position=9, full=0
total_duration=10
last_write_time=8, readable_time_span=[1, 9[, writable_time_span=[9, 11[
reader state=0, writer state=-1, end_time=20, read_start_time=1


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=1, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=1, readable_time_span=[1, 2[, writable_time_span=[2, 2[
reader state=1, writer state=0, end_time=20, read_start_time=1


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 1)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 1) --> [1, 2[

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 1)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=9, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=9, readable_time_span=[9, 10[, writable_time_span=[10, 10[
reader state=1, writer state=0, end_time=20, read_start_time=9


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=9)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 9) --> [9, 10[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=9, readable_time_span=[9, 10[, writable_time_span=[10, 10[
reader state=-1, writer state=1, end_time=20, read_start_time=9


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 9)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=9, readable_time_span=[10, 10[, writable_time_span=[10, 11[
reader state=0, writer state=1, end_time=20, read_start_time=10


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=9, end=0), 
[frame_shape=(320, 240), required_duration=10, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=1, write_position=0, full=0
total_duration=10
last_write_time=9, readable_time_span=[1, 10[, writable_time_span=[10, 11[
reader state=0, writer state=0, end_time=20, read_start_time=1


[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [10, 11[ t=10

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 4) --> [2, 10[

[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 9)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [10, 11[ t=10

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=8, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=2, write_position=2, full=1
total_duration=8
last_write_time=9, readable_time_span=[2, 10[, writable_time_span=[10, 10[
reader state=-1, writer state=1, end_time=20, read_start_time=2


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 4)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=8, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=3, write_position=2, full=0
total_duration=8
last_write_time=9, readable_time_span=[3, 10[, writable_time_span=[10, 11[
reader state=0, writer state=-1, end_time=20, read_start_time=3


[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [10, 11[ t=10

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 10)....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=4, end=0), 
[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=5
last_write_time=4, readable_time_span=[0, 5[, writable_time_span=[5, 5[
reader state=5, writer state=0, end_time=20, read_start_time=0


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 4)

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 1) --> [0, 5[

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=5
last_write_time=4, readable_time_span=[0, 5[, writable_time_span=[5, 5[
reader state=-1, writer state=1, end_time=20, read_start_time=0


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 1)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=1, write_position=0, full=0
total_duration=5
last_write_time=4, readable_time_span=[1, 5[, writable_time_span=[5, 6[
reader state=0, writer state=1, end_time=20, read_start_time=1


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=1, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
cannot lock mutex for debug_print



[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 1)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [5, 6[ t=5

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 1) --> [1, 2[

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 5)....

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=1, readable_time_span=[1, 2[, writable_time_span=[2, 2[
reader state=-1, writer state=1, end_time=20, read_start_time=1


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 1)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=1, readable_time_span=[2, 2[, writable_time_span=[2, 3[
reader state=0, writer state=1, end_time=20, read_start_time=2


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 1)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
cannot lock mutex for debug_print



[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [2, 3[ t=2

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [2, 3[ t=2

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 2)....

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 2)....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 1) --> [1, 2[

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 2) --> [1, 4[

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=1, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=1, readable_time_span=[1, 2[, writable_time_span=[2, 2[
reader state=1, writer state=0, end_time=20, read_start_time=1


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 1)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 1)

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [2, 3[ t=2

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 2)....

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=1, readable_time_span=[2, 2[, writable_time_span=[2, 3[
reader state=0, writer state=-1, end_time=20, read_start_time=2


[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=1)

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=1)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 2)....

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=10, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=1, write_position=0, full=0
total_duration=10
last_write_time=9, readable_time_span=[1, 10[, writable_time_span=[10, 11[
reader state=-1, writer state=-1, end_time=20, read_start_time=1


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 2)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=10, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=2, write_position=0, full=0
total_duration=10
last_write_time=9, readable_time_span=[2, 10[, writable_time_span=[10, 12[
reader state=0, writer state=-1, end_time=20, read_start_time=2


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=2, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=2, readable_time_span=[2, 3[, writable_time_span=[3, 3[
reader state=1, writer state=0, end_time=20, read_start_time=2


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 2)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 2) --> [2, 3[

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 2)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=10, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=10, readable_time_span=[10, 11[, writable_time_span=[11, 11[
reader state=1, writer state=0, end_time=20, read_start_time=10


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=10)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 10) --> [10, 11[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=10, readable_time_span=[10, 11[, writable_time_span=[11, 11[
reader state=-1, writer state=1, end_time=20, read_start_time=10


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 10)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=10, readable_time_span=[11, 11[, writable_time_span=[11, 12[
reader state=0, writer state=1, end_time=20, read_start_time=11


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=10, end=0), 
[frame_shape=(320, 240), required_duration=10, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=2, write_position=1, full=0
total_duration=10
last_write_time=10, readable_time_span=[2, 11[, writable_time_span=[11, 12[
reader state=0, writer state=0, end_time=20, read_start_time=2


[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [11, 12[ t=11

[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 10)

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 5) --> [3, 11[

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [11, 12[ t=11

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=8, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=3, write_position=3, full=1
total_duration=8
last_write_time=10, readable_time_span=[3, 11[, writable_time_span=[11, 11[
reader state=-1, writer state=1, end_time=20, read_start_time=3


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 5)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=8, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=4, write_position=3, full=0
total_duration=8
last_write_time=10, readable_time_span=[4, 11[, writable_time_span=[11, 12[
reader state=0, writer state=-1, end_time=20, read_start_time=4


[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [11, 12[ t=11

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 11)....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=5, end=0), 
[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=1, write_position=1, full=1
total_duration=5
last_write_time=5, readable_time_span=[1, 6[, writable_time_span=[6, 6[
reader state=5, writer state=0, end_time=20, read_start_time=1


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 5)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 2) --> [1, 6[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=1, write_position=1, full=1
total_duration=5
last_write_time=5, readable_time_span=[1, 6[, writable_time_span=[6, 6[
reader state=-1, writer state=1, end_time=20, read_start_time=1


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 2)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=2, write_position=1, full=0
total_duration=5
last_write_time=5, readable_time_span=[2, 6[, writable_time_span=[6, 7[
reader state=0, writer state=1, end_time=20, read_start_time=2


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=2, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
cannot lock mutex for debug_print



[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 2)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [6, 7[ t=6

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 2) --> [2, 3[

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 6)....

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=2, readable_time_span=[2, 3[, writable_time_span=[3, 3[
reader state=-1, writer state=1, end_time=20, read_start_time=2


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 2)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=2, readable_time_span=[3, 3[, writable_time_span=[3, 4[
reader state=0, writer state=1, end_time=20, read_start_time=3


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 2)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
cannot lock mutex for debug_print



[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [3, 4[ t=3

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [3, 4[ t=3

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 3)....

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 3)....

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=2, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=2, readable_time_span=[2, 3[, writable_time_span=[3, 3[
reader state=1, writer state=0, end_time=20, read_start_time=2


[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 2) --> [2, 3[

[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 2)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 2)

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 3) --> [2, 5[

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [3, 4[ t=3

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 3)....

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=2, readable_time_span=[3, 3[, writable_time_span=[3, 4[
reader state=0, writer state=-1, end_time=20, read_start_time=3


[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=2)

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=2)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 3)....

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=10, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=2, write_position=1, full=0
total_duration=10
last_write_time=10, readable_time_span=[2, 11[, writable_time_span=[11, 12[
reader state=-1, writer state=-1, end_time=20, read_start_time=2


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 3)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=10, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=3, write_position=1, full=0
total_duration=10
last_write_time=10, readable_time_span=[3, 11[, writable_time_span=[11, 13[
reader state=0, writer state=-1, end_time=20, read_start_time=3


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=3, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=3, readable_time_span=[3, 4[, writable_time_span=[4, 4[
reader state=1, writer state=0, end_time=20, read_start_time=3


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 3)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 3) --> [3, 4[

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 3)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=11, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=11, readable_time_span=[11, 12[, writable_time_span=[12, 12[
reader state=1, writer state=0, end_time=20, read_start_time=11


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=11)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 11) --> [11, 12[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=11, readable_time_span=[11, 12[, writable_time_span=[12, 12[
reader state=-1, writer state=1, end_time=20, read_start_time=11


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 11)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=11, readable_time_span=[12, 12[, writable_time_span=[12, 13[
reader state=0, writer state=1, end_time=20, read_start_time=12


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [12, 13[ t=12

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=11, end=0), 
[frame_shape=(320, 240), required_duration=10, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=3, write_position=2, full=0
total_duration=10
last_write_time=11, readable_time_span=[3, 12[, writable_time_span=[12, 13[
reader state=0, writer state=0, end_time=20, read_start_time=3


[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 6) --> [4, 12[

[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 11)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [12, 13[ t=12

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=8, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=4, write_position=4, full=1
total_duration=8
last_write_time=11, readable_time_span=[4, 12[, writable_time_span=[12, 12[
reader state=-1, writer state=1, end_time=20, read_start_time=4


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 6)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=8, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=5, write_position=4, full=0
total_duration=8
last_write_time=11, readable_time_span=[5, 12[, writable_time_span=[12, 13[
reader state=0, writer state=-1, end_time=20, read_start_time=5


[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [12, 13[ t=12

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 12)....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=6, end=0), 
[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=2, write_position=2, full=1
total_duration=5
last_write_time=6, readable_time_span=[2, 7[, writable_time_span=[7, 7[
reader state=5, writer state=0, end_time=20, read_start_time=2


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 6)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 3) --> [2, 7[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=2, write_position=2, full=1
total_duration=5
last_write_time=6, readable_time_span=[2, 7[, writable_time_span=[7, 7[
reader state=-1, writer state=1, end_time=20, read_start_time=2


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 3)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=3, write_position=2, full=0
total_duration=5
last_write_time=6, readable_time_span=[3, 7[, writable_time_span=[7, 8[
reader state=0, writer state=1, end_time=20, read_start_time=3


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=3, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
cannot lock mutex for debug_print



[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 3)

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [7, 8[ t=7

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 3) --> [3, 4[

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 7)....

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=3, readable_time_span=[3, 4[, writable_time_span=[4, 4[
reader state=-1, writer state=1, end_time=20, read_start_time=3


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 3)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=3, readable_time_span=[4, 4[, writable_time_span=[4, 5[
reader state=0, writer state=1, end_time=20, read_start_time=4


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 3)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
cannot lock mutex for debug_print



[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=3, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=3, readable_time_span=[3, 4[, writable_time_span=[4, 4[
reader state=1, writer state=0, end_time=20, read_start_time=3


[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [4, 5[ t=4

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [4, 5[ t=4

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 4)....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 3) --> [3, 4[

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 4)....

[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 3)

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 3)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 4) --> [3, 6[

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=3, readable_time_span=[4, 4[, writable_time_span=[4, 5[
reader state=0, writer state=0, end_time=20, read_start_time=4


[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=3)

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [4, 5[ t=4

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=3)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 4)....

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 4)....

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=10, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=3, write_position=2, full=0
total_duration=10
last_write_time=11, readable_time_span=[3, 12[, writable_time_span=[12, 13[
reader state=-1, writer state=-1, end_time=20, read_start_time=3


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 4)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=10, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=4, write_position=2, full=0
total_duration=10
last_write_time=11, readable_time_span=[4, 12[, writable_time_span=[12, 14[
reader state=0, writer state=-1, end_time=20, read_start_time=4


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=4, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=4, readable_time_span=[4, 5[, writable_time_span=[5, 5[
reader state=1, writer state=0, end_time=20, read_start_time=4


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 4)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 4) --> [4, 5[

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 4)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=12, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=12, readable_time_span=[12, 13[, writable_time_span=[13, 13[
reader state=1, writer state=0, end_time=20, read_start_time=12


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=12)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 12) --> [12, 13[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=12, readable_time_span=[12, 13[, writable_time_span=[13, 13[
reader state=-1, writer state=1, end_time=20, read_start_time=12


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 12)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=12, readable_time_span=[13, 13[, writable_time_span=[13, 14[
reader state=0, writer state=1, end_time=20, read_start_time=13


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=12, end=0), 
[frame_shape=(320, 240), required_duration=10, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=4, write_position=3, full=0
total_duration=10
last_write_time=12, readable_time_span=[4, 13[, writable_time_span=[13, 14[
reader state=0, writer state=0, end_time=20, read_start_time=4


[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [13, 14[ t=13

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 7) --> [5, 13[

[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 12)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [13, 14[ t=13

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=8, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=5, write_position=5, full=1
total_duration=8
last_write_time=12, readable_time_span=[5, 13[, writable_time_span=[13, 13[
reader state=-1, writer state=1, end_time=20, read_start_time=5


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 7)

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [13, 14[ t=13

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=8, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=6, write_position=5, full=0
total_duration=8
last_write_time=12, readable_time_span=[6, 13[, writable_time_span=[13, 14[
reader state=0, writer state=-1, end_time=20, read_start_time=6


[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 13)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=7, end=0), 
[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=3, write_position=3, full=1
total_duration=5
last_write_time=7, readable_time_span=[3, 8[, writable_time_span=[8, 8[
reader state=5, writer state=0, end_time=20, read_start_time=3


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 7)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 4) --> [3, 8[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=3, write_position=3, full=1
total_duration=5
last_write_time=7, readable_time_span=[3, 8[, writable_time_span=[8, 8[
reader state=-1, writer state=1, end_time=20, read_start_time=3


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 4)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=4, write_position=3, full=0
total_duration=5
last_write_time=7, readable_time_span=[4, 8[, writable_time_span=[8, 9[
reader state=0, writer state=1, end_time=20, read_start_time=4


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=4, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
cannot lock mutex for debug_print



[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 4)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [8, 9[ t=8

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 4) --> [4, 5[

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 8)....

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=4, readable_time_span=[4, 5[, writable_time_span=[5, 5[
reader state=-1, writer state=1, end_time=20, read_start_time=4


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 4)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=4, readable_time_span=[5, 5[, writable_time_span=[5, 6[
reader state=0, writer state=1, end_time=20, read_start_time=5


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 4)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
cannot lock mutex for debug_print



[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [5, 6[ t=5

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [5, 6[ t=5

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 5)....

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 5)....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 4) --> [4, 5[

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 5) --> [4, 7[

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 4)

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=4, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=4, readable_time_span=[4, 5[, writable_time_span=[5, 5[
reader state=1, writer state=0, end_time=20, read_start_time=4


[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=4, readable_time_span=[5, 5[, writable_time_span=[5, 6[
reader state=0, writer state=0, end_time=20, read_start_time=5


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 4)

[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=4)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=4)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 5)....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [5, 6[ t=5

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 5)....

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=10, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=4, write_position=3, full=0
total_duration=10
last_write_time=12, readable_time_span=[4, 13[, writable_time_span=[13, 14[
reader state=-1, writer state=-1, end_time=20, read_start_time=4


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 5)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=10, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=5, write_position=3, full=0
total_duration=10
last_write_time=12, readable_time_span=[5, 13[, writable_time_span=[13, 15[
reader state=0, writer state=-1, end_time=20, read_start_time=5


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=5, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=5, readable_time_span=[5, 6[, writable_time_span=[6, 6[
reader state=1, writer state=0, end_time=20, read_start_time=5


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 5)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 5) --> [5, 6[

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 5)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=13, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=13, readable_time_span=[13, 14[, writable_time_span=[14, 14[
reader state=1, writer state=0, end_time=20, read_start_time=13


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=13)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 13) --> [13, 14[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=13, readable_time_span=[13, 14[, writable_time_span=[14, 14[
reader state=-1, writer state=1, end_time=20, read_start_time=13


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 13)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=13, readable_time_span=[14, 14[, writable_time_span=[14, 15[
reader state=0, writer state=1, end_time=20, read_start_time=14


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=13, end=0), 
[frame_shape=(320, 240), required_duration=10, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=5, write_position=4, full=0
total_duration=10
last_write_time=13, readable_time_span=[5, 14[, writable_time_span=[14, 15[
reader state=0, writer state=0, end_time=20, read_start_time=5


[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [14, 15[ t=14

[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 13)

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 8) --> [6, 14[

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [14, 15[ t=14

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=8, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=6, write_position=6, full=1
total_duration=8
last_write_time=13, readable_time_span=[6, 14[, writable_time_span=[14, 14[
reader state=-1, writer state=1, end_time=20, read_start_time=6


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 8)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=8, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=7, write_position=6, full=0
total_duration=8
last_write_time=13, readable_time_span=[7, 14[, writable_time_span=[14, 15[
reader state=0, writer state=-1, end_time=20, read_start_time=7


[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [14, 15[ t=14

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 14)....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=8, end=0), 
[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=4, write_position=4, full=1
total_duration=5
last_write_time=8, readable_time_span=[4, 9[, writable_time_span=[9, 9[
reader state=5, writer state=0, end_time=20, read_start_time=4


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 8)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 5) --> [4, 9[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=4, write_position=4, full=1
total_duration=5
last_write_time=8, readable_time_span=[4, 9[, writable_time_span=[9, 9[
reader state=-1, writer state=1, end_time=20, read_start_time=4


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 5)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=4, full=0
total_duration=5
last_write_time=8, readable_time_span=[5, 9[, writable_time_span=[9, 10[
reader state=0, writer state=1, end_time=20, read_start_time=5


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=5, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
cannot lock mutex for debug_print



[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 5)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [9, 10[ t=9

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 5) --> [5, 6[

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 9)....

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=5, readable_time_span=[5, 6[, writable_time_span=[6, 6[
reader state=-1, writer state=1, end_time=20, read_start_time=5


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 5)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=5, readable_time_span=[6, 6[, writable_time_span=[6, 7[
reader state=0, writer state=1, end_time=20, read_start_time=6


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 5)

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [6, 7[ t=6

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=5, readable_time_span=[6, 6[, writable_time_span=[6, 7[
reader state=0, writer state=-1, end_time=20, read_start_time=6


[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 6)....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [6, 7[ t=6

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 6)....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 6) --> [5, 8[

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=5, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=5, readable_time_span=[5, 6[, writable_time_span=[6, 6[
reader state=1, writer state=0, end_time=20, read_start_time=5


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 5)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 5) --> [5, 6[

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 5)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=5, readable_time_span=[6, 6[, writable_time_span=[6, 7[
reader state=0, writer state=1, end_time=20, read_start_time=6


[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=5)

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=5)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 6)....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [6, 7[ t=6

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 6)....

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=10, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=5, write_position=4, full=0
total_duration=10
last_write_time=13, readable_time_span=[5, 14[, writable_time_span=[14, 15[
reader state=-1, writer state=-1, end_time=20, read_start_time=5


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 6)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=10, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=6, write_position=4, full=0
total_duration=10
last_write_time=13, readable_time_span=[6, 14[, writable_time_span=[14, 16[
reader state=0, writer state=-1, end_time=20, read_start_time=6


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=6, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=6, readable_time_span=[6, 7[, writable_time_span=[7, 7[
reader state=1, writer state=0, end_time=20, read_start_time=6


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 6)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 6) --> [6, 7[

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 6)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=14, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=14, readable_time_span=[14, 15[, writable_time_span=[15, 15[
reader state=1, writer state=0, end_time=20, read_start_time=14


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=14)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 14) --> [14, 15[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=14, readable_time_span=[14, 15[, writable_time_span=[15, 15[
reader state=-1, writer state=1, end_time=20, read_start_time=14


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 14)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=14, readable_time_span=[15, 15[, writable_time_span=[15, 16[
reader state=0, writer state=1, end_time=20, read_start_time=15


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=14, end=0), 
[frame_shape=(320, 240), required_duration=10, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=6, write_position=5, full=0
total_duration=10
last_write_time=14, readable_time_span=[6, 15[, writable_time_span=[15, 16[
reader state=0, writer state=0, end_time=20, read_start_time=6


[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [15, 16[ t=15

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 9) --> [7, 15[

[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 14)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [15, 16[ t=15

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=8, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=7, write_position=7, full=1
total_duration=8
last_write_time=14, readable_time_span=[7, 15[, writable_time_span=[15, 15[
reader state=-1, writer state=1, end_time=20, read_start_time=7


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 9)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=8, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=7, full=0
total_duration=8
last_write_time=14, readable_time_span=[8, 15[, writable_time_span=[15, 16[
reader state=0, writer state=-1, end_time=20, read_start_time=8


[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [15, 16[ t=15

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 15)....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=9, end=0), 
[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=5
last_write_time=9, readable_time_span=[5, 10[, writable_time_span=[10, 10[
reader state=5, writer state=0, end_time=20, read_start_time=5


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 9)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 6) --> [5, 10[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=5
last_write_time=9, readable_time_span=[5, 10[, writable_time_span=[10, 10[
reader state=-1, writer state=1, end_time=20, read_start_time=5


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 6)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=1, write_position=0, full=0
total_duration=5
last_write_time=9, readable_time_span=[6, 10[, writable_time_span=[10, 11[
reader state=0, writer state=1, end_time=20, read_start_time=6


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=6, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
cannot lock mutex for debug_print



[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 6)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [10, 11[ t=10

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 6) --> [6, 7[

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 10)....

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=6, readable_time_span=[6, 7[, writable_time_span=[7, 7[
reader state=-1, writer state=1, end_time=20, read_start_time=6


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 6)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=6, readable_time_span=[7, 7[, writable_time_span=[7, 8[
reader state=0, writer state=1, end_time=20, read_start_time=7


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 6)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
cannot lock mutex for debug_print



[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [7, 8[ t=7

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 6) --> [6, 7[

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 7)....

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 6)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=6, readable_time_span=[7, 7[, writable_time_span=[7, 8[
reader state=0, writer state=0, end_time=20, read_start_time=7


[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=6)

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=6)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 7)....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [7, 8[ t=7

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 7)....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 7) --> [6, 9[

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=6, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=6, readable_time_span=[6, 7[, writable_time_span=[7, 7[
reader state=1, writer state=0, end_time=20, read_start_time=6


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 6)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [7, 8[ t=7

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 7)....

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=10, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=6, write_position=5, full=0
total_duration=10
last_write_time=14, readable_time_span=[6, 15[, writable_time_span=[15, 16[
reader state=-1, writer state=-1, end_time=20, read_start_time=6


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 7)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=10, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=7, write_position=5, full=0
total_duration=10
last_write_time=14, readable_time_span=[7, 15[, writable_time_span=[15, 17[
reader state=0, writer state=-1, end_time=20, read_start_time=7


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=7, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=7, readable_time_span=[7, 8[, writable_time_span=[8, 8[
reader state=1, writer state=0, end_time=20, read_start_time=7


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 7)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 7) --> [7, 8[

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 7)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=15, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=15, readable_time_span=[15, 16[, writable_time_span=[16, 16[
reader state=1, writer state=0, end_time=20, read_start_time=15


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=15)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 15) --> [15, 16[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=15, readable_time_span=[15, 16[, writable_time_span=[16, 16[
reader state=-1, writer state=1, end_time=20, read_start_time=15


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 15)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=15, readable_time_span=[16, 16[, writable_time_span=[16, 17[
reader state=0, writer state=1, end_time=20, read_start_time=16


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=15, end=0), 
[frame_shape=(320, 240), required_duration=10, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=7, write_position=6, full=0
total_duration=10
last_write_time=15, readable_time_span=[7, 16[, writable_time_span=[16, 17[
reader state=0, writer state=0, end_time=20, read_start_time=7


[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [16, 17[ t=16

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 10) --> [8, 16[

[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 15)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [16, 17[ t=16

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=8, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=8
last_write_time=15, readable_time_span=[8, 16[, writable_time_span=[16, 16[
reader state=-1, writer state=1, end_time=20, read_start_time=8


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 10)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=8, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=1, write_position=0, full=0
total_duration=8
last_write_time=15, readable_time_span=[9, 16[, writable_time_span=[16, 17[
reader state=0, writer state=-1, end_time=20, read_start_time=9


[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [16, 17[ t=16

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 16)....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=10, end=0), 
[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=1, write_position=1, full=1
total_duration=5
last_write_time=10, readable_time_span=[6, 11[, writable_time_span=[11, 11[
reader state=5, writer state=0, end_time=20, read_start_time=6


[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 7) --> [6, 11[

[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 10)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=1, write_position=1, full=1
total_duration=5
last_write_time=10, readable_time_span=[6, 11[, writable_time_span=[11, 11[
reader state=-1, writer state=1, end_time=20, read_start_time=6


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 7)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=2, write_position=1, full=0
total_duration=5
last_write_time=10, readable_time_span=[7, 11[, writable_time_span=[11, 12[
reader state=0, writer state=1, end_time=20, read_start_time=7


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=7, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
cannot lock mutex for debug_print



[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 7)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [11, 12[ t=11

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 7) --> [7, 8[

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 11)....

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=7, readable_time_span=[7, 8[, writable_time_span=[8, 8[
reader state=-1, writer state=1, end_time=20, read_start_time=7


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 7)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=7, readable_time_span=[8, 8[, writable_time_span=[8, 9[
reader state=0, writer state=1, end_time=20, read_start_time=8


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 7)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
cannot lock mutex for debug_print



[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [8, 9[ t=8

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [8, 9[ t=8

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 8)....

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 8)....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 7) --> [7, 8[

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 8) --> [7, 10[

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=7, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=7, readable_time_span=[7, 8[, writable_time_span=[8, 8[
reader state=1, writer state=0, end_time=20, read_start_time=7


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 7)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [8, 9[ t=8

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 8)....

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 7)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=7, readable_time_span=[8, 8[, writable_time_span=[8, 9[
reader state=0, writer state=-1, end_time=20, read_start_time=8


[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=7)

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=7)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 8)....

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=10, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=7, write_position=6, full=0
total_duration=10
last_write_time=15, readable_time_span=[7, 16[, writable_time_span=[16, 17[
reader state=-1, writer state=-1, end_time=20, read_start_time=7


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 8)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=10, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=8, write_position=6, full=0
total_duration=10
last_write_time=15, readable_time_span=[8, 16[, writable_time_span=[16, 18[
reader state=0, writer state=-1, end_time=20, read_start_time=8


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=8, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=8, readable_time_span=[8, 9[, writable_time_span=[9, 9[
reader state=1, writer state=0, end_time=20, read_start_time=8


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 8)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 8) --> [8, 9[

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 8)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=16, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=16, readable_time_span=[16, 17[, writable_time_span=[17, 17[
reader state=1, writer state=0, end_time=20, read_start_time=16


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=16)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 16) --> [16, 17[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=16, readable_time_span=[16, 17[, writable_time_span=[17, 17[
reader state=-1, writer state=1, end_time=20, read_start_time=16


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 16)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=16, readable_time_span=[17, 17[, writable_time_span=[17, 18[
reader state=0, writer state=1, end_time=20, read_start_time=17


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=16, end=0), 
[frame_shape=(320, 240), required_duration=10, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=8, write_position=7, full=0
total_duration=10
last_write_time=16, readable_time_span=[8, 17[, writable_time_span=[17, 18[
reader state=0, writer state=0, end_time=20, read_start_time=8


[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [17, 18[ t=17

[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 16)

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 11) --> [9, 17[

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [17, 18[ t=17

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=8, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=1, write_position=1, full=1
total_duration=8
last_write_time=16, readable_time_span=[9, 17[, writable_time_span=[17, 17[
reader state=-1, writer state=1, end_time=20, read_start_time=9


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 11)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=8, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=2, write_position=1, full=0
total_duration=8
last_write_time=16, readable_time_span=[10, 17[, writable_time_span=[17, 18[
reader state=0, writer state=-1, end_time=20, read_start_time=10


[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [17, 18[ t=17

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 17)....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=11, end=0), 
[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=2, write_position=2, full=1
total_duration=5
last_write_time=11, readable_time_span=[7, 12[, writable_time_span=[12, 12[
reader state=5, writer state=0, end_time=20, read_start_time=7


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 11)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 8) --> [7, 12[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=2, write_position=2, full=1
total_duration=5
last_write_time=11, readable_time_span=[7, 12[, writable_time_span=[12, 12[
reader state=-1, writer state=1, end_time=20, read_start_time=7


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 8)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=3, write_position=2, full=0
total_duration=5
last_write_time=11, readable_time_span=[8, 12[, writable_time_span=[12, 13[
reader state=0, writer state=1, end_time=20, read_start_time=8


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=8, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
cannot lock mutex for debug_print



[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 8)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [12, 13[ t=12

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 8) --> [8, 9[

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 12)....

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=8, readable_time_span=[8, 9[, writable_time_span=[9, 9[
reader state=-1, writer state=1, end_time=20, read_start_time=8


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 8)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=8, readable_time_span=[9, 9[, writable_time_span=[9, 10[
reader state=0, writer state=1, end_time=20, read_start_time=9


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 8)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
cannot lock mutex for debug_print



[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [9, 10[ t=9

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [9, 10[ t=9

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 9)....

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 9)....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 8) --> [8, 9[

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 9) --> [8, 11[

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=8, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=8, readable_time_span=[8, 9[, writable_time_span=[9, 9[
reader state=1, writer state=0, end_time=20, read_start_time=8


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 8)

[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 8)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=8, readable_time_span=[9, 9[, writable_time_span=[9, 10[
reader state=0, writer state=0, end_time=20, read_start_time=9


[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=8)

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=8)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 9)....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [9, 10[ t=9

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 9)....

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=10, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=8, write_position=7, full=0
total_duration=10
last_write_time=16, readable_time_span=[8, 17[, writable_time_span=[17, 18[
reader state=-1, writer state=-1, end_time=20, read_start_time=8


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 9)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=10, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=9, write_position=7, full=0
total_duration=10
last_write_time=16, readable_time_span=[9, 17[, writable_time_span=[17, 19[
reader state=0, writer state=-1, end_time=20, read_start_time=9


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=9, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=9, readable_time_span=[9, 10[, writable_time_span=[10, 10[
reader state=1, writer state=0, end_time=20, read_start_time=9


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 9)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 9) --> [9, 10[

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 9)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=17, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=17, readable_time_span=[17, 18[, writable_time_span=[18, 18[
reader state=1, writer state=0, end_time=20, read_start_time=17


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=17)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 17) --> [17, 18[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=17, readable_time_span=[17, 18[, writable_time_span=[18, 18[
reader state=-1, writer state=1, end_time=20, read_start_time=17


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 17)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=17, readable_time_span=[18, 18[, writable_time_span=[18, 19[
reader state=0, writer state=1, end_time=20, read_start_time=18


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [18, 19[ t=18

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=17, end=0), 
[frame_shape=(320, 240), required_duration=10, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=9, write_position=8, full=0
total_duration=10
last_write_time=17, readable_time_span=[9, 18[, writable_time_span=[18, 19[
reader state=0, writer state=0, end_time=20, read_start_time=9


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 17)

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 12) --> [10, 18[

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [18, 19[ t=18

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=8, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=2, write_position=2, full=1
total_duration=8
last_write_time=17, readable_time_span=[10, 18[, writable_time_span=[18, 18[
reader state=-1, writer state=1, end_time=20, read_start_time=10


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 12)

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [18, 19[ t=18

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=8, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=3, write_position=2, full=0
total_duration=8
last_write_time=17, readable_time_span=[11, 18[, writable_time_span=[18, 19[
reader state=0, writer state=-1, end_time=20, read_start_time=11


[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 18)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=12, end=0), 
[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=3, write_position=3, full=1
total_duration=5
last_write_time=12, readable_time_span=[8, 13[, writable_time_span=[13, 13[
reader state=5, writer state=0, end_time=20, read_start_time=8


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 12)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 9) --> [8, 13[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=3, write_position=3, full=1
total_duration=5
last_write_time=12, readable_time_span=[8, 13[, writable_time_span=[13, 13[
reader state=-1, writer state=1, end_time=20, read_start_time=8


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 9)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=4, write_position=3, full=0
total_duration=5
last_write_time=12, readable_time_span=[9, 13[, writable_time_span=[13, 14[
reader state=0, writer state=1, end_time=20, read_start_time=9


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 9) --> [9, 10[

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [13, 14[ t=13

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=9, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=9, readable_time_span=[9, 10[, writable_time_span=[10, 10[
reader state=-1, writer state=0, end_time=20, read_start_time=9


[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 13)....

[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 9)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=9, readable_time_span=[9, 10[, writable_time_span=[10, 10[
reader state=-1, writer state=1, end_time=20, read_start_time=9


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 9)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=9, readable_time_span=[10, 10[, writable_time_span=[10, 11[
reader state=0, writer state=1, end_time=20, read_start_time=10


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 9)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
cannot lock mutex for debug_print



[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=9, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=9, readable_time_span=[9, 10[, writable_time_span=[10, 10[
reader state=1, writer state=0, end_time=20, read_start_time=9


[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [10, 11[ t=10

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [10, 11[ t=10

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 10)....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 9) --> [9, 10[

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 10)....

[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 9)

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 10) --> [9, 12[

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 9)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=9, readable_time_span=[10, 10[, writable_time_span=[10, 11[
reader state=0, writer state=-1, end_time=20, read_start_time=10


[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=9)

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [10, 11[ t=10

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=9)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 10)....

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 10)....

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=10, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=9, write_position=8, full=0
total_duration=10
last_write_time=17, readable_time_span=[9, 18[, writable_time_span=[18, 19[
reader state=-1, writer state=-1, end_time=20, read_start_time=9


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 10)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=10, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=8, full=0
total_duration=10
last_write_time=17, readable_time_span=[10, 18[, writable_time_span=[18, 20[
reader state=0, writer state=-1, end_time=20, read_start_time=10


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=10, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=10, readable_time_span=[10, 11[, writable_time_span=[11, 11[
reader state=1, writer state=0, end_time=20, read_start_time=10


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 10)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 10) --> [10, 11[

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 10)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=18, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=18, readable_time_span=[18, 19[, writable_time_span=[19, 19[
reader state=1, writer state=0, end_time=20, read_start_time=18


[src/graph/media_source_node.cc:19, pull_frame_]
source::pull().... (t=18)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 18) --> [18, 19[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=18, readable_time_span=[18, 19[, writable_time_span=[19, 19[
reader state=-1, writer state=1, end_time=20, read_start_time=18


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 18)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=18, readable_time_span=[19, 19[, writable_time_span=[19, 20[
reader state=0, writer state=1, end_time=20, read_start_time=19


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=18, end=0), 
[frame_shape=(320, 240), required_duration=10, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=9, full=0
total_duration=10
last_write_time=18, readable_time_span=[10, 19[, writable_time_span=[19, 20[
reader state=0, writer state=0, end_time=20, read_start_time=10


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 18)

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [19, 20[ t=19

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 13) --> [11, 19[

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [19, 20[ t=19

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=8, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=3, write_position=3, full=1
total_duration=8
last_write_time=18, readable_time_span=[11, 19[, writable_time_span=[19, 19[
reader state=-1, writer state=1, end_time=20, read_start_time=11


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 13)

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [19, 20[ t=19

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=8, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=4, write_position=3, full=0
total_duration=8
last_write_time=18, readable_time_span=[12, 19[, writable_time_span=[19, 20[
reader state=0, writer state=-1, end_time=20, read_start_time=12


[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 19)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=13, end=0), 
[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=4, write_position=4, full=1
total_duration=5
last_write_time=13, readable_time_span=[9, 14[, writable_time_span=[14, 14[
reader state=5, writer state=0, end_time=20, read_start_time=9


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 13)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 10) --> [9, 14[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=4, write_position=4, full=1
total_duration=5
last_write_time=13, readable_time_span=[9, 14[, writable_time_span=[14, 14[
reader state=-1, writer state=1, end_time=20, read_start_time=9


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 10)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=4, full=0
total_duration=5
last_write_time=13, readable_time_span=[10, 14[, writable_time_span=[14, 15[
reader state=0, writer state=1, end_time=20, read_start_time=10


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=10, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
cannot lock mutex for debug_print



[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 10)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [14, 15[ t=14

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 10) --> [10, 11[

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 14)....

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=10, readable_time_span=[10, 11[, writable_time_span=[11, 11[
reader state=-1, writer state=1, end_time=20, read_start_time=10


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 10)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=10, readable_time_span=[11, 11[, writable_time_span=[11, 12[
reader state=0, writer state=1, end_time=20, read_start_time=11


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 10)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
cannot lock mutex for debug_print



[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [11, 12[ t=11

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [11, 12[ t=11

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 11)....

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 11)....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 10) --> [10, 11[

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 11) --> [10, 13[

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=10, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=10, readable_time_span=[10, 11[, writable_time_span=[11, 11[
reader state=1, writer state=0, end_time=20, read_start_time=10


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 10)

[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 10)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=10, readable_time_span=[11, 11[, writable_time_span=[11, 12[
reader state=0, writer state=0, end_time=20, read_start_time=11


[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=10)

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [11, 12[ t=11

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=10)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 11)....

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 11)....

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=10, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=9, full=0
total_duration=10
last_write_time=18, readable_time_span=[10, 19[, writable_time_span=[19, 20[
reader state=-1, writer state=-1, end_time=20, read_start_time=10


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 11)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=10, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=1, write_position=9, full=0
total_duration=10
last_write_time=18, readable_time_span=[11, 19[, writable_time_span=[19, 21[
reader state=0, writer state=-1, end_time=20, read_start_time=11


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=11, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=11, readable_time_span=[11, 12[, writable_time_span=[12, 12[
reader state=1, writer state=0, end_time=20, read_start_time=11


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 11)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 11) --> [11, 12[

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 11)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_source_node.cc:50, pull_frame_]
source::pull() (t=19, end=1), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=19, readable_time_span=[19, 20[, writable_time_span=[20, 20[
reader state=1, writer state=0, end_time=20, read_start_time=19


[src/graph/media_source_node.cc:14, thread_main_]
source:: ended

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 19) --> [19, 20[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=19, readable_time_span=[19, 20[, writable_time_span=[20, 20[
reader state=-1, writer state=0, end_time=20, read_start_time=19


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 19)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=1 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=19, readable_time_span=[20, 20[, writable_time_span=[20, 21[
reader state=0, writer state=0, end_time=20, read_start_time=20


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=19, end=1), 
[frame_shape=(320, 240), required_duration=10, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=1, write_position=0, full=0
total_duration=10
last_write_time=19, readable_time_span=[11, 20[, writable_time_span=[20, 21[
reader state=0, writer state=0, end_time=20, read_start_time=11


[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 14) --> [12, 20[

[src/graph/media_node.cc:14, thread_main_]
node:: ended

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=8, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=4, write_position=4, full=1
total_duration=8
last_write_time=19, readable_time_span=[12, 20[, writable_time_span=[20, 20[
reader state=-1, writer state=0, end_time=20, read_start_time=12


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 14)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=8, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=5, write_position=4, full=0
total_duration=8
last_write_time=19, readable_time_span=[13, 20[, writable_time_span=[20, 21[
reader state=0, writer state=0, end_time=20, read_start_time=13


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=14, end=0), 
[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=5
last_write_time=14, readable_time_span=[10, 15[, writable_time_span=[15, 15[
reader state=5, writer state=0, end_time=20, read_start_time=10


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 14)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 11) --> [10, 15[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=5
last_write_time=14, readable_time_span=[10, 15[, writable_time_span=[15, 15[
reader state=-1, writer state=1, end_time=20, read_start_time=10


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 11)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=1, write_position=0, full=0
total_duration=5
last_write_time=14, readable_time_span=[11, 15[, writable_time_span=[15, 16[
reader state=0, writer state=1, end_time=20, read_start_time=11


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=11, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=11, readable_time_span=[11, 12[, writable_time_span=[12, 12[
reader state=1, writer state=0, end_time=20, read_start_time=11


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 11)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [15, 16[ t=15

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 11) --> [11, 12[

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 15)....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 15) --> [13, 20[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=8, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=5, write_position=4, full=0
total_duration=8
last_write_time=19, readable_time_span=[13, 20[, writable_time_span=[20, 21[
reader state=-1, writer state=0, end_time=20, read_start_time=13


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 15)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=8, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=6, write_position=4, full=0
total_duration=8
last_write_time=19, readable_time_span=[14, 20[, writable_time_span=[20, 22[
reader state=0, writer state=0, end_time=20, read_start_time=14


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=15, end=0), 
[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=1, write_position=1, full=1
total_duration=5
last_write_time=15, readable_time_span=[11, 16[, writable_time_span=[16, 16[
reader state=0, writer state=0, end_time=20, read_start_time=11


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 15)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=11, readable_time_span=[11, 12[, writable_time_span=[12, 12[
reader state=-1, writer state=1, end_time=20, read_start_time=11


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 11)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=11, readable_time_span=[12, 12[, writable_time_span=[12, 13[
reader state=0, writer state=1, end_time=20, read_start_time=12


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 11)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=11, readable_time_span=[12, 12[, writable_time_span=[12, 13[
reader state=0, writer state=1, end_time=20, read_start_time=12


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=11, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=11, readable_time_span=[11, 12[, writable_time_span=[12, 12[
reader state=1, writer state=0, end_time=20, read_start_time=11


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 11)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [12, 13[ t=12

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [12, 13[ t=12

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 12)....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 11) --> [11, 12[

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 12)....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 12) --> [11, 16[

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 11)

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 12) --> [11, 14[

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=11, readable_time_span=[12, 12[, writable_time_span=[12, 13[
reader state=0, writer state=1, end_time=20, read_start_time=12


[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [12, 13[ t=12

[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=11)

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=11)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 12)....

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 12)....

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=1, write_position=1, full=1
total_duration=5
last_write_time=15, readable_time_span=[11, 16[, writable_time_span=[16, 16[
reader state=-1, writer state=1, end_time=20, read_start_time=11


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 12)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=2, write_position=1, full=0
total_duration=5
last_write_time=15, readable_time_span=[12, 16[, writable_time_span=[16, 17[
reader state=0, writer state=1, end_time=20, read_start_time=12


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=12, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=12, readable_time_span=[12, 13[, writable_time_span=[13, 13[
reader state=0, writer state=0, end_time=20, read_start_time=12


[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [16, 17[ t=16

[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 12)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 16)....

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 16) --> [14, 20[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=10, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=1, write_position=0, full=0
total_duration=10
last_write_time=19, readable_time_span=[11, 20[, writable_time_span=[20, 21[
reader state=-1, writer state=0, end_time=20, read_start_time=11


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 12)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=10, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=2, write_position=0, full=0
total_duration=10
last_write_time=19, readable_time_span=[12, 20[, writable_time_span=[20, 22[
reader state=0, writer state=0, end_time=20, read_start_time=12


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=12, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
cannot lock mutex for debug_print



[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 12)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 12) --> [12, 13[

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 12)....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 12) --> [12, 13[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=8, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=6, write_position=4, full=0
total_duration=8
last_write_time=19, readable_time_span=[14, 20[, writable_time_span=[20, 22[
reader state=-1, writer state=0, end_time=20, read_start_time=14


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 16)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=8, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=7, write_position=4, full=0
total_duration=8
last_write_time=19, readable_time_span=[15, 20[, writable_time_span=[20, 23[
reader state=0, writer state=0, end_time=20, read_start_time=15


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=16, end=0), 
[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=2, write_position=2, full=1
total_duration=5
last_write_time=16, readable_time_span=[12, 17[, writable_time_span=[17, 17[
reader state=0, writer state=0, end_time=20, read_start_time=12


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 16)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=12, readable_time_span=[12, 13[, writable_time_span=[13, 13[
reader state=-1, writer state=1, end_time=20, read_start_time=12


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 12)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=12, readable_time_span=[13, 13[, writable_time_span=[13, 14[
reader state=0, writer state=1, end_time=20, read_start_time=13


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 12)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=12, readable_time_span=[13, 13[, writable_time_span=[13, 14[
reader state=0, writer state=1, end_time=20, read_start_time=13


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=12, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=12, readable_time_span=[12, 13[, writable_time_span=[13, 13[
reader state=1, writer state=0, end_time=20, read_start_time=12


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 12)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [13, 14[ t=13

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [13, 14[ t=13

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 12) --> [12, 13[

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 13)....

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 13)....

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 12)

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 13) --> [12, 15[

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=12, readable_time_span=[13, 13[, writable_time_span=[13, 14[
reader state=0, writer state=1, end_time=20, read_start_time=13


[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 13) --> [12, 17[

[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=12)

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=12)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 13)....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [13, 14[ t=13

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 13)....

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=2, write_position=2, full=1
total_duration=5
last_write_time=16, readable_time_span=[12, 17[, writable_time_span=[17, 17[
reader state=-1, writer state=1, end_time=20, read_start_time=12


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 13)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=3, write_position=2, full=0
total_duration=5
last_write_time=16, readable_time_span=[13, 17[, writable_time_span=[17, 18[
reader state=0, writer state=1, end_time=20, read_start_time=13


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=13, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=13, readable_time_span=[13, 14[, writable_time_span=[14, 14[
reader state=0, writer state=0, end_time=20, read_start_time=13


[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [17, 18[ t=17

[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 13)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 17)....

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=10, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=2, write_position=0, full=0
total_duration=10
last_write_time=19, readable_time_span=[12, 20[, writable_time_span=[20, 22[
reader state=-1, writer state=0, end_time=20, read_start_time=12


[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 17) --> [15, 20[

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 13)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=10, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=3, write_position=0, full=0
total_duration=10
last_write_time=19, readable_time_span=[13, 20[, writable_time_span=[20, 23[
reader state=0, writer state=0, end_time=20, read_start_time=13


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=13, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
cannot lock mutex for debug_print



[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 13) --> [13, 14[

[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 13)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 13)....

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 13) --> [13, 14[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=8, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=7, write_position=4, full=0
total_duration=8
last_write_time=19, readable_time_span=[15, 20[, writable_time_span=[20, 23[
reader state=-1, writer state=0, end_time=20, read_start_time=15


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 17)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=8, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=4, full=0
total_duration=8
last_write_time=19, readable_time_span=[16, 20[, writable_time_span=[20, 24[
reader state=0, writer state=0, end_time=20, read_start_time=16


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=17, end=0), 
[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=3, write_position=3, full=1
total_duration=5
last_write_time=17, readable_time_span=[13, 18[, writable_time_span=[18, 18[
reader state=0, writer state=0, end_time=20, read_start_time=13


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 17)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=13, readable_time_span=[13, 14[, writable_time_span=[14, 14[
reader state=-1, writer state=1, end_time=20, read_start_time=13


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 13)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=13, readable_time_span=[14, 14[, writable_time_span=[14, 15[
reader state=0, writer state=1, end_time=20, read_start_time=14


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 13)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=13, readable_time_span=[14, 14[, writable_time_span=[14, 15[
reader state=0, writer state=1, end_time=20, read_start_time=14


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=13, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=13, readable_time_span=[13, 14[, writable_time_span=[14, 14[
reader state=1, writer state=0, end_time=20, read_start_time=13


[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [14, 15[ t=14

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [14, 15[ t=14

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 14)....

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 14)....

[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 13)

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 14) --> [13, 16[

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 14) --> [13, 18[

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 13) --> [13, 14[

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 13)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=13, readable_time_span=[14, 14[, writable_time_span=[14, 15[
reader state=0, writer state=0, end_time=20, read_start_time=14


[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=13)

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=13)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 14)....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [14, 15[ t=14

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 14)....

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=3, write_position=3, full=1
total_duration=5
last_write_time=17, readable_time_span=[13, 18[, writable_time_span=[18, 18[
reader state=-1, writer state=1, end_time=20, read_start_time=13


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 14)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=4, write_position=3, full=0
total_duration=5
last_write_time=17, readable_time_span=[14, 18[, writable_time_span=[18, 19[
reader state=0, writer state=1, end_time=20, read_start_time=14


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=14, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=14, readable_time_span=[14, 15[, writable_time_span=[15, 15[
reader state=0, writer state=0, end_time=20, read_start_time=14


[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [18, 19[ t=18

[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 14)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 18)....

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=10, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=3, write_position=0, full=0
total_duration=10
last_write_time=19, readable_time_span=[13, 20[, writable_time_span=[20, 23[
reader state=-1, writer state=0, end_time=20, read_start_time=13


[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 18) --> [16, 20[

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 14)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=10, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=4, write_position=0, full=0
total_duration=10
last_write_time=19, readable_time_span=[14, 20[, writable_time_span=[20, 24[
reader state=0, writer state=0, end_time=20, read_start_time=14


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=14, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
cannot lock mutex for debug_print



[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 14)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 14) --> [14, 15[

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 14)....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 14) --> [14, 15[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=8, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=4, full=0
total_duration=8
last_write_time=19, readable_time_span=[16, 20[, writable_time_span=[20, 24[
reader state=-1, writer state=0, end_time=20, read_start_time=16


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 18)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=8, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=1, write_position=4, full=0
total_duration=8
last_write_time=19, readable_time_span=[17, 20[, writable_time_span=[20, 25[
reader state=0, writer state=0, end_time=20, read_start_time=17


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=18, end=0), 
[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=4, write_position=4, full=1
total_duration=5
last_write_time=18, readable_time_span=[14, 19[, writable_time_span=[19, 19[
reader state=0, writer state=0, end_time=20, read_start_time=14


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 18)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=14, readable_time_span=[14, 15[, writable_time_span=[15, 15[
reader state=-1, writer state=1, end_time=20, read_start_time=14


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 14)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=14, readable_time_span=[15, 15[, writable_time_span=[15, 16[
reader state=0, writer state=1, end_time=20, read_start_time=15


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 14)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=14, readable_time_span=[15, 15[, writable_time_span=[15, 16[
reader state=0, writer state=1, end_time=20, read_start_time=15


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [15, 16[ t=15

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [15, 16[ t=15

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 15)....

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 15)....

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=14, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=14, readable_time_span=[14, 15[, writable_time_span=[15, 15[
reader state=1, writer state=0, end_time=20, read_start_time=14


[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 15) --> [14, 17[

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 15) --> [14, 19[

[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 14)

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 14) --> [14, 15[

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 14)

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [15, 16[ t=15

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 15)....

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=14, readable_time_span=[15, 15[, writable_time_span=[15, 16[
reader state=0, writer state=-1, end_time=20, read_start_time=15


[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=14)

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=14)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 15)....

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=4, write_position=4, full=1
total_duration=5
last_write_time=18, readable_time_span=[14, 19[, writable_time_span=[19, 19[
reader state=-1, writer state=1, end_time=20, read_start_time=14


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 15)

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [19, 20[ t=19

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=4, full=0
total_duration=5
last_write_time=18, readable_time_span=[15, 19[, writable_time_span=[19, 20[
reader state=0, writer state=-1, end_time=20, read_start_time=15


[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 19)....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 19) --> [17, 20[

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=15, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=15, readable_time_span=[15, 16[, writable_time_span=[16, 16[
reader state=0, writer state=0, end_time=20, read_start_time=15


[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=10, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=4, write_position=0, full=0
total_duration=10
last_write_time=19, readable_time_span=[14, 20[, writable_time_span=[20, 24[
reader state=-1, writer state=0, end_time=20, read_start_time=14


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 15)

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 15)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=10, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=5, write_position=0, full=0
total_duration=10
last_write_time=19, readable_time_span=[15, 20[, writable_time_span=[20, 25[
reader state=0, writer state=0, end_time=20, read_start_time=15


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=15, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=15, readable_time_span=[15, 16[, writable_time_span=[16, 16[
reader state=-1, writer state=0, end_time=20, read_start_time=15


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 15)

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 15) --> [15, 16[

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 15)....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 15) --> [15, 16[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=8, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=1, write_position=4, full=0
total_duration=8
last_write_time=19, readable_time_span=[17, 20[, writable_time_span=[20, 25[
reader state=-1, writer state=0, end_time=20, read_start_time=17


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 19)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=8, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=2, write_position=4, full=0
total_duration=8
last_write_time=19, readable_time_span=[18, 20[, writable_time_span=[20, 26[
reader state=0, writer state=0, end_time=20, read_start_time=18


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=19, end=1), 
[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=5
last_write_time=19, readable_time_span=[15, 20[, writable_time_span=[20, 20[
reader state=0, writer state=0, end_time=20, read_start_time=15


[src/graph/media_node.cc:14, thread_main_]
node:: ended

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=15, readable_time_span=[15, 16[, writable_time_span=[16, 16[
reader state=-1, writer state=1, end_time=20, read_start_time=15


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 15)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=15, readable_time_span=[16, 16[, writable_time_span=[16, 17[
reader state=0, writer state=1, end_time=20, read_start_time=16


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 15)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=15, readable_time_span=[16, 16[, writable_time_span=[16, 17[
reader state=0, writer state=-1, end_time=20, read_start_time=16


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [16, 17[ t=16

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=15, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=15, readable_time_span=[15, 16[, writable_time_span=[16, 16[
reader state=1, writer state=0, end_time=20, read_start_time=15


[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [16, 17[ t=16

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 16)....

[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 15)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 16)....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 16) --> [15, 20[

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 15) --> [15, 16[

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 16) --> [15, 18[

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 15)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=15, readable_time_span=[16, 16[, writable_time_span=[16, 17[
reader state=0, writer state=1, end_time=20, read_start_time=16


[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=15)

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=15)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 16)....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [16, 17[ t=16

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 16)....

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=5
last_write_time=19, readable_time_span=[15, 20[, writable_time_span=[20, 20[
reader state=-1, writer state=0, end_time=20, read_start_time=15


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 16)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=1, write_position=0, full=0
total_duration=5
last_write_time=19, readable_time_span=[16, 20[, writable_time_span=[20, 21[
reader state=0, writer state=0, end_time=20, read_start_time=16


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=16, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=16, readable_time_span=[16, 17[, writable_time_span=[17, 17[
reader state=0, writer state=0, end_time=20, read_start_time=16


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 16)

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=10, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=5, write_position=0, full=0
total_duration=10
last_write_time=19, readable_time_span=[15, 20[, writable_time_span=[20, 25[
reader state=-1, writer state=0, end_time=20, read_start_time=15


[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 16)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=10, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=6, write_position=0, full=0
total_duration=10
last_write_time=19, readable_time_span=[16, 20[, writable_time_span=[20, 26[
reader state=0, writer state=0, end_time=20, read_start_time=16


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=16, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=16, readable_time_span=[16, 17[, writable_time_span=[17, 17[
reader state=1, writer state=0, end_time=20, read_start_time=16


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 16)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 16) --> [16, 17[

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 16)....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 16) --> [16, 17[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=16, readable_time_span=[16, 17[, writable_time_span=[17, 17[
reader state=-1, writer state=1, end_time=20, read_start_time=16


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 16)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=16, readable_time_span=[17, 17[, writable_time_span=[17, 18[
reader state=0, writer state=1, end_time=20, read_start_time=17


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 16)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=16, readable_time_span=[17, 17[, writable_time_span=[17, 18[
reader state=0, writer state=1, end_time=20, read_start_time=17


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=16, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=16, readable_time_span=[16, 17[, writable_time_span=[17, 17[
reader state=1, writer state=0, end_time=20, read_start_time=16


[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [17, 18[ t=17

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 16) --> [16, 17[

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [17, 18[ t=17

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 17)....

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 16)

[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 16)

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 17) --> [16, 19[

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 17)....

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=16, readable_time_span=[17, 17[, writable_time_span=[17, 18[
reader state=0, writer state=0, end_time=20, read_start_time=17


[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [17, 18[ t=17

[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=16)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 17)....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 17) --> [16, 20[

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=16)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 17)....

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=1, write_position=0, full=0
total_duration=5
last_write_time=19, readable_time_span=[16, 20[, writable_time_span=[20, 21[
reader state=-1, writer state=0, end_time=20, read_start_time=16


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 17)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=2, write_position=0, full=0
total_duration=5
last_write_time=19, readable_time_span=[17, 20[, writable_time_span=[20, 22[
reader state=0, writer state=0, end_time=20, read_start_time=17


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=17, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=17, readable_time_span=[17, 18[, writable_time_span=[18, 18[
reader state=0, writer state=0, end_time=20, read_start_time=17


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 17)

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=10, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=6, write_position=0, full=0
total_duration=10
last_write_time=19, readable_time_span=[16, 20[, writable_time_span=[20, 26[
reader state=-1, writer state=0, end_time=20, read_start_time=16


[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 17)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=10, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=7, write_position=0, full=0
total_duration=10
last_write_time=19, readable_time_span=[17, 20[, writable_time_span=[20, 27[
reader state=0, writer state=0, end_time=20, read_start_time=17


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=17, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=17, readable_time_span=[17, 18[, writable_time_span=[18, 18[
reader state=1, writer state=0, end_time=20, read_start_time=17


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 17)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 17) --> [17, 18[

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 17)....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 17) --> [17, 18[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=17, readable_time_span=[17, 18[, writable_time_span=[18, 18[
reader state=-1, writer state=1, end_time=20, read_start_time=17


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 17)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=17, readable_time_span=[18, 18[, writable_time_span=[18, 19[
reader state=0, writer state=1, end_time=20, read_start_time=18


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 17)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=17, readable_time_span=[18, 18[, writable_time_span=[18, 19[
reader state=0, writer state=1, end_time=20, read_start_time=18


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=17, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=17, readable_time_span=[17, 18[, writable_time_span=[18, 18[
reader state=1, writer state=0, end_time=20, read_start_time=17


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 17)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [18, 19[ t=18

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [18, 19[ t=18

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 18)....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 17) --> [17, 18[

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 18)....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 18) --> [17, 20[

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [18, 19[ t=18

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 18)....

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 17)

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 18) --> [17, 20[

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=17, readable_time_span=[18, 18[, writable_time_span=[18, 19[
reader state=0, writer state=-1, end_time=20, read_start_time=18


[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=17)

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=17)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 18)....

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=2, write_position=0, full=0
total_duration=5
last_write_time=19, readable_time_span=[17, 20[, writable_time_span=[20, 22[
reader state=-1, writer state=0, end_time=20, read_start_time=17


[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=10, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=7, write_position=0, full=0
total_duration=10
last_write_time=19, readable_time_span=[17, 20[, writable_time_span=[20, 27[
reader state=-1, writer state=0, end_time=20, read_start_time=17


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 18)

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 18)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=3, write_position=0, full=0
total_duration=5
last_write_time=19, readable_time_span=[18, 20[, writable_time_span=[20, 23[
reader state=0, writer state=0, end_time=20, read_start_time=18


[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=10, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=8, write_position=0, full=0
total_duration=10
last_write_time=19, readable_time_span=[18, 20[, writable_time_span=[20, 28[
reader state=0, writer state=0, end_time=20, read_start_time=18


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=18, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=18, readable_time_span=[18, 19[, writable_time_span=[19, 19[
reader state=0, writer state=0, end_time=20, read_start_time=18


[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=18, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=18, readable_time_span=[18, 19[, writable_time_span=[19, 19[
reader state=1, writer state=0, end_time=20, read_start_time=18


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 18)

[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 18)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 18) --> [18, 19[

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 18)....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 18) --> [18, 19[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=18, readable_time_span=[18, 19[, writable_time_span=[19, 19[
reader state=-1, writer state=1, end_time=20, read_start_time=18


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 18)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=18, readable_time_span=[19, 19[, writable_time_span=[19, 20[
reader state=0, writer state=1, end_time=20, read_start_time=19


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 18)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=18, readable_time_span=[19, 19[, writable_time_span=[19, 20[
reader state=0, writer state=1, end_time=20, read_start_time=19


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=18, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=18, readable_time_span=[18, 19[, writable_time_span=[19, 19[
reader state=1, writer state=0, end_time=20, read_start_time=18


[src/graph/media_node.cc:19, pull_frame_]
node::pull().... (time = 18)

[test/../src/graph/media_node_output.h:48, begin_write]
output::begin_write()....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [19, 20[ t=19

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [19, 20[ t=19

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 19)....

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 19)....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 18) --> [18, 19[

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 19) --> [18, 20[

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 18)

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 19) --> [18, 20[

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=18, readable_time_span=[19, 19[, writable_time_span=[19, 20[
reader state=0, writer state=1, end_time=20, read_start_time=19


[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=18)

[src/graph/media_sink_node.cc:6, pull_frame_]
sink::pull().... (t=18)

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 19)....

[test/../src/graph/media_node_output.h:52, begin_write]
output::begin_write() --> [19, 20[ t=19

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 19)....

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=3, write_position=0, full=0
total_duration=5
last_write_time=19, readable_time_span=[18, 20[, writable_time_span=[20, 23[
reader state=-1, writer state=0, end_time=20, read_start_time=18


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 19)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=5, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=4, write_position=0, full=0
total_duration=5
last_write_time=19, readable_time_span=[19, 20[, writable_time_span=[20, 24[
reader state=0, writer state=0, end_time=20, read_start_time=19


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=19, end=1), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=19, readable_time_span=[19, 20[, writable_time_span=[20, 20[
reader state=0, writer state=0, end_time=20, read_start_time=19


[src/graph/media_node.cc:14, thread_main_]
node:: ended

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=10, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=8, write_position=0, full=0
total_duration=10
last_write_time=19, readable_time_span=[18, 20[, writable_time_span=[20, 28[
reader state=-1, writer state=0, end_time=20, read_start_time=18


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 19)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=10, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=9, write_position=0, full=0
total_duration=10
last_write_time=19, readable_time_span=[19, 20[, writable_time_span=[20, 29[
reader state=0, writer state=0, end_time=20, read_start_time=19


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=19, end=1), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=19, readable_time_span=[19, 20[, writable_time_span=[20, 20[
reader state=1, writer state=0, end_time=20, read_start_time=19


[src/graph/media_node.cc:14, thread_main_]
node:: ended

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 19) --> [19, 20[

[test/../src/graph/media_node_input.tcc:22, begin_read]
input::begin_read(time = 19)....

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 19) --> [19, 20[

[src/graph/media_node.cc:42, pull_frame_]
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=19, readable_time_span=[19, 20[, writable_time_span=[20, 20[
reader state=-1, writer state=0, end_time=20, read_start_time=19


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 19)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=1 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=19, readable_time_span=[20, 20[, writable_time_span=[20, 21[
reader state=0, writer state=0, end_time=20, read_start_time=20


[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 19)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=1 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=19, readable_time_span=[20, 20[, writable_time_span=[20, 21[
reader state=0, writer state=0, end_time=20, read_start_time=20


[test/../src/graph/media_node_output.h:57, end_write]
output::end_write()....

[test/../src/graph/media_node_output.h:64, end_write]
output::end_write()

[src/graph/media_node.cc:54, pull_frame_]
node::pull() (t=19, end=1), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=19, readable_time_span=[19, 20[, writable_time_span=[20, 20[
reader state=1, writer state=0, end_time=20, read_start_time=19


[src/graph/media_node.cc:14, thread_main_]
node:: ended

[test/../src/graph/media_node_input.tcc:39, begin_read]
input::begin_read(time = 19) --> [19, 20[

[test/../src/graph/media_node_input.tcc:50, end_read]
input::end_read(time = 19)

[test/../src/graph/media_node_input.tcc:58, reached_end]
reader_reached_end=1 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=19, readable_time_span=[20, 20[, writable_time_span=[20, 21[
reader state=0, writer state=0, end_time=20, read_start_time=20


[src/graph/media_sink_node.cc:23, pull_frame_]
sink: reached end!

[src/graph/media_sink_node.cc:25, pull_frame_]
sink::pull() (t=19)

[src/graph/media_graph.cc:53, run]
graph::reached end!

[src/graph/media_graph.cc:17, ~media_graph]
media_graph stopping

[src/graph/media_graph.cc:19, ~media_graph]
media_graph no more

