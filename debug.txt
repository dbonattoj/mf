[src/flow/sink_node.cc:7, pull_frame_]: 
sink::pull().... (t=-1)

[src/flow/source_node.cc:25, pull_frame_]: 
source::pull().... (t=-1)

[test/../src/flow/node_output.h:51, begin_write]: 
output::begin_write()....

[test/../src/flow/node_input.tcc:60, reached_end]: 
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=-1, readable_time_span=[0, 0[, writable_time_span=[0, 1[
reader state=0, writer state=0, end_time=11, read_start_time=0


[test/../src/flow/node_input.tcc:22, begin_read]: 
input::begin_read(time = 0)....

[test/../src/flow/node_output.h:57, begin_write]: 
output::begin_write() --> [0, 1[ t=0

[test/../src/flow/node_output.h:63, end_write]: 
output::end_write()....

[test/../src/flow/node_output.h:70, end_write]: 
output::end_write()

[test/../src/flow/node_input.tcc:40, begin_read]: 
input::begin_read(time = 0) --> [0, 1[

[src/flow/source_node.cc:54, pull_frame_]: 
source::pull() (t=0, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=0, readable_time_span=[0, 1[, writable_time_span=[1, 1[
reader state=-1, writer state=0, end_time=11, read_start_time=0


[test/../src/flow/node_input.tcc:52, end_read]: 
input::end_read(time = 0)

[src/flow/source_node.cc:25, pull_frame_]: 
source::pull().... (t=0)

[test/../src/flow/node_output.h:51, begin_write]: 
output::begin_write()....

[test/../src/flow/node_input.tcc:60, reached_end]: 
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=0, readable_time_span=[1, 1[, writable_time_span=[1, 2[
reader state=0, writer state=0, end_time=11, read_start_time=1


[test/../src/flow/node_output.h:57, begin_write]: 
output::begin_write() --> [1, 2[ t=1

[src/flow/sink_node.cc:37, pull_frame_]: 
sink::pull() (t=0)

[src/flow/sink_node.cc:7, pull_frame_]: 
sink::pull().... (t=0)

[test/../src/flow/node_input.tcc:60, reached_end]: 
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=0, readable_time_span=[1, 1[, writable_time_span=[1, 2[
reader state=0, writer state=-1, end_time=11, read_start_time=1


[test/../src/flow/node_input.tcc:22, begin_read]: 
input::begin_read(time = 1)....

[test/../src/flow/node_output.h:63, end_write]: 
output::end_write()....

[test/../src/flow/node_output.h:70, end_write]: 
output::end_write()

[src/flow/source_node.cc:54, pull_frame_]: 
source::pull() (t=1, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=1, readable_time_span=[1, 2[, writable_time_span=[2, 2[
reader state=1, writer state=0, end_time=11, read_start_time=1


[src/flow/source_node.cc:25, pull_frame_]: 
source::pull().... (t=1)

[test/../src/flow/node_output.h:51, begin_write]: 
output::begin_write()....

[test/../src/flow/node_input.tcc:40, begin_read]: 
input::begin_read(time = 1) --> [1, 2[

[test/../src/flow/node_input.tcc:52, end_read]: 
input::end_read(time = 1)

[test/../src/flow/node_input.tcc:60, reached_end]: 
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=1, readable_time_span=[2, 2[, writable_time_span=[2, 3[
reader state=0, writer state=1, end_time=11, read_start_time=2


[src/flow/sink_node.cc:37, pull_frame_]: 
sink::pull() (t=1)

[src/flow/sink_node.cc:7, pull_frame_]: 
sink::pull().... (t=1)

[test/../src/flow/node_output.h:57, begin_write]: 
output::begin_write() --> [2, 3[ t=2

[test/../src/flow/node_input.tcc:60, reached_end]: 
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=1, readable_time_span=[2, 2[, writable_time_span=[2, 3[
reader state=0, writer state=-1, end_time=11, read_start_time=2


[test/../src/flow/node_output.h:63, end_write]: 
output::end_write()....

[test/../src/flow/node_output.h:70, end_write]: 
output::end_write()

[src/flow/source_node.cc:54, pull_frame_]: 
source::pull() (t=2, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=2, readable_time_span=[2, 3[, writable_time_span=[3, 3[
reader state=0, writer state=0, end_time=11, read_start_time=2


[src/flow/source_node.cc:25, pull_frame_]: 
source::pull().... (t=2)

[test/../src/flow/node_output.h:51, begin_write]: 
output::begin_write()....

[test/../src/flow/node_output.h:57, begin_write]: 
output::begin_write() --> [3, 4[ t=3

[test/../src/flow/node_input.tcc:60, reached_end]: 
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=2, readable_time_span=[3, 3[, writable_time_span=[3, 4[
reader state=0, writer state=-1, end_time=11, read_start_time=3


[src/flow/sink_node.cc:37, pull_frame_]: 
sink::pull() (t=2)

[src/flow/sink_node.cc:7, pull_frame_]: 
sink::pull().... (t=2)

[test/../src/flow/node_input.tcc:60, reached_end]: 
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=2, readable_time_span=[3, 3[, writable_time_span=[3, 4[
reader state=0, writer state=-1, end_time=11, read_start_time=3


[test/../src/flow/node_output.h:63, end_write]: 
output::end_write()....

[test/../src/flow/node_output.h:70, end_write]: 
output::end_write()

[src/flow/source_node.cc:54, pull_frame_]: 
source::pull() (t=3, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=3, readable_time_span=[3, 4[, writable_time_span=[4, 4[
reader state=0, writer state=0, end_time=11, read_start_time=3


[src/flow/source_node.cc:25, pull_frame_]: 
source::pull().... (t=3)

[test/../src/flow/node_output.h:51, begin_write]: 
output::begin_write()....

[test/../src/flow/node_output.h:57, begin_write]: 
output::begin_write() --> [4, 5[ t=4

[test/../src/flow/node_input.tcc:60, reached_end]: 
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=3, readable_time_span=[4, 4[, writable_time_span=[4, 5[
reader state=0, writer state=-1, end_time=11, read_start_time=4


[src/flow/sink_node.cc:37, pull_frame_]: 
sink::pull() (t=3)

[src/flow/sink_node.cc:7, pull_frame_]: 
sink::pull().... (t=3)

[test/../src/flow/node_input.tcc:60, reached_end]: 
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=3, readable_time_span=[4, 4[, writable_time_span=[4, 5[
reader state=0, writer state=-1, end_time=11, read_start_time=4


[test/../src/flow/node_output.h:63, end_write]: 
output::end_write()....

[test/../src/flow/node_output.h:70, end_write]: 
output::end_write()

[src/flow/source_node.cc:54, pull_frame_]: 
source::pull() (t=4, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=4, readable_time_span=[4, 5[, writable_time_span=[5, 5[
reader state=0, writer state=0, end_time=11, read_start_time=4


[test/../src/flow/node_input.tcc:60, reached_end]: 
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=4, readable_time_span=[5, 5[, writable_time_span=[5, 6[
reader state=0, writer state=0, end_time=11, read_start_time=5


[src/flow/sink_node.cc:37, pull_frame_]: 
sink::pull() (t=4)

[src/flow/sink_node.cc:7, pull_frame_]: 
sink::pull().... (t=4)

[src/flow/source_node.cc:25, pull_frame_]: 
source::pull().... (t=4)

[test/../src/flow/node_output.h:51, begin_write]: 
output::begin_write()....

[test/../src/flow/node_input.tcc:60, reached_end]: 
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=4, readable_time_span=[5, 5[, writable_time_span=[5, 6[
reader state=0, writer state=0, end_time=11, read_start_time=5


[test/../src/flow/node_output.h:57, begin_write]: 
output::begin_write() --> [5, 6[ t=5

[test/../src/flow/node_output.h:63, end_write]: 
output::end_write()....

[test/../src/flow/node_output.h:70, end_write]: 
output::end_write()

[src/flow/source_node.cc:54, pull_frame_]: 
source::pull() (t=5, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=5, readable_time_span=[5, 6[, writable_time_span=[6, 6[
reader state=0, writer state=0, end_time=11, read_start_time=5


[src/flow/source_node.cc:25, pull_frame_]: 
source::pull().... (t=5)

[test/../src/flow/node_output.h:51, begin_write]: 
output::begin_write()....

[test/../src/flow/node_output.h:57, begin_write]: 
output::begin_write() --> [6, 7[ t=6

[test/../src/flow/node_input.tcc:60, reached_end]: 
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=5, readable_time_span=[6, 6[, writable_time_span=[6, 7[
reader state=0, writer state=-1, end_time=11, read_start_time=6


[src/flow/sink_node.cc:37, pull_frame_]: 
sink::pull() (t=5)

[src/flow/sink_node.cc:7, pull_frame_]: 
sink::pull().... (t=5)

[test/../src/flow/node_input.tcc:60, reached_end]: 
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=5, readable_time_span=[6, 6[, writable_time_span=[6, 7[
reader state=0, writer state=-1, end_time=11, read_start_time=6


[test/../src/flow/node_input.tcc:22, begin_read]: 
input::begin_read(time = 6)....

[test/../src/flow/node_output.h:63, end_write]: 
output::end_write()....

[test/../src/flow/node_output.h:70, end_write]: 
output::end_write()

[src/flow/source_node.cc:54, pull_frame_]: 
source::pull() (t=6, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=6, readable_time_span=[6, 7[, writable_time_span=[7, 7[
reader state=1, writer state=0, end_time=11, read_start_time=6


[src/flow/source_node.cc:25, pull_frame_]: 
source::pull().... (t=6)

[test/../src/flow/node_output.h:51, begin_write]: 
output::begin_write()....

[test/../src/flow/node_input.tcc:40, begin_read]: 
input::begin_read(time = 6) --> [6, 7[

[test/../src/flow/node_input.tcc:52, end_read]: 
input::end_read(time = 6)

[test/../src/flow/node_output.h:57, begin_write]: 
output::begin_write() --> [7, 8[ t=7

[test/../src/flow/node_input.tcc:60, reached_end]: 
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=6, readable_time_span=[7, 7[, writable_time_span=[7, 8[
reader state=0, writer state=-1, end_time=11, read_start_time=7


[src/flow/sink_node.cc:37, pull_frame_]: 
sink::pull() (t=6)

[src/flow/sink_node.cc:7, pull_frame_]: 
sink::pull().... (t=6)

[test/../src/flow/node_input.tcc:60, reached_end]: 
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=6, readable_time_span=[7, 7[, writable_time_span=[7, 8[
reader state=0, writer state=-1, end_time=11, read_start_time=7


[test/../src/flow/node_input.tcc:22, begin_read]: 
input::begin_read(time = 7)....

[test/../src/flow/node_output.h:63, end_write]: 
output::end_write()....

[test/../src/flow/node_output.h:70, end_write]: 
output::end_write()

[src/flow/source_node.cc:54, pull_frame_]: 
source::pull() (t=7, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=7, readable_time_span=[7, 8[, writable_time_span=[8, 8[
reader state=-1, writer state=0, end_time=11, read_start_time=7


[src/flow/source_node.cc:25, pull_frame_]: 
source::pull().... (t=7)

[test/../src/flow/node_input.tcc:40, begin_read]: 
input::begin_read(time = 7) --> [7, 8[

[test/../src/flow/node_output.h:51, begin_write]: 
output::begin_write()....

[test/../src/flow/node_input.tcc:52, end_read]: 
input::end_read(time = 7)

[test/../src/flow/node_output.h:57, begin_write]: 
output::begin_write() --> [8, 9[ t=8

[test/../src/flow/node_input.tcc:60, reached_end]: 
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=7, readable_time_span=[8, 8[, writable_time_span=[8, 9[
reader state=0, writer state=-1, end_time=11, read_start_time=8


[src/flow/sink_node.cc:37, pull_frame_]: 
sink::pull() (t=7)

[src/flow/sink_node.cc:7, pull_frame_]: 
sink::pull().... (t=7)

[test/../src/flow/node_input.tcc:60, reached_end]: 
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=7, readable_time_span=[8, 8[, writable_time_span=[8, 9[
reader state=0, writer state=-1, end_time=11, read_start_time=8


[test/../src/flow/node_output.h:63, end_write]: 
output::end_write()....

[test/../src/flow/node_output.h:70, end_write]: 
output::end_write()

[src/flow/source_node.cc:54, pull_frame_]: 
source::pull() (t=8, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=8, readable_time_span=[8, 9[, writable_time_span=[9, 9[
reader state=0, writer state=0, end_time=11, read_start_time=8


[src/flow/source_node.cc:25, pull_frame_]: 
source::pull().... (t=8)

[test/../src/flow/node_output.h:51, begin_write]: 
output::begin_write()....

[test/../src/flow/node_output.h:57, begin_write]: 
output::begin_write() --> [9, 10[ t=9

[test/../src/flow/node_input.tcc:60, reached_end]: 
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=8, readable_time_span=[9, 9[, writable_time_span=[9, 10[
reader state=0, writer state=-1, end_time=11, read_start_time=9


[src/flow/sink_node.cc:37, pull_frame_]: 
sink::pull() (t=8)

[src/flow/sink_node.cc:7, pull_frame_]: 
sink::pull().... (t=8)

[test/../src/flow/node_input.tcc:60, reached_end]: 
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=8, readable_time_span=[9, 9[, writable_time_span=[9, 10[
reader state=0, writer state=-1, end_time=11, read_start_time=9


[test/../src/flow/node_output.h:63, end_write]: 
output::end_write()....

[test/../src/flow/node_output.h:70, end_write]: 
output::end_write()

[src/flow/source_node.cc:54, pull_frame_]: 
source::pull() (t=9, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=9, readable_time_span=[9, 10[, writable_time_span=[10, 10[
reader state=0, writer state=0, end_time=11, read_start_time=9


[src/flow/source_node.cc:25, pull_frame_]: 
source::pull().... (t=9)

[test/../src/flow/node_output.h:51, begin_write]: 
output::begin_write()....

[test/../src/flow/node_output.h:57, begin_write]: 
output::begin_write() --> [10, 11[ t=10

[test/../src/flow/node_input.tcc:60, reached_end]: 
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=9, readable_time_span=[10, 10[, writable_time_span=[10, 11[
reader state=0, writer state=-1, end_time=11, read_start_time=10


[src/flow/sink_node.cc:37, pull_frame_]: 
sink::pull() (t=9)

[src/flow/sink_node.cc:7, pull_frame_]: 
sink::pull().... (t=9)

[test/../src/flow/node_input.tcc:60, reached_end]: 
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=9, readable_time_span=[10, 10[, writable_time_span=[10, 11[
reader state=0, writer state=-1, end_time=11, read_start_time=10


[test/../src/flow/node_input.tcc:22, begin_read]: 
input::begin_read(time = 10)....

[test/../src/flow/node_output.h:63, end_write]: 
output::end_write()....

[test/../src/flow/node_output.h:70, end_write]: 
output::end_write()

[src/flow/source_node.cc:54, pull_frame_]: 
source::pull() (t=10, end=1), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=10, readable_time_span=[10, 11[, writable_time_span=[11, 11[
reader state=1, writer state=0, end_time=11, read_start_time=10


[test/../src/flow/node_input.tcc:40, begin_read]: 
input::begin_read(time = 10) --> [10, 11[

[test/../src/flow/node_input.tcc:52, end_read]: 
input::end_read(time = 10)

[test/../src/flow/node_input.tcc:60, reached_end]: 
reader_reached_end=1 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=10, readable_time_span=[11, 11[, writable_time_span=[11, 12[
reader state=0, writer state=0, end_time=11, read_start_time=11


[src/flow/source_node.cc:14, thread_main_]: 
source:: ended

[src/flow/sink_node.cc:35, pull_frame_]: 
sink: reached end!

[src/flow/sink_node.cc:37, pull_frame_]: 
sink::pull() (t=10)

[src/flow/graph.cc:53, run_until]: 
graph::reached end!

[src/flow/sink_node.cc:7, pull_frame_]: 
sink::pull().... (t=-1)

[src/flow/source_node.cc:25, pull_frame_]: 
source::pull().... (t=-1)

[test/../src/flow/node_input.tcc:60, reached_end]: 
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=-1, readable_time_span=[0, 0[, writable_time_span=[0, 1[
reader state=0, writer state=0, end_time=11, read_start_time=0


[src/flow/node.cc:23, pull_frame_]: 
node::pull().... (time = -1)

[test/../src/flow/node_output.h:51, begin_write]: 
output::begin_write()....

[test/../src/flow/node_input.tcc:22, begin_read]: 
input::begin_read(time = 0)....

[test/../src/flow/node_output.h:51, begin_write]: 
output::begin_write()....

[test/../src/flow/node_output.h:57, begin_write]: 
output::begin_write() --> [0, 1[ t=0

[test/../src/flow/node_output.h:57, begin_write]: 
output::begin_write() --> [0, 1[ t=0

[test/../src/flow/node_input.tcc:60, reached_end]: 
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=-1, readable_time_span=[0, 0[, writable_time_span=[0, 1[
reader state=0, writer state=-1, end_time=11, read_start_time=0


[test/../src/flow/node_input.tcc:22, begin_read]: 
input::begin_read(time = 0)....

[test/../src/flow/node_output.h:63, end_write]: 
output::end_write()....

[test/../src/flow/node_output.h:70, end_write]: 
output::end_write()

[src/flow/source_node.cc:54, pull_frame_]: 
source::pull() (t=0, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=0, readable_time_span=[0, 1[, writable_time_span=[1, 1[
reader state=1, writer state=0, end_time=11, read_start_time=0


[src/flow/source_node.cc:25, pull_frame_]: 
source::pull().... (t=0)

[test/../src/flow/node_output.h:51, begin_write]: 
output::begin_write()....

[test/../src/flow/node_input.tcc:40, begin_read]: 
input::begin_read(time = 0) --> [0, 1[

[src/flow/node.cc:53, pull_frame_]: 
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=0, readable_time_span=[0, 1[, writable_time_span=[1, 1[
reader state=-1, writer state=1, end_time=11, read_start_time=0


[test/../src/flow/node_input.tcc:52, end_read]: 
input::end_read(time = 0)

[test/../src/flow/node_input.tcc:60, reached_end]: 
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=0, readable_time_span=[1, 1[, writable_time_span=[1, 2[
reader state=0, writer state=1, end_time=11, read_start_time=1


[test/../src/flow/node_output.h:63, end_write]: 
output::end_write()....

[test/../src/flow/node_output.h:70, end_write]: 
output::end_write()

[test/../src/flow/node_output.h:57, begin_write]: 
output::begin_write() --> [1, 2[ t=1

[test/../src/flow/node_input.tcc:40, begin_read]: 
input::begin_read(time = 0) --> [0, 1[

[src/flow/node.cc:67, pull_frame_]: 
node::pull() (t=0, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=0, readable_time_span=[0, 1[, writable_time_span=[1, 1[
reader state=-1, writer state=0, end_time=11, read_start_time=0


[test/../src/flow/node_input.tcc:52, end_read]: 
input::end_read(time = 0)

[src/flow/node.cc:23, pull_frame_]: 
node::pull().... (time = 0)

[test/../src/flow/node_output.h:51, begin_write]: 
output::begin_write()....

[test/../src/flow/node_input.tcc:60, reached_end]: 
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=0, readable_time_span=[1, 1[, writable_time_span=[1, 2[
reader state=0, writer state=0, end_time=11, read_start_time=1


[test/../src/flow/node_output.h:57, begin_write]: 
output::begin_write() --> [1, 2[ t=1

[src/flow/sink_node.cc:37, pull_frame_]: 
sink::pull() (t=0)

[src/flow/sink_node.cc:7, pull_frame_]: 
sink::pull().... (t=0)

[test/../src/flow/node_input.tcc:60, reached_end]: 
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=0, readable_time_span=[1, 1[, writable_time_span=[1, 2[
reader state=0, writer state=-1, end_time=11, read_start_time=1


[test/../src/flow/node_input.tcc:22, begin_read]: 
input::begin_read(time = 1)....

[test/../src/flow/node_input.tcc:60, reached_end]: 
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=0, readable_time_span=[1, 1[, writable_time_span=[1, 2[
reader state=0, writer state=-1, end_time=11, read_start_time=1


[test/../src/flow/node_input.tcc:22, begin_read]: 
input::begin_read(time = 1)....

[test/../src/flow/node_output.h:63, end_write]: 
output::end_write()....

[test/../src/flow/node_output.h:70, end_write]: 
output::end_write()

[test/../src/flow/node_input.tcc:40, begin_read]: 
input::begin_read(time = 1) --> [1, 2[

[src/flow/source_node.cc:54, pull_frame_]: 
source::pull() (t=1, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=1, readable_time_span=[1, 2[, writable_time_span=[2, 2[
reader state=-1, writer state=0, end_time=11, read_start_time=1


[src/flow/source_node.cc:25, pull_frame_]: 
source::pull().... (t=1)

[test/../src/flow/node_output.h:51, begin_write]: 
output::begin_write()....

[src/flow/node.cc:53, pull_frame_]: 
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=1, readable_time_span=[1, 2[, writable_time_span=[2, 2[
reader state=-1, writer state=1, end_time=11, read_start_time=1


[test/../src/flow/node_input.tcc:52, end_read]: 
input::end_read(time = 1)

[test/../src/flow/node_output.h:57, begin_write]: 
output::begin_write() --> [2, 3[ t=2

[test/../src/flow/node_input.tcc:60, reached_end]: 
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=1, readable_time_span=[2, 2[, writable_time_span=[2, 3[
reader state=0, writer state=-1, end_time=11, read_start_time=2


[test/../src/flow/node_output.h:63, end_write]: 
output::end_write()....

[test/../src/flow/node_output.h:70, end_write]: 
output::end_write()

[src/flow/node.cc:67, pull_frame_]: 
node::pull() (t=1, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=1, readable_time_span=[1, 2[, writable_time_span=[2, 2[
reader state=-1, writer state=0, end_time=11, read_start_time=1


[src/flow/node.cc:23, pull_frame_]: 
node::pull().... (time = 1)

[test/../src/flow/node_output.h:51, begin_write]: 
output::begin_write()....

[test/../src/flow/node_input.tcc:40, begin_read]: 
input::begin_read(time = 1) --> [1, 2[

[test/../src/flow/node_input.tcc:52, end_read]: 
input::end_read(time = 1)

[test/../src/flow/node_output.h:57, begin_write]: 
output::begin_write() --> [2, 3[ t=2

[test/../src/flow/node_input.tcc:60, reached_end]: 
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=1, readable_time_span=[2, 2[, writable_time_span=[2, 3[
reader state=0, writer state=-1, end_time=11, read_start_time=2


[test/../src/flow/node_input.tcc:60, reached_end]: 
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=1, readable_time_span=[2, 2[, writable_time_span=[2, 3[
reader state=0, writer state=-1, end_time=11, read_start_time=2


[test/../src/flow/node_input.tcc:22, begin_read]: 
input::begin_read(time = 2)....

[src/flow/sink_node.cc:37, pull_frame_]: 
sink::pull() (t=1)

[src/flow/sink_node.cc:7, pull_frame_]: 
sink::pull().... (t=1)

[test/../src/flow/node_input.tcc:60, reached_end]: 
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=1, readable_time_span=[2, 2[, writable_time_span=[2, 3[
reader state=0, writer state=-1, end_time=11, read_start_time=2


[test/../src/flow/node_output.h:63, end_write]: 
output::end_write()....

[test/../src/flow/node_output.h:70, end_write]: 
output::end_write()

[src/flow/source_node.cc:54, pull_frame_]: 
source::pull() (t=2, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=2, readable_time_span=[2, 3[, writable_time_span=[3, 3[
reader state=1, writer state=0, end_time=11, read_start_time=2


[src/flow/source_node.cc:25, pull_frame_]: 
source::pull().... (t=2)

[test/../src/flow/node_output.h:51, begin_write]: 
output::begin_write()....

[test/../src/flow/node_input.tcc:40, begin_read]: 
input::begin_read(time = 2) --> [2, 3[

[src/flow/node.cc:53, pull_frame_]: 
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=2, readable_time_span=[2, 3[, writable_time_span=[3, 3[
reader state=-1, writer state=1, end_time=11, read_start_time=2


[test/../src/flow/node_input.tcc:52, end_read]: 
input::end_read(time = 2)

[test/../src/flow/node_input.tcc:60, reached_end]: 
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=2, readable_time_span=[3, 3[, writable_time_span=[3, 4[
reader state=0, writer state=1, end_time=11, read_start_time=3


[test/../src/flow/node_output.h:63, end_write]: 
output::end_write()....

[test/../src/flow/node_output.h:70, end_write]: 
output::end_write()

[test/../src/flow/node_output.h:57, begin_write]: 
output::begin_write() --> [3, 4[ t=3

[src/flow/node.cc:67, pull_frame_]: 
node::pull() (t=2, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=2, readable_time_span=[3, 3[, writable_time_span=[3, 4[
reader state=0, writer state=0, end_time=11, read_start_time=3


[test/../src/flow/node_input.tcc:60, reached_end]: 
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=2, readable_time_span=[3, 3[, writable_time_span=[3, 4[
reader state=0, writer state=0, end_time=11, read_start_time=3


[src/flow/node.cc:23, pull_frame_]: 
node::pull().... (time = 2)

[src/flow/sink_node.cc:37, pull_frame_]: 
sink::pull() (t=2)

[src/flow/sink_node.cc:7, pull_frame_]: 
sink::pull().... (t=2)

[test/../src/flow/node_output.h:51, begin_write]: 
output::begin_write()....

[test/../src/flow/node_input.tcc:60, reached_end]: 
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=2, readable_time_span=[3, 3[, writable_time_span=[3, 4[
reader state=0, writer state=-1, end_time=11, read_start_time=3


[test/../src/flow/node_output.h:57, begin_write]: 
output::begin_write() --> [3, 4[ t=3

[test/../src/flow/node_input.tcc:60, reached_end]: 
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=2, readable_time_span=[3, 3[, writable_time_span=[3, 4[
reader state=0, writer state=-1, end_time=11, read_start_time=3


[test/../src/flow/node_output.h:63, end_write]: 
output::end_write()....

[test/../src/flow/node_output.h:70, end_write]: 
output::end_write()

[src/flow/source_node.cc:54, pull_frame_]: 
source::pull() (t=3, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=3, readable_time_span=[3, 4[, writable_time_span=[4, 4[
reader state=0, writer state=0, end_time=11, read_start_time=3


[src/flow/source_node.cc:25, pull_frame_]: 
source::pull().... (t=3)

[test/../src/flow/node_output.h:51, begin_write]: 
output::begin_write()....

[test/../src/flow/node_output.h:57, begin_write]: 
output::begin_write() --> [4, 5[ t=4

[src/flow/node.cc:53, pull_frame_]: 
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=3, readable_time_span=[4, 4[, writable_time_span=[4, 5[
reader state=0, writer state=-1, end_time=11, read_start_time=4


[test/../src/flow/node_input.tcc:60, reached_end]: 
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=3, readable_time_span=[4, 4[, writable_time_span=[4, 5[
reader state=0, writer state=-1, end_time=11, read_start_time=4


[test/../src/flow/node_output.h:63, end_write]: 
output::end_write()....

[test/../src/flow/node_output.h:70, end_write]: 
output::end_write()

[src/flow/node.cc:67, pull_frame_]: 
node::pull() (t=3, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=3, readable_time_span=[4, 4[, writable_time_span=[4, 5[
reader state=0, writer state=0, end_time=11, read_start_time=4


[test/../src/flow/node_input.tcc:60, reached_end]: 
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=3, readable_time_span=[4, 4[, writable_time_span=[4, 5[
reader state=0, writer state=0, end_time=11, read_start_time=4


[src/flow/node.cc:23, pull_frame_]: 
node::pull().... (time = 3)

[test/../src/flow/node_output.h:63, end_write]: 
output::end_write()....

[src/flow/sink_node.cc:37, pull_frame_]: 
sink::pull() (t=3)

[test/../src/flow/node_output.h:51, begin_write]: 
output::begin_write()....

[test/../src/flow/node_output.h:70, end_write]: 
output::end_write()

[src/flow/sink_node.cc:7, pull_frame_]: 
sink::pull().... (t=3)

[test/../src/flow/node_output.h:57, begin_write]: 
output::begin_write() --> [4, 5[ t=4

[src/flow/source_node.cc:54, pull_frame_]: 
source::pull() (t=4, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=4, readable_time_span=[4, 5[, writable_time_span=[5, 5[
reader state=0, writer state=0, end_time=11, read_start_time=4


[test/../src/flow/node_input.tcc:60, reached_end]: 
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=3, readable_time_span=[4, 4[, writable_time_span=[4, 5[
reader state=0, writer state=-1, end_time=11, read_start_time=4


[test/../src/flow/node_input.tcc:60, reached_end]: 
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=4, readable_time_span=[4, 5[, writable_time_span=[5, 5[
reader state=0, writer state=0, end_time=11, read_start_time=4


[src/flow/source_node.cc:25, pull_frame_]: 
source::pull().... (t=4)

[test/../src/flow/node_output.h:51, begin_write]: 
output::begin_write()....

[test/../src/flow/node_input.tcc:22, begin_read]: 
input::begin_read(time = 4)....

[test/../src/flow/node_output.h:57, begin_write]: 
output::begin_write() --> [5, 6[ t=5

[test/../src/flow/node_output.h:63, end_write]: 
output::end_write()....

[test/../src/flow/node_output.h:70, end_write]: 
output::end_write()

[src/flow/source_node.cc:54, pull_frame_]: 
source::pull() (t=5, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=5, readable_time_span=[5, 6[, writable_time_span=[6, 6[
reader state=0, writer state=0, end_time=11, read_start_time=5


[src/flow/source_node.cc:25, pull_frame_]: 
source::pull().... (t=5)

[src/flow/node.cc:53, pull_frame_]: 
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=5, readable_time_span=[5, 6[, writable_time_span=[6, 6[
reader state=0, writer state=0, end_time=11, read_start_time=5


[test/../src/flow/node_output.h:51, begin_write]: 
output::begin_write()....

[test/../src/flow/node_input.tcc:60, reached_end]: 
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=5, readable_time_span=[5, 6[, writable_time_span=[6, 6[
reader state=0, writer state=1, end_time=11, read_start_time=5


[test/../src/flow/node_output.h:63, end_write]: 
output::end_write()....

[test/../src/flow/node_output.h:70, end_write]: 
output::end_write()

[src/flow/node.cc:67, pull_frame_]: 
node::pull() (t=4, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=4, readable_time_span=[4, 5[, writable_time_span=[5, 5[
reader state=1, writer state=0, end_time=11, read_start_time=4


[src/flow/node.cc:23, pull_frame_]: 
node::pull().... (time = 4)

[test/../src/flow/node_output.h:51, begin_write]: 
output::begin_write()....

[test/../src/flow/node_input.tcc:40, begin_read]: 
input::begin_read(time = 4) --> [4, 5[

[test/../src/flow/node_input.tcc:52, end_read]: 
input::end_read(time = 4)

[test/../src/flow/node_input.tcc:60, reached_end]: 
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=4, readable_time_span=[5, 5[, writable_time_span=[5, 6[
reader state=0, writer state=1, end_time=11, read_start_time=5


[test/../src/flow/node_output.h:57, begin_write]: 
output::begin_write() --> [5, 6[ t=5

[src/flow/sink_node.cc:37, pull_frame_]: 
sink::pull() (t=4)

[src/flow/sink_node.cc:7, pull_frame_]: 
sink::pull().... (t=4)

[test/../src/flow/node_input.tcc:60, reached_end]: 
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=4, readable_time_span=[5, 5[, writable_time_span=[5, 6[
reader state=0, writer state=-1, end_time=11, read_start_time=5


[test/../src/flow/node_input.tcc:60, reached_end]: 
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=5, readable_time_span=[5, 6[, writable_time_span=[6, 6[
reader state=0, writer state=1, end_time=11, read_start_time=5


[test/../src/flow/node_output.h:57, begin_write]: 
output::begin_write() --> [6, 7[ t=6

[src/flow/node.cc:53, pull_frame_]: 
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=5, readable_time_span=[6, 6[, writable_time_span=[6, 7[
reader state=0, writer state=-1, end_time=11, read_start_time=6


[test/../src/flow/node_input.tcc:60, reached_end]: 
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=5, readable_time_span=[6, 6[, writable_time_span=[6, 7[
reader state=0, writer state=-1, end_time=11, read_start_time=6


[test/../src/flow/node_output.h:63, end_write]: 
output::end_write()....

[test/../src/flow/node_output.h:70, end_write]: 
output::end_write()

[src/flow/node.cc:67, pull_frame_]: 
node::pull() (t=5, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=5, readable_time_span=[6, 6[, writable_time_span=[6, 7[
reader state=0, writer state=0, end_time=11, read_start_time=6


[test/../src/flow/node_output.h:63, end_write]: 
output::end_write()....

[test/../src/flow/node_input.tcc:60, reached_end]: 
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=5, readable_time_span=[6, 6[, writable_time_span=[6, 7[
reader state=0, writer state=0, end_time=11, read_start_time=6


[src/flow/node.cc:23, pull_frame_]: 
node::pull().... (time = 5)

[test/../src/flow/node_output.h:70, end_write]: 
output::end_write()

[src/flow/sink_node.cc:37, pull_frame_]: 
sink::pull() (t=5)

[test/../src/flow/node_output.h:51, begin_write]: 
output::begin_write()....

[src/flow/sink_node.cc:7, pull_frame_]: 
sink::pull().... (t=5)

[test/../src/flow/node_output.h:57, begin_write]: 
output::begin_write() --> [6, 7[ t=6

[src/flow/source_node.cc:54, pull_frame_]: 
source::pull() (t=6, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=6, readable_time_span=[6, 7[, writable_time_span=[7, 7[
reader state=0, writer state=0, end_time=11, read_start_time=6


[test/../src/flow/node_input.tcc:60, reached_end]: 
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=5, readable_time_span=[6, 6[, writable_time_span=[6, 7[
reader state=0, writer state=-1, end_time=11, read_start_time=6


[src/flow/source_node.cc:25, pull_frame_]: 
source::pull().... (t=6)

[test/../src/flow/node_input.tcc:60, reached_end]: 
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=6, readable_time_span=[6, 7[, writable_time_span=[7, 7[
reader state=0, writer state=0, end_time=11, read_start_time=6


[test/../src/flow/node_input.tcc:22, begin_read]: 
input::begin_read(time = 6)....

[test/../src/flow/node_output.h:51, begin_write]: 
output::begin_write()....

[test/../src/flow/node_input.tcc:22, begin_read]: 
input::begin_read(time = 6)....

[test/../src/flow/node_input.tcc:40, begin_read]: 
input::begin_read(time = 6) --> [6, 7[

[src/flow/node.cc:53, pull_frame_]: 
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=6, readable_time_span=[6, 7[, writable_time_span=[7, 7[
reader state=-1, writer state=1, end_time=11, read_start_time=6


[test/../src/flow/node_input.tcc:52, end_read]: 
input::end_read(time = 6)

[test/../src/flow/node_output.h:57, begin_write]: 
output::begin_write() --> [7, 8[ t=7

[test/../src/flow/node_input.tcc:60, reached_end]: 
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=6, readable_time_span=[7, 7[, writable_time_span=[7, 8[
reader state=0, writer state=-1, end_time=11, read_start_time=7


[test/../src/flow/node_output.h:63, end_write]: 
output::end_write()....

[test/../src/flow/node_output.h:70, end_write]: 
output::end_write()

[src/flow/node.cc:67, pull_frame_]: 
node::pull() (t=6, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=6, readable_time_span=[6, 7[, writable_time_span=[7, 7[
reader state=1, writer state=0, end_time=11, read_start_time=6


[test/../src/flow/node_input.tcc:40, begin_read]: 
input::begin_read(time = 6) --> [6, 7[

[src/flow/node.cc:23, pull_frame_]: 
node::pull().... (time = 6)

[test/../src/flow/node_output.h:51, begin_write]: 
output::begin_write()....

[test/../src/flow/node_input.tcc:52, end_read]: 
input::end_read(time = 6)

[test/../src/flow/node_output.h:57, begin_write]: 
output::begin_write() --> [7, 8[ t=7

[test/../src/flow/node_input.tcc:60, reached_end]: 
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=6, readable_time_span=[7, 7[, writable_time_span=[7, 8[
reader state=0, writer state=-1, end_time=11, read_start_time=7


[test/../src/flow/node_input.tcc:60, reached_end]: 
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=6, readable_time_span=[7, 7[, writable_time_span=[7, 8[
reader state=0, writer state=-1, end_time=11, read_start_time=7


[test/../src/flow/node_input.tcc:22, begin_read]: 
input::begin_read(time = 7)....

[src/flow/sink_node.cc:37, pull_frame_]: 
sink::pull() (t=6)

[src/flow/sink_node.cc:7, pull_frame_]: 
sink::pull().... (t=6)

[test/../src/flow/node_input.tcc:60, reached_end]: 
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=6, readable_time_span=[7, 7[, writable_time_span=[7, 8[
reader state=0, writer state=-1, end_time=11, read_start_time=7


[test/../src/flow/node_input.tcc:22, begin_read]: 
input::begin_read(time = 7)....

[test/../src/flow/node_output.h:63, end_write]: 
output::end_write()....

[test/../src/flow/node_output.h:70, end_write]: 
output::end_write()

[src/flow/source_node.cc:54, pull_frame_]: 
source::pull() (t=7, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=7, readable_time_span=[7, 8[, writable_time_span=[8, 8[
reader state=1, writer state=0, end_time=11, read_start_time=7


[src/flow/source_node.cc:25, pull_frame_]: 
source::pull().... (t=7)

[test/../src/flow/node_output.h:51, begin_write]: 
output::begin_write()....

[test/../src/flow/node_input.tcc:40, begin_read]: 
input::begin_read(time = 7) --> [7, 8[

[src/flow/node.cc:53, pull_frame_]: 
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=7, readable_time_span=[7, 8[, writable_time_span=[8, 8[
reader state=-1, writer state=1, end_time=11, read_start_time=7


[test/../src/flow/node_input.tcc:52, end_read]: 
input::end_read(time = 7)

[test/../src/flow/node_input.tcc:60, reached_end]: 
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=7, readable_time_span=[8, 8[, writable_time_span=[8, 9[
reader state=0, writer state=1, end_time=11, read_start_time=8


[test/../src/flow/node_output.h:63, end_write]: 
output::end_write()....

[test/../src/flow/node_output.h:57, begin_write]: 
output::begin_write() --> [8, 9[ t=8

[test/../src/flow/node_output.h:70, end_write]: 
output::end_write()

[test/../src/flow/node_input.tcc:40, begin_read]: 
input::begin_read(time = 7) --> [7, 8[

[test/../src/flow/node_input.tcc:52, end_read]: 
input::end_read(time = 7)

[test/../src/flow/node_input.tcc:60, reached_end]: 
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
cannot lock mutex for debug_print



[src/flow/node.cc:67, pull_frame_]: 
node::pull() (t=7, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=7, readable_time_span=[8, 8[, writable_time_span=[8, 9[
reader state=0, writer state=0, end_time=11, read_start_time=8


[src/flow/sink_node.cc:37, pull_frame_]: 
sink::pull() (t=7)

[src/flow/node.cc:23, pull_frame_]: 
node::pull().... (time = 7)

[src/flow/sink_node.cc:7, pull_frame_]: 
sink::pull().... (t=7)

[test/../src/flow/node_output.h:51, begin_write]: 
output::begin_write()....

[test/../src/flow/node_output.h:57, begin_write]: 
output::begin_write() --> [8, 9[ t=8

[test/../src/flow/node_input.tcc:60, reached_end]: 
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=7, readable_time_span=[8, 8[, writable_time_span=[8, 9[
reader state=0, writer state=-1, end_time=11, read_start_time=8


[test/../src/flow/node_input.tcc:60, reached_end]: 
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=7, readable_time_span=[8, 8[, writable_time_span=[8, 9[
reader state=0, writer state=-1, end_time=11, read_start_time=8


[test/../src/flow/node_output.h:63, end_write]: 
output::end_write()....

[test/../src/flow/node_output.h:70, end_write]: 
output::end_write()

[src/flow/source_node.cc:54, pull_frame_]: 
source::pull() (t=8, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=8, readable_time_span=[8, 9[, writable_time_span=[9, 9[
reader state=0, writer state=0, end_time=11, read_start_time=8


[src/flow/source_node.cc:25, pull_frame_]: 
source::pull().... (t=8)

[test/../src/flow/node_output.h:51, begin_write]: 
output::begin_write()....

[test/../src/flow/node_output.h:57, begin_write]: 
output::begin_write() --> [9, 10[ t=9

[test/../src/flow/node_output.h:63, end_write]: 
output::end_write()....

[test/../src/flow/node_output.h:70, end_write]: 
output::end_write()

[src/flow/node.cc:53, pull_frame_]: 
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=9, readable_time_span=[9, 10[, writable_time_span=[10, 10[
reader state=0, writer state=0, end_time=11, read_start_time=9


[test/../src/flow/node_input.tcc:60, reached_end]: 
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
cannot lock mutex for debug_print



[src/flow/source_node.cc:54, pull_frame_]: 
source::pull() (t=9, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=9, readable_time_span=[9, 10[, writable_time_span=[10, 10[
reader state=0, writer state=0, end_time=11, read_start_time=9


[test/../src/flow/node_output.h:63, end_write]: 
output::end_write()....

[src/flow/source_node.cc:25, pull_frame_]: 
source::pull().... (t=9)

[test/../src/flow/node_output.h:51, begin_write]: 
output::begin_write()....

[test/../src/flow/node_output.h:70, end_write]: 
output::end_write()

[test/../src/flow/node_input.tcc:60, reached_end]: 
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=8, readable_time_span=[9, 9[, writable_time_span=[9, 10[
reader state=0, writer state=0, end_time=11, read_start_time=9


[src/flow/sink_node.cc:37, pull_frame_]: 
sink::pull() (t=8)

[src/flow/sink_node.cc:7, pull_frame_]: 
sink::pull().... (t=8)

[src/flow/node.cc:67, pull_frame_]: 
node::pull() (t=8, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=8, readable_time_span=[9, 9[, writable_time_span=[9, 10[
reader state=0, writer state=0, end_time=11, read_start_time=9


[src/flow/node.cc:23, pull_frame_]: 
node::pull().... (time = 8)

[test/../src/flow/node_input.tcc:60, reached_end]: 
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=8, readable_time_span=[9, 9[, writable_time_span=[9, 10[
reader state=0, writer state=0, end_time=11, read_start_time=9


[test/../src/flow/node_output.h:51, begin_write]: 
output::begin_write()....

[test/../src/flow/node_input.tcc:22, begin_read]: 
input::begin_read(time = 9)....

[test/../src/flow/node_output.h:57, begin_write]: 
output::begin_write() --> [9, 10[ t=9

[test/../src/flow/node_input.tcc:60, reached_end]: 
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=9, readable_time_span=[9, 10[, writable_time_span=[10, 10[
reader state=0, writer state=1, end_time=11, read_start_time=9


[test/../src/flow/node_output.h:57, begin_write]: 
output::begin_write() --> [10, 11[ t=10

[src/flow/node.cc:53, pull_frame_]: 
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=9, readable_time_span=[10, 10[, writable_time_span=[10, 11[
reader state=0, writer state=-1, end_time=11, read_start_time=10


[test/../src/flow/node_output.h:63, end_write]: 
output::end_write()....

[test/../src/flow/node_input.tcc:60, reached_end]: 
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=9, readable_time_span=[10, 10[, writable_time_span=[10, 11[
reader state=0, writer state=-1, end_time=11, read_start_time=10


[test/../src/flow/node_output.h:63, end_write]: 
output::end_write()....

[test/../src/flow/node_output.h:70, end_write]: 
output::end_write()

[test/../src/flow/node_output.h:70, end_write]: 
output::end_write()

[test/../src/flow/node_input.tcc:40, begin_read]: 
input::begin_read(time = 9) --> [9, 10[

[src/flow/source_node.cc:54, pull_frame_]: 
source::pull() (t=10, end=1), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=10, readable_time_span=[10, 11[, writable_time_span=[11, 11[
reader state=0, writer state=0, end_time=11, read_start_time=10


[src/flow/node.cc:67, pull_frame_]: 
node::pull() (t=9, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=9, readable_time_span=[10, 10[, writable_time_span=[10, 11[
reader state=0, writer state=0, end_time=11, read_start_time=10


[test/../src/flow/node_input.tcc:52, end_read]: 
input::end_read(time = 9)

[src/flow/source_node.cc:14, thread_main_]: 
source:: ended

[src/flow/node.cc:23, pull_frame_]: 
node::pull().... (time = 9)

[test/../src/flow/node_output.h:51, begin_write]: 
output::begin_write()....

[test/../src/flow/node_output.h:57, begin_write]: 
output::begin_write() --> [10, 11[ t=10

[test/../src/flow/node_input.tcc:60, reached_end]: 
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=9, readable_time_span=[10, 10[, writable_time_span=[10, 11[
reader state=0, writer state=-1, end_time=11, read_start_time=10


[src/flow/sink_node.cc:37, pull_frame_]: 
sink::pull() (t=9)

[src/flow/sink_node.cc:7, pull_frame_]: 
sink::pull().... (t=9)

[test/../src/flow/node_input.tcc:60, reached_end]: 
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=10, readable_time_span=[10, 11[, writable_time_span=[11, 11[
reader state=0, writer state=0, end_time=11, read_start_time=10


[test/../src/flow/node_input.tcc:22, begin_read]: 
input::begin_read(time = 10)....

[test/../src/flow/node_input.tcc:60, reached_end]: 
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=9, readable_time_span=[10, 10[, writable_time_span=[10, 11[
reader state=0, writer state=-1, end_time=11, read_start_time=10


[test/../src/flow/node_input.tcc:40, begin_read]: 
input::begin_read(time = 10) --> [10, 11[

[test/../src/flow/node_input.tcc:22, begin_read]: 
input::begin_read(time = 10)....

[src/flow/node.cc:53, pull_frame_]: 
node::pull(), before input end_read:
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=10, readable_time_span=[10, 11[, writable_time_span=[11, 11[
reader state=-1, writer state=0, end_time=11, read_start_time=10


[test/../src/flow/node_input.tcc:52, end_read]: 
input::end_read(time = 10)

[test/../src/flow/node_input.tcc:60, reached_end]: 
reader_reached_end=1 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=10, readable_time_span=[11, 11[, writable_time_span=[11, 12[
reader state=0, writer state=0, end_time=11, read_start_time=11


[test/../src/flow/node_output.h:63, end_write]: 
output::end_write()....

[test/../src/flow/node_output.h:70, end_write]: 
output::end_write()

[src/flow/node.cc:67, pull_frame_]: 
node::pull() (t=10, end=1), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=10, readable_time_span=[10, 11[, writable_time_span=[11, 11[
reader state=1, writer state=0, end_time=11, read_start_time=10


[src/flow/node.cc:14, thread_main_]: 
node:: ended

[test/../src/flow/node_input.tcc:40, begin_read]: 
input::begin_read(time = 10) --> [10, 11[

[test/../src/flow/node_input.tcc:52, end_read]: 
input::end_read(time = 10)

[test/../src/flow/node_input.tcc:60, reached_end]: 
reader_reached_end=1 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=10, readable_time_span=[11, 11[, writable_time_span=[11, 12[
reader state=0, writer state=0, end_time=11, read_start_time=11


[src/flow/sink_node.cc:35, pull_frame_]: 
sink: reached end!

[src/flow/sink_node.cc:37, pull_frame_]: 
sink::pull() (t=10)

[src/flow/graph.cc:53, run_until]: 
graph::reached end!

