[src/flow/sink_node.cc:7, pull_frame_]: 
sink::pull().... (t=-1)

[src/flow/source_node.cc:31, pull_frame_]: 
source::pull().... (t=-1)

[test/../src/flow/node_output.h:51, begin_write]: 
output::begin_write()....

[test/../src/flow/node_output.h:55, begin_write]: 
output::begin_write() --> [0, 1[ t=0

[test/../src/flow/node_input.tcc:75, reached_end]: 
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=-1, readable_time_span=[0, 0[, writable_time_span=[0, 1[
reader state=0, writer state=-1, end_time=100, read_start_time=0


[src/flow/source_node.cc:43, pull_frame_]: 
source::nowrite, 0 > -1

[test/../src/flow/node_input.tcc:22, begin_read]: 
input::begin_read(time = 0)....

[src/flow/source_node.cc:31, pull_frame_]: 
source::pull().... (t=0)

[test/../src/flow/node_output.h:51, begin_write]: 
output::begin_write()....

[test/../src/flow/node_input.tcc:42, begin_read]: 
input::begin_read(time = 0) --> [-1, 0[

[test/../src/flow/node_input.tcc:67, end_read]: 
input::end_read(time = 0)

[test/../src/flow/node_input.tcc:75, reached_end]: 
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=-1, readable_time_span=[0, 0[, writable_time_span=[0, 1[
reader state=0, writer state=1, end_time=100, read_start_time=1


[src/flow/sink_node.cc:37, pull_frame_]: 
sink::pull() (t=0)

[src/flow/sink_node.cc:7, pull_frame_]: 
sink::pull().... (t=0)

[test/../src/flow/node_output.h:55, begin_write]: 
output::begin_write() --> [0, 1[ t=0

[test/../src/flow/node_input.tcc:75, reached_end]: 
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=-1, readable_time_span=[0, 0[, writable_time_span=[0, 1[
reader state=0, writer state=-1, end_time=100, read_start_time=1


[test/../src/flow/node_input.tcc:49, skip]: 
input::skip(time = 1)....

[test/../src/flow/node_output.h:65, end_write]: 
output::end_write()....

[test/../src/flow/node_output.h:72, end_write]: 
output::end_write()

[src/flow/source_node.cc:68, pull_frame_]: 
source::pull() (t=0, end=0), 
[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=0, readable_time_span=[0, 1[, writable_time_span=[1, 1[
reader state=0, writer state=0, end_time=100, read_start_time=1


[src/flow/source_node.cc:31, pull_frame_]: 
source::pull().... (t=0)

[test/../src/flow/node_output.h:51, begin_write]: 
output::begin_write()....

[test/../src/flow/node_output.h:55, begin_write]: 
output::begin_write() --> [2, 3[ t=2

[src/flow/source_node.cc:43, pull_frame_]: 
source::nowrite, 2 > 1

[test/../src/flow/node_input.tcc:75, reached_end]: 
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=1, readable_time_span=[2, 2[, writable_time_span=[2, 3[
reader state=0, writer state=-1, end_time=100, read_start_time=2


[src/flow/source_node.cc:31, pull_frame_]: 
source::pull().... (t=2)

[src/flow/sink_node.cc:37, pull_frame_]: 
sink::pull() (t=1)

[test/../src/flow/node_output.h:51, begin_write]: 
output::begin_write()....

[src/flow/sink_node.cc:7, pull_frame_]: 
sink::pull().... (t=1)

[test/../src/flow/node_input.tcc:75, reached_end]: 
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=1
total_duration=1
last_write_time=1, readable_time_span=[1, 2[, writable_time_span=[2, 2[
reader state=0, writer state=1, end_time=100, read_start_time=2


[test/../src/flow/node_input.tcc:49, skip]: 
input::skip(time = 2)....

[test/../src/flow/node_input.tcc:75, reached_end]: 
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=2, readable_time_span=[3, 3[, writable_time_span=[3, 4[
reader state=0, writer state=1, end_time=100, read_start_time=3


[src/flow/sink_node.cc:37, pull_frame_]: 
sink::pull() (t=2)

[src/flow/sink_node.cc:7, pull_frame_]: 
sink::pull().... (t=2)

[test/../src/flow/node_input.tcc:75, reached_end]: 
reader_reached_end=0 - 
 output:=[frame_shape=(320, 240), required_duration=1, setup=1]
buffer: ndarray_shared_ring: 
ndarray_timed_ring: 
ndarray_ring: read_position=0, write_position=0, full=0
total_duration=1
last_write_time=2, readable_time_span=[3, 3[, writable_time_span=[3, 4[
reader state=0, writer state=1, end_time=100, read_start_time=3


[test/../src/flow/node_input.tcc:49, skip]: 
input::skip(time = 3)....

[test/../src/flow/node_output.h:55, begin_write]: 
output::begin_write() --> [3, 4[ t=3

[src/flow/source_node.cc:43, pull_frame_]: 
source::nowrite, 3 > 1

[src/flow/source_node.cc:31, pull_frame_]: 
source::pull().... (t=3)

[test/../src/flow/node_output.h:51, begin_write]: 
output::begin_write()....

