BASE
- ndarray_view_cast + join finish
- elem_tuple constructor
- use&complete Eigen_vec2 etc
- Eigen::Matrix & color & cv::Vec --> elem_traits
- point types
- elem: valid flag

CORE
- point_cloud
- parallel node (multiple frames in parallel)
- simultaneous begin_read on inputs (and begin_write on outputs)
- opencl node?

- real time, push from source
- index --> actual time units (seconds)
- nodes not 1:1 (skip frames / add frames)
- shared object (=> also in GPU memory)
- stateful/stateless nodes
- thin/implicit node
- activate/desactivate node, skip writter frames


NODES


VSRS
- time window based depth map improvement
- OpenGL texture mapping --> wrapping
- point cloud splatting

- depth map -> point cloud + splat size + specularity model
